{"map":"{\"version\":3,\"sources\":[\"/Users/God/Desktop/github/Port/portfolio/client/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/God/Desktop/github/Port/portfolio/client/src/logo.svg\",\"/Users/God/Desktop/github/Port/portfolio/client/src/pages/home.js\",\"/Users/God/Desktop/github/Port/portfolio/client/src/App.js\",\"/Users/God/Desktop/github/Port/portfolio/client/src/serviceWorker.js\",\"/Users/God/Desktop/github/Port/portfolio/client/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Home\",\"react_default\",\"a\",\"createElement\",\"className\",\"App\",\"home\",\"Switch\",\"Route\",\"exact\",\"path\",\"component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0JCiCzBC,IAAAA,EA/Bf,WAEI,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,UAAf,YAEIH,EAAAC,EAAAC,cAAA,KAAA,KAAA,SAGRF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,UAAf,gBAIJH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,SAAf,iCAGAH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,WAEnBH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,UAAf,4BCFDC,IAAAA,EAdf,WAEE,OACEJ,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,KAAA,KAAA,OACAF,EAAAC,EAAAC,cAACG,EAAD,MACAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWX,IACjCC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWX,OCLrBY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,EAAAA,EAASC,OAEDjB,EAAAC,EAAAC,cAACgB,EAAD,MAGJC,SAASC,eAAe,SDqHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React from 'react';\\n\\nfunction Home() {\\n\\n    return (\\n        <div className=\\\"container-fluid\\\">\\n            <div className=\\\"row\\\">\\n                <div className=\\\"col-12\\\">\\n                    // NavBar\\n                    <h1>HEY</h1>\\n                </div>\\n            </div>\\n            <div className=\\\"row\\\">\\n                <div className=\\\"col-12\\\">\\n                    //Jumbotron\\n                </div>\\n            </div>\\n            <div className=\\\"row\\\">\\n                <div className=\\\"col-2\\\"></div>\\n                <div className=\\\"col-8\\\">\\n                    //Make into components (Apps)\\n                </div>\\n                <div className=\\\"col-2\\\"></div>\\n            </div>\\n            <div className=\\\"row\\\">\\n                <div className=\\\"col-12\\\">\\n                    // Footer\\n                </div>\\n            </div>\\n        </div>\\n    );\\n}\\n\\nexport default Home;\",\"import React from 'react';\\nimport { Switch, Route } from 'react-router-dom';\\n\\nimport Home from './pages/home';\\n\\n\\nimport logo from './logo.svg';\\nimport './App.css';\\n\\nfunction App() {\\n\\n  return (\\n    <div className=\\\"App\\\">\\n      <h1>Hey</h1>\\n      <Home />\\n      <Switch>\\n          <Route exact path=\\\"/\\\" component={Home} />\\n          <Route path=\\\"/home\\\" component={Home} />\\n      </Switch>\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { BrowserRouter } from 'react-router-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(\\n    // <BrowserRouter>\\n        <App />\\n    // </BrowserRouter>\\n    , \\n    document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(e,a,t){},16:function(e,a,t){e.exports=t.p+\"static/media/logo.5d5d9eef.svg\"},17:function(e,a,t){},21:function(e,a,t){\"use strict\";t.r(a);var n=t(0),c=t.n(n),o=t(6),l=t.n(o),r=(t(15),t(22)),m=t(23);var s=function(){return c.a.createElement(\"div\",{className:\"container-fluid\"},c.a.createElement(\"div\",{className:\"row\"},c.a.createElement(\"div\",{className:\"col-12\"},\"// NavBar\",c.a.createElement(\"h1\",null,\"HEY\"))),c.a.createElement(\"div\",{className:\"row\"},c.a.createElement(\"div\",{className:\"col-12\"},\"//Jumbotron\")),c.a.createElement(\"div\",{className:\"row\"},c.a.createElement(\"div\",{className:\"col-2\"}),c.a.createElement(\"div\",{className:\"col-8\"},\"//Make into components (Apps)\"),c.a.createElement(\"div\",{className:\"col-2\"})),c.a.createElement(\"div\",{className:\"row\"},c.a.createElement(\"div\",{className:\"col-12\"},\"// Footer\")))};t(16),t(17);var i=function(){return c.a.createElement(\"div\",{className:\"App\"},c.a.createElement(\"h1\",null,\"Hey\"),c.a.createElement(s,null),c.a.createElement(r.a,null,c.a.createElement(m.a,{exact:!0,path:\"/\",component:s}),c.a.createElement(m.a,{path:\"/home\",component:s})))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(c.a.createElement(i,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},9:function(e,a,t){e.exports=t(21)}},[[9,1,2]]]);","extractedComments":[]}