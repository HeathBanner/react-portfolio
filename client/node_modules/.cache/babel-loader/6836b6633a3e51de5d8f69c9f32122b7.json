{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/pages/Chat/messages/MessageInput.js\";\nimport React, { useEffect } from 'react';\n\nfunction MessageInput(props) {\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isTyping = _useState4[0],\n      setIsTyping = _useState4[1];\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    sendMessage();\n    setMessage({\n      message: ''\n    });\n  }\n\n  ;\n\n  function sendMessage() {\n    props.sendMessage(message);\n  }\n\n  ;\n\n  function sendTyping() {\n    lastUpdateTime = Date.now();\n\n    if (!isTyping) {\n      setIsTyping(true);\n      props.sendTyping(true);\n      startCheckingTyping();\n    }\n  }\n\n  function startCheckingTyping() {\n    console.log('Typing');\n    typingInterval = setInterval(function () {\n      if (Date.now() - lastUpdateTime > 300) {\n        setIsTyping(false);\n        stopCheckingTyping();\n      }\n\n      ;\n    });\n  }\n\n  ;\n\n  function stopCheckingTyping() {\n    console.log('Stop Typing');\n\n    if (typingInterval) {\n      clearInterval(typingInterval);\n      props.sendTyping(false);\n    }\n\n    ;\n  }\n\n  ;\n  return React.createElement(\"div\", {\n    className: \"message-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    className: \"message-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"message\",\n    ref: \"messageinput\",\n    type: \"text\",\n    className: \"form-control\",\n    value: message,\n    autoComplete: 'off',\n    placeholder: \"Type something interesting\",\n    onKeyUp: function onKeyUp(e) {\n      e.keyCode !== 13 && _this.sendTyping();\n    },\n    onChange: function onChange(_ref) {\n      var target = _ref.target;\n\n      _this.setState({\n        message: target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    disabled: message.length < 1,\n    type: \"submit\",\n    className: \"send\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \" Send \")));\n}\n\nexport default MessageInput;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/pages/Chat/messages/MessageInput.js"],"names":["React","useEffect","MessageInput","props","useState","message","setMessage","isTyping","setIsTyping","handleSubmit","e","preventDefault","sendMessage","sendTyping","lastUpdateTime","Date","now","startCheckingTyping","console","log","typingInterval","setInterval","stopCheckingTyping","clearInterval","keyCode","target","setState","value","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAAA,kBAEKC,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,MAElBC,OAFkB;AAAA,MAETC,UAFS;;AAAA,mBAGOF,QAAQ,CAAC,KAAD,CAHf;AAAA;AAAA,MAGlBG,QAHkB;AAAA,MAGRC,WAHQ;;AAKzB,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,WAAW;AACXN,IAAAA,UAAU,CAAC;AAACD,MAAAA,OAAO,EAAE;AAAV,KAAD,CAAV;AACH;;AAAA;;AAED,WAASO,WAAT,GAAuB;AACnBT,IAAAA,KAAK,CAACS,WAAN,CAAkBP,OAAlB;AACH;;AAAA;;AAED,WAASQ,UAAT,GAAsB;AAClBC,IAAAA,cAAc,GAAGC,IAAI,CAACC,GAAL,EAAjB;;AACA,QAAG,CAACT,QAAJ,EAAc;AACVC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAL,MAAAA,KAAK,CAACU,UAAN,CAAiB,IAAjB;AACAI,MAAAA,mBAAmB;AACtB;AACJ;;AAED,WAASA,mBAAT,GAA+B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAC,IAAAA,cAAc,GAAGC,WAAW,CAAC,YAAM;AAC/B,UAAIN,IAAI,CAACC,GAAL,KAAaF,cAAd,GAAgC,GAAnC,EAAwC;AACpCN,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAc,QAAAA,kBAAkB;AACrB;;AAAA;AACJ,KAL2B,CAA5B;AAMH;;AAAA;;AAED,WAASA,kBAAT,GAA8B;AAC1BJ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,QAAGC,cAAH,EAAmB;AACfG,MAAAA,aAAa,CAACH,cAAD,CAAb;AACAjB,MAAAA,KAAK,CAACU,UAAN,CAAiB,KAAjB;AACH;;AAAA;AACJ;;AAAA;AAED,SACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ;AACC,IAAA,QAAQ,EAAG,KAAKJ,YADjB;AAEC,IAAA,SAAS,EAAC,cAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIC;AACC,IAAA,EAAE,EAAG,SADN;AAEC,IAAA,GAAG,EAAI,cAFR;AAGC,IAAA,IAAI,EAAG,MAHR;AAIC,IAAA,SAAS,EAAG,cAJb;AAKC,IAAA,KAAK,EAAKJ,OALX;AAMC,IAAA,YAAY,EAAI,KANjB;AAOC,IAAA,WAAW,EAAG,4BAPf;AAQC,IAAA,OAAO,EAAK,iBAAAK,CAAC,EAAI;AAAEA,MAAAA,CAAC,CAACc,OAAF,KAAc,EAAd,IAAoB,KAAI,CAACX,UAAL,EAApB;AAAuC,KAR3D;AASC,IAAA,QAAQ,EACP,wBAAY;AAAA,UAAVY,MAAU,QAAVA,MAAU;;AACX,MAAA,KAAI,CAACC,QAAL,CAAc;AAACrB,QAAAA,OAAO,EAACoB,MAAM,CAACE;AAAhB,OAAd;AACA,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,EAmBC;AACC,IAAA,QAAQ,EAAKtB,OAAO,CAACuB,MAAR,GAAiB,CAD/B;AAEC,IAAA,IAAI,EAAG,QAFR;AAGC,IAAA,SAAS,EAAG,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBD,CADI,CADJ;AA+BH;;AAED,eAAe1B,YAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nfunction MessageInput(props) {\n\n    const [message, setMessage] = useState('');\n    const [isTyping, setIsTyping] = useState(false);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        sendMessage();\n        setMessage({message: ''});\n    };\n\n    function sendMessage() {\n        props.sendMessage(message);\n    };\n\n    function sendTyping() {\n        lastUpdateTime = Date.now();\n        if(!isTyping) {\n            setIsTyping(true);\n            props.sendTyping(true);\n            startCheckingTyping();\n        }\n    }\n    \n    function startCheckingTyping() {\n        console.log('Typing');\n        typingInterval = setInterval(() => {\n            if((Date.now() - lastUpdateTime) > 300) {\n                setIsTyping(false);\n                stopCheckingTyping();\n            };\n        });\n    };\n\n    function stopCheckingTyping() {\n        console.log('Stop Typing');\n        if(typingInterval) {\n            clearInterval(typingInterval);\n            props.sendTyping(false);\n        };\n    };\n\n    return (\n        <div className=\"message-input\">\n\t\t\t\t<form \n\t\t\t\t\tonSubmit={ this.handleSubmit }\n\t\t\t\t\tclassName=\"message-form\">\n\n\t\t\t\t\t<input \n\t\t\t\t\t\tid = \"message\"\n\t\t\t\t\t\tref = {\"messageinput\"}\n\t\t\t\t\t\ttype = \"text\"\n\t\t\t\t\t\tclassName = \"form-control\"\n\t\t\t\t\t\tvalue = { message }\n\t\t\t\t\t\tautoComplete = {'off'}\n\t\t\t\t\t\tplaceholder = \"Type something interesting\"\n\t\t\t\t\t\tonKeyUp = { e => { e.keyCode !== 13 && this.sendTyping() } }\n\t\t\t\t\t\tonChange = {\n\t\t\t\t\t\t\t({target})=>{\n\t\t\t\t\t\t\t\tthis.setState({message:target.value})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\tdisabled = { message.length < 1 }\n\t\t\t\t\t\ttype = \"submit\"\n\t\t\t\t\t\tclassName = \"send\"\n\n\t\t\t\t\t> Send </button>\n\t\t\t\t</form>\n\n\t\t\t</div>\n    );\n}\n\nexport default MessageInput;"]},"metadata":{},"sourceType":"module"}