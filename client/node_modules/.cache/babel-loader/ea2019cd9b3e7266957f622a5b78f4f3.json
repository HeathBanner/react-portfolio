{"ast":null,"code":"var _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Profile/Friends.js\";\nimport React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GridList, GridListTile, GridListTileBar, ListSubheader, IconButton, Icon, Typography } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      width: '100%',\n      // height: 450,\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      overflow: 'hidden',\n      // backgroundColor: theme.palette.background.paper,\n      margin: '0 auto'\n    },\n    subheader: {\n      textAlign: 'center',\n      margin: '20px 0px'\n    },\n    tile: {\n      marginRight: '10px'\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)'\n    }\n  };\n});\n\nfunction Friends(props) {\n  var classes = useStyles();\n  return React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cellHeight: 180,\n    col: 2.5,\n    className: classes.gridList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(GridListTile, {\n    key: \"Subheader\",\n    cols: 2,\n    style: {\n      height: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(ListSubheader, {\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.subheader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Friends\"))), props.info.friendList.map(function (friend, index) {\n    return React.createElement(GridListTile, {\n      cols: 0.5,\n      className: classes.tile,\n      key: friend._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: friend.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: friend.username,\n      actionIcon: React.createElement(IconButton, {\n        className: classes.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"exit_to_app\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  })));\n}\n\nexport default Friends;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Profile/Friends.js"],"names":["React","Fragment","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","Icon","Typography","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","margin","subheader","textAlign","tile","marginRight","icon","color","Friends","props","classes","height","info","friendList","map","friend","index","_id","img","username"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GridList, GridListTile, GridListTileBar, ListSubheader, IconButton, Icon, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        width: '100%',\n        // height: 450,\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        overflow: 'hidden',\n        // backgroundColor: theme.palette.background.paper,\n        margin: '0 auto',\n    },\n    subheader: {\n        textAlign: 'center',\n        margin: '20px 0px',\n    },\n    tile: {\n        marginRight: '10px',\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n}));\n\nfunction Friends(props) {\n\n    const classes = useStyles();\n\n    return (\n        <div className=\"col-12\">\n                <GridList cellHeight={180} col={2.5} className={classes.gridList}>\n                    <GridListTile key=\"Subheader\" cols={2} style={{height: 'auto'}}>\n                        <ListSubheader component=\"div\">\n                            <Typography variant=\"h4\" className={classes.subheader}>Friends</Typography>\n                        </ListSubheader>\n                    </GridListTile>\n                    {props.info.friendList.map((friend, index) => {\n                        return (\n                            <GridListTile cols={0.5} className={classes.tile} key={friend._id} >\n                                <img src={friend.img} />\n                                <GridListTileBar \n                                    title={friend.username}\n                                    actionIcon={\n                                        <IconButton className={classes.icon}>\n                                            <Icon>exit_to_app</Icon>\n                                        </IconButton>\n                                    }\n                                />\n                            </GridListTile>\n                        )\n                    })}\n                </GridList>\n        </div>\n    );\n}\n\nexport default Friends;"]},"metadata":{},"sourceType":"module"}