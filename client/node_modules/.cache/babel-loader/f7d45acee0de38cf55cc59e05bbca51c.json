{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Register/RegisterForm.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\nimport { InputLabel, Input, Button } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      marginTop: '40px',\n      color: 'black !important',\n      width: '60% !important'\n    },\n    label: {\n      color: 'white !important'\n    },\n    hidden: {\n      transform: 'translate(0, 1.5px) scale(0.75) !important',\n      transformOrigin: 'top left !important',\n      color: 'white !important'\n    },\n    underline: {\n      '&:before': {\n        borderBottom: '1px solid rgb(0, 0, 0) !important'\n      },\n      '&:after': {\n        borderBottom: '2px solid rgb(129, 0, 206) !important'\n      },\n      '&:hover:before': {\n        borderBottom: '2px solid rgb(0, 0, 0) !important'\n      }\n    },\n    input: {\n      '&:-internal-autofill-selected': {\n        backgroundColor: 'black'\n      }\n    },\n    postStory: {\n      display: 'block',\n      margin: '20px auto',\n      padding: '5px 10px',\n      background: 'rgb(129, 0, 206)'\n    },\n    form: {\n      // display: 'flex',\n      // flexWrap: 'wrap',\n      // flexDirection: 'row',\n      width: '50%',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      background: 'rgb(0, 0, 0, 0.08)',\n      padding: '20px'\n    }\n  };\n});\n\nfunction RegisterForm() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      username = _React$useState2[0],\n      setUsername = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      usernameFocus = _React$useState4[0],\n      setUsernameFocus = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      email = _React$useState6[0],\n      setEmail = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      emailFocus = _React$useState8[0],\n      setEmailFocus = _React$useState8[1];\n\n  var _React$useState9 = React.useState(''),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      password = _React$useState10[0],\n      setPassword = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      passwordFocus = _React$useState12[0],\n      setPasswordFocus = _React$useState12[1];\n\n  useEffect(function () {\n    console.log(usernameFocus);\n  });\n  var classes = useStyles();\n\n  function handleFocus() {\n    setUsernameFocus(!usernameFocus);\n  }\n\n  function handleInputChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n\n    if (name === 'username') {\n      setUsername(value);\n    }\n\n    if (name === 'email') {\n      setEmail(value);\n    }\n\n    if (name === 'password') {\n      setPassword(value);\n    }\n  }\n\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    console.log(username, email, password);\n    fetch('/api/users/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        username: username,\n        email: email,\n        password: password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      console.log(result);\n    });\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleOnSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    shrink: username || usernameFocus,\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Username\"), React.createElement(Input, {\n    classes: {\n      underline: classes.underline\n    },\n    onFocus: handleFocus,\n    onBlur: handleFocus,\n    name: \"username\",\n    value: username,\n    type: \"text\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    className: email ? classes.hidden : classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    classes: {\n      underline: classes.underline,\n      input: classes.input\n    },\n    name: \"email\",\n    value: email,\n    type: \"email\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    className: password ? classes.hidden : classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Input, {\n    classes: {\n      underline: classes.underline\n    },\n    variant: \"outlined\",\n    name: \"password\",\n    value: password,\n    type: \"password\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), React.createElement(Fab, {\n    size: \"small\",\n    variant: \"extended\",\n    color: \"primary\",\n    className: classes.postStory,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Register\")));\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Register/RegisterForm.js"],"names":["React","Fragment","useEffect","TextField","FormControl","makeStyles","Icon","Fab","InputLabel","Input","Button","useStyles","theme","root","marginTop","color","width","label","hidden","transform","transformOrigin","underline","borderBottom","input","backgroundColor","postStory","display","margin","padding","background","form","position","top","left","RegisterForm","useState","username","setUsername","usernameFocus","setUsernameFocus","email","setEmail","emailFocus","setEmailFocus","password","setPassword","passwordFocus","setPasswordFocus","console","log","classes","handleFocus","handleInputChange","e","target","name","value","handleOnSubmit","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","json","result"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\nimport { InputLabel, Input, Button } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: '40px',\n        color: 'black !important',\n        width: '60% !important',\n    },\n    label: {\n        color: 'white !important',\n    },\n    hidden: {\n        transform: 'translate(0, 1.5px) scale(0.75) !important',\n        transformOrigin: 'top left !important',\n        color: 'white !important',\n    },\n    underline: {\n        '&:before': {\n            borderBottom: '1px solid rgb(0, 0, 0) !important',\n            },\n        '&:after': {\n            borderBottom: '2px solid rgb(129, 0, 206) !important',\n        },\n        '&:hover:before': {\n            borderBottom: '2px solid rgb(0, 0, 0) !important',\n        }\n    },\n    input: {\n        '&:-internal-autofill-selected': {\n            backgroundColor: 'black',\n        },\n    },\n    postStory: {\n        display: 'block',\n        margin: '20px auto',\n        padding: '5px 10px',\n        background: 'rgb(129, 0, 206)'\n    },\n    form: {\n        // display: 'flex',\n        // flexWrap: 'wrap',\n        // flexDirection: 'row',\n        width: '50%',\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        background: 'rgb(0, 0, 0, 0.08)',\n        padding: '20px',\n    },\n}))\n\n\nfunction RegisterForm() {\n\n    const [username, setUsername] = React.useState('');\n    const [usernameFocus, setUsernameFocus] = React.useState(false);\n    const [email, setEmail] = React.useState('');\n    const [emailFocus, setEmailFocus] = React.useState(false);\n    const [password, setPassword] = React.useState('');\n    const [passwordFocus, setPasswordFocus] = React.useState(false);\n\n\n    useEffect(() => {\n        console.log(usernameFocus)\n    })\n\n    const classes = useStyles();\n\n    function handleFocus() {\n        setUsernameFocus(!usernameFocus);\n    }\n\n    function handleInputChange(e) {\n        const { name, value } = e.target;\n        if(name === 'username'){setUsername(value)}\n        if(name === 'email'){setEmail(value)}\n        if(name === 'password'){setPassword(value)}\n    }\n\n    function handleOnSubmit(e) {\n        e.preventDefault();\n        console.log(username, email, password)\n        fetch('/api/users/register', {\n            method: 'POST',\n            body: JSON.stringify({username: username, email: email, password: password}),\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then(res => res.json())\n        .then((result) => {console.log(result)});\n    }\n\n    return (\n        <Fragment>\n            <form className={classes.form} onSubmit={handleOnSubmit}>\n                    <FormControl className={classes.root}>\n                        <InputLabel shrink={username || usernameFocus} className={classes.label}>Username</InputLabel>\n                        <Input \n                            classes={{underline: classes.underline}}\n                            onFocus={handleFocus}\n                            onBlur={handleFocus}\n                            name='username'\n                            value={username}\n                            type='text'\n                            onChange={handleInputChange}\n                        />\n                    </FormControl>\n                    <FormControl className={classes.root}>\n                        <InputLabel className={email ? classes.hidden : classes.label}>Email</InputLabel>\n                        <Input \n                            classes={{underline: classes.underline, input: classes.input}}\n                            name='email'\n                            value={email}\n                            type=\"email\"\n                            onChange={handleInputChange}\n                        />\n                    </FormControl>\n                    <FormControl className={classes.root}>\n                        <InputLabel className={password ? classes.hidden : classes.label}>Password</InputLabel>\n                        <Input \n                            classes={{underline: classes.underline}}\n                            variant=\"outlined\"\n                            name='password'\n                            value={password}\n                            type=\"password\"\n                            onChange={handleInputChange}\n                        />\n                    </FormControl>\n                        <Fab \n                            size=\"small\" \n                            variant=\"extended\"\n                            color=\"primary\"\n                            className={classes.postStory} \n                            type=\"submit\"\n                        >Register</Fab>\n                \n            </form>\n        </Fragment>\n    );\n}\n\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}