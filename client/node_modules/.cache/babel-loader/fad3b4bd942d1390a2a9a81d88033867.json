{"ast":null,"code":"import _defineProperty from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Story/Timeline.js\";\nimport React, { useContext, Fragment, useState } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport Moment from 'react-moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Collapse, List, ListItem, ListItemText, ListItemAvatar, Divider, Typography, Avatar, Icon, IconButton } from '@material-ui/core';\nimport GetMoment from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      paddingTop: '0px',\n      paddingBottom: '0px'\n    },\n    form: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n});\n\nfunction Timeline() {\n  var classes = useStyles();\n  var auth = useContext(AuthContext);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      openComment = _useState2[0],\n      setOpenComment = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      commentInput = _useState4[0],\n      setCommentInput = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      storyIDs = _useState6[0],\n      setStoryIDs = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      friendStories = _useState8[0],\n      setFriendStories = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      onLoad = _useState10[0],\n      setOnLoad = _useState10[1];\n\n  if (!onLoad && auth.user) {\n    setOnLoad(true);\n    fetch('/api/social/friendStories', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: auth.user.info\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      var storyStorage = result;\n      var storyIDList = {};\n      auth.user.info.authored_stories.map(function (story, index) {\n        storyIDList[story._id] = false;\n        storyStorage.push(story);\n      });\n      storyStorage.sort(function (a, b) {\n        return new Date(a.time) - new Date(b.time);\n      });\n      setFriendStories(storyStorage);\n      setStoryIDs(storyIDList);\n    });\n  }\n\n  function handleDelete(id) {\n    console.log(id);\n    fetch('/api/social/deleteStory', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: id\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      console.log(user);\n      auth.updateAuth(user);\n    });\n  }\n\n  function handleCommentInput(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setCommentInput(value);\n  }\n\n  function handleCommentSubmit(e, id) {\n    e.preventDefault();\n    var username = auth.user.username;\n    var time = GetMoment();\n    console.log(id, commentInput);\n    fetch('api/social/newComment', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: id,\n        comment: commentInput,\n        username: username,\n        time: time\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      console.log(user);\n    });\n  }\n\n  ;\n\n  function renderStories() {\n    if (friendStories) {\n      return friendStories.map(function (story, index) {\n        return React.createElement(Fragment, {\n          key: story._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(ListItemAvatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          alt: story._id,\n          src: \"/imgs/avatar.jpg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: story.text,\n          secondary: React.createElement(Moment, {\n            format: 'dddd h:mm a',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, story.time),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          onClick: function onClick() {\n            return expandComment(story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, storyIDs ? storyIDs[story._id] ? 'expand_less' : 'expand_more' : false)), React.createElement(IconButton, {\n          onClick: function onClick() {\n            return handleDelete(story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"delete_outline\"))), React.createElement(Collapse, {\n          in: storyIDs ? storyIDs[story._id] : false,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(List, {\n          disablePadding: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, renderComments(story.comments)), React.createElement(\"form\", {\n          className: classes.form,\n          onSubmit: function onSubmit(e) {\n            return handleCommentSubmit(e, story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          name: \"123\",\n          value: commentInput,\n          variant: \"outlined\",\n          label: \"Add a comment\",\n          onChange: handleCommentInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"add_circle\")))), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }));\n      });\n    }\n  }\n\n  ;\n\n  function renderComments(comments) {\n    var commentList = [];\n\n    if (comments) {\n      if (comments.length < 5) {\n        commentList = comments.slice(0, comments.length);\n      } else {\n        commentList = comments.slice(0, 5);\n      }\n\n      commentList.sort(function (a, b) {\n        return new Date(a.time) - new Date(b.time);\n      });\n      return commentList.map(function (comment, index) {\n        console.log(comment.time);\n        return React.createElement(ListItem, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: \"\".concat(comment.username, \": \").concat(comment.text),\n          secondary: React.createElement(Moment, {\n            date: comment.time,\n            format: 'dddd h:mm a',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }));\n      });\n    }\n  }\n\n  ;\n\n  function expandComment(id) {\n    var newCommentState = !storyIDs[id];\n    setStoryIDs(_objectSpread({}, storyIDs, _defineProperty({}, id, newCommentState)));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, renderStories()));\n}\n\nexport default Timeline;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Story/Timeline.js"],"names":["React","useContext","Fragment","useState","AuthContext","Moment","makeStyles","TextField","Collapse","List","ListItem","ListItemText","ListItemAvatar","Divider","Typography","Avatar","Icon","IconButton","GetMoment","useStyles","theme","root","backgroundColor","palette","background","paper","paddingTop","paddingBottom","form","display","alignItems","Timeline","classes","auth","openComment","setOpenComment","commentInput","setCommentInput","storyIDs","setStoryIDs","friendStories","setFriendStories","onLoad","setOnLoad","user","fetch","method","body","JSON","stringify","id","info","headers","then","res","json","result","storyStorage","storyIDList","authored_stories","map","story","index","_id","push","sort","a","b","Date","time","handleDelete","console","log","updateAuth","handleCommentInput","e","target","name","value","handleCommentSubmit","preventDefault","username","comment","renderStories","text","expandComment","renderComments","comments","commentList","length","slice","newCommentState"],"mappings":"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","sourcesContent":["import React, { useContext, Fragment, useState } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport Moment from 'react-moment';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Collapse, List, ListItem, ListItemText, ListItemAvatar, Divider, Typography, Avatar, Icon, IconButton} from '@material-ui/core';\n\nimport GetMoment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        paddingTop: '0px',\n        paddingBottom: '0px',\n    },\n    form: {\n        display: 'flex',\n        alignItems: 'center',\n    }\n}));\n\nfunction Timeline() {\n\n    const classes = useStyles();\n    const auth = useContext(AuthContext);\n\n    const [openComment, setOpenComment] = useState(true);\n    const [commentInput, setCommentInput] = useState('');\n\n    const [storyIDs, setStoryIDs] = useState({});\n    const [friendStories, setFriendStories] = useState(false);\n    const [onLoad, setOnLoad] = useState(false);\n\n    if((!onLoad) && (auth.user)){\n        setOnLoad(true);\n        fetch('/api/social/friendStories', {\n            method: 'POST',\n            body: JSON.stringify({id: auth.user.info}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((result) => {\n            var storyStorage = result;\n            var storyIDList = {};\n            auth.user.info.authored_stories.map((story, index) => {\n                storyIDList[story._id] = false\n                storyStorage.push(story);\n            });\n            storyStorage.sort((a, b) => {\n                return new Date(a.time) - new Date(b.time);\n            })\n            setFriendStories(storyStorage);\n            setStoryIDs(storyIDList)\n        })\n    }\n\n    function handleDelete(id) {\n        console.log(id);\n        fetch('/api/social/deleteStory', {\n            method: 'POST',\n            body: JSON.stringify({id: id}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((user) => {\n            console.log(user);\n            auth.updateAuth(user);\n        })\n    }\n\n    function handleCommentInput(e) {\n        const { name, value } = e.target;\n        setCommentInput(value);\n    }\n\n    function handleCommentSubmit(e, id) {\n        e.preventDefault();\n        const {username } = auth.user;\n        const time = GetMoment();\n        console.log(id, commentInput);\n        fetch('api/social/newComment', {\n            method: 'POST',\n            body: JSON.stringify({id: id, comment: commentInput, username: username, time: time}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((user) => {\n            console.log(user);\n        });\n    };\n\n    function renderStories() {\n        \n        if(friendStories) {\n            return (\n                friendStories.map((story, index) => {\n                    return (\n                        <Fragment key={story._id}>\n                            <ListItem>\n                                <ListItemAvatar><Avatar alt={story._id} src=\"/imgs/avatar.jpg\" /></ListItemAvatar>\n                                <ListItemText \n                                    primary={story.text} \n                                    secondary={\n                                        <Moment format={'dddd h:mm a'}>{story.time}</Moment>\n                                    }\n                                >\n                                </ListItemText>\n                                <IconButton onClick={() => expandComment(story._id)}>\n                                    <Icon>{storyIDs ? storyIDs[story._id] ? 'expand_less' : 'expand_more' : false}</Icon>\n                                </IconButton>\n                                <IconButton onClick={() => handleDelete(story._id)}>\n                                    <Icon>delete_outline</Icon>\n                                </IconButton>\n                            </ListItem>\n                            <Collapse in={storyIDs ? storyIDs[story._id] : false} timeout=\"auto\" unmountOnExit>\n                                <List disablePadding>\n                                    {renderComments(story.comments)}\n                                </List>\n                                <form className={classes.form} onSubmit={(e) => handleCommentSubmit(e, story._id)}>\n                                    <TextField\n                                        name='123'\n                                        value={commentInput}\n                                        variant=\"outlined\"\n                                        label=\"Add a comment\"\n                                        onChange={handleCommentInput}\n                                    />\n                                    \n                                    <IconButton type=\"submit\">\n                                        <Icon>add_circle</Icon>\n                                    </IconButton>\n                                </form>\n                            </Collapse>\n                            <Divider />\n                        </Fragment>\n                    );\n                })\n            );\n        }\n    };\n\n    function renderComments(comments) {\n        var commentList = [];\n        if(comments){\n            if(comments.length < 5){commentList = comments.slice(0, comments.length)}\n            else{commentList = comments.slice(0, 5)}\n            commentList.sort((a, b) => {\n                return new Date(a.time) - new Date(b.time);\n            })\n            return (\n                commentList.map((comment, index) => {\n                    console.log(comment.time);\n                    return (  \n                        <ListItem key={index}>\n                            <ListItemText primary={`${comment.username}: ${comment.text}`} secondary={<Moment date={comment.time} format={'dddd h:mm a'} />} />\n                        </ListItem>\n                    );\n                })\n            );\n        }\n        \n    };\n\n    function expandComment(id) {\n        const newCommentState = !storyIDs[id];\n        setStoryIDs({...storyIDs, [id]: newCommentState});\n    }\n\n    return (\n        <div>\n            <List className={classes.root}>\n                {renderStories()}\n            </List>\n        </div>\n    );\n}\n\nexport default Timeline;"]},"metadata":{},"sourceType":"module"}