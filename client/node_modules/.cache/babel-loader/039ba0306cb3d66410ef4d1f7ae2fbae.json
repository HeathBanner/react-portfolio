{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Contact/ContactForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { AppContext } from '../../context/AuthContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Button, Typography, Divider } from '@material-ui/core';\nimport SuccessNotification from '../Notifications/SuccessNotification';\nimport ErrorNotification from '../Notifications/ErrorNotification';\nimport WarningNotification from '../Notifications/WarningNotification';\nvar useStyles = makeStyles(function (theme) {\n  var _paper;\n\n  return {\n    paper: (_paper = {}, _defineProperty(_paper, theme.breakpoints.down('sm'), {\n      width: '90%',\n      padding: '20px 40px'\n    }), _defineProperty(_paper, \"width\", '60%'), _defineProperty(_paper, \"padding\", '20px 40px'), _defineProperty(_paper, \"display\", 'flex'), _defineProperty(_paper, \"justifyContent\", 'center'), _defineProperty(_paper, \"alignItems\", 'center'), _defineProperty(_paper, \"alignContent\", 'center'), _defineProperty(_paper, \"flexWrap\", 'wrap'), _paper),\n    header: {\n      width: '100%',\n      color: '#0000a2'\n    },\n    textFields: {\n      marginTop: 20,\n      width: '100%'\n    },\n    button: {\n      width: '100%',\n      padding: '15px 10px 10px 10px',\n      marginTop: '20px',\n      color: 'white',\n      backgroundColor: '#0000a2',\n      transition: 'all .4s ease',\n      '&:hover': {\n        backgroundColor: '#1f1fc4',\n        transform: 'scale(1.01)'\n      }\n    },\n    snackbar: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    icon: {\n      marginRight: '10px'\n    }\n  };\n});\nvar initInfo = {\n  name: '',\n  email: '',\n  phone: '',\n  message: ''\n};\nvar initNotifications = {\n  open: false,\n  message: ''\n};\n\nvar ContactForm = function ContactForm() {\n  var _useState = useState(_objectSpread({}, initInfo)),\n      _useState2 = _slicedToArray(_useState, 2),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  var _useState3 = useState(_objectSpread({}, initNotifications)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      success = _useState4[0],\n      setSuccess = _useState4[1];\n\n  var _useState5 = useState(_objectSpread({}, initNotifications)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(_objectSpread({}, initNotifications)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      warning = _useState8[0],\n      setWarning = _useState8[1];\n\n  var closeError = function closeError() {\n    setError(_objectSpread({}, initNotifications));\n  };\n\n  var closeSuccess = function closeSuccess() {\n    setSuccess(_objectSpread({}, initNotifications));\n  };\n\n  var closeWarning = function closeWarning() {\n    setWarning(_objectSpread({}, initNotifications));\n  };\n\n  var classes = useStyles();\n  var holder = useContext(AppContext);\n\n  var preSubmit = function preSubmit() {\n    switch (true) {\n      case info.name.length < 1:\n        return setWarning({\n          open: true,\n          message: 'Name must have at least 2 characters'\n        });\n\n      case info.email.length < 2:\n        return setWarning({\n          open: true,\n          message: 'Incorrect email!'\n        });\n\n      case info.message.length < 2:\n        return setWarning({\n          open: true,\n          message: 'Message must have at least 2 characters!'\n        });\n\n      default:\n        return handleSubmit();\n    }\n  };\n\n  var handleSubmit = function handleSubmit() {\n    fetch('/api/contact/newContact', {\n      method: 'POST',\n      body: JSON.stringify(info),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (response) {\n      if (!response) {\n        setError({\n          open: true,\n          message: 'Something went wrong!'\n        });\n      }\n\n      setInfo(_objectSpread({}, initInfo));\n    }).catch(function () {\n      setError({\n        open: true,\n        message: 'Something went wrong!'\n      });\n    });\n  };\n\n  return React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.header,\n    variant: holder.xs ? 'h4' : 'h3',\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Contact Me\"), React.createElement(Divider, {\n    style: {\n      width: '70%',\n      marginBlockStart: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Your Name\",\n    name: \"Name\",\n    required: true,\n    value: info.name,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        name: e.target.value\n      }));\n    },\n    className: classes.textFields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Your Email\",\n    name: \"Email\",\n    type: \"email\",\n    required: true,\n    value: info.email,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        email: e.target.value\n      }));\n    },\n    className: classes.textFields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Your Phone Number\",\n    name: \"Phone\",\n    required: true,\n    value: info.phone,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        phone: e.target.value\n      }));\n    },\n    className: classes.textFields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Message\",\n    name: \"Message\",\n    required: true,\n    value: info.message,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        message: e.target.value\n      }));\n    },\n    className: classes.textFields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: preSubmit,\n    className: classes.button,\n    fullWidth: true,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: holder.xs ? 'body1' : 'h6',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Send\")), React.createElement(SuccessNotification, {\n    success: success,\n    closeSuccess: closeSuccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), React.createElement(ErrorNotification, {\n    error: error,\n    closeError: closeError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }), React.createElement(WarningNotification, {\n    warning: warning,\n    closeWarning: closeWarning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Contact/ContactForm.js"],"names":["React","useState","useContext","AppContext","makeStyles","Paper","TextField","Button","Typography","Divider","SuccessNotification","ErrorNotification","WarningNotification","useStyles","theme","paper","breakpoints","down","width","padding","header","color","textFields","marginTop","button","backgroundColor","transition","transform","snackbar","display","justifyContent","alignItems","icon","marginRight","initInfo","name","email","phone","message","initNotifications","open","ContactForm","info","setInfo","success","setSuccess","error","setError","warning","setWarning","closeError","closeSuccess","closeWarning","classes","holder","preSubmit","length","handleSubmit","fetch","method","body","JSON","stringify","headers","then","res","json","response","catch","xs","marginBlockStart","e","target","value"],"mappings":"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","sourcesContent":["import React, {\n    useState,\n    useContext,\n} from 'react';\n\nimport { AppContext } from '../../context/AuthContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Paper,\n    TextField,\n    Button,\n    Typography,\n    Divider,\n} from '@material-ui/core';\n\nimport SuccessNotification from '../Notifications/SuccessNotification';\nimport ErrorNotification from '../Notifications/ErrorNotification';\nimport WarningNotification from '../Notifications/WarningNotification';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        [theme.breakpoints.down('sm')]: {\n            width: '90%',\n            padding: '20px 40px',\n        },\n        width: '60%',\n        padding: '20px 40px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n    },\n    header: {\n        width: '100%',\n        color: '#0000a2',\n    },\n    textFields: {\n        marginTop: 20,\n        width: '100%',\n    },\n    button: {\n        width: '100%',\n        padding: '15px 10px 10px 10px',\n        marginTop: '20px',\n        color: 'white',\n        backgroundColor: '#0000a2',\n        transition: 'all .4s ease',\n        '&:hover': {\n            backgroundColor: '#1f1fc4',\n            transform: 'scale(1.01)',\n        },\n    },\n    snackbar: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    icon: {\n        marginRight: '10px',\n    },\n}));\n\nconst initInfo = {\n    name: '',\n    email: '',\n    phone: '',\n    message: '',\n};\n\nconst initNotifications = {\n    open: false,\n    message: '',\n};\n\nconst ContactForm = () => {\n\n    const [info, setInfo] = useState({ ...initInfo });\n    const [success, setSuccess] = useState({ ...initNotifications });\n    const [error, setError] = useState({ ...initNotifications });\n    const [warning, setWarning] = useState({ ...initNotifications });\n \n    const closeError = () => { setError({ ...initNotifications }); };\n    const closeSuccess = () => { setSuccess({ ...initNotifications }); };\n    const closeWarning = () => { setWarning({ ...initNotifications }); };\n\n    const classes = useStyles();\n    const holder = useContext(AppContext);\n\n    const preSubmit = () => {\n        switch (true) {\n            case info.name.length < 1:\n                return setWarning({\n                    open: true,\n                    message: 'Name must have at least 2 characters'\n                })\n            case info.email.length < 2:\n                return setWarning({\n                    open: true,\n                    message: 'Incorrect email!',\n                });\n            case info.message.length < 2:\n                return setWarning({\n                    open: true,\n                    message: 'Message must have at least 2 characters!',\n                });\n            default:\n                return handleSubmit();\n        }\n    };\n\n    const handleSubmit = () => {\n        fetch('/api/contact/newContact', {\n            method: 'POST',\n            body: JSON.stringify(info),\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.json())\n            .then((response) => {\n                if (!response) {\n                    setError({\n                        open: true,\n                        message: 'Something went wrong!',\n                    });\n                }\n                setInfo({ ...initInfo });\n            })\n            .catch(() => {\n                setError({\n                    open: true,\n                    message: 'Something went wrong!',\n                });\n            });\n    };\n\n    return (\n        <Paper className={classes.paper}>\n\n            <Typography\n                className={classes.header}\n                variant={holder.xs ? 'h4' : 'h3'}\n                align=\"center\"\n            >\n                Contact Me\n            </Typography>\n            \n            <Divider style={{ width: '70%', marginBlockStart: '5px' }} />\n\n                <TextField \n                    variant=\"outlined\"\n                    label=\"Your Name\"\n                    name=\"Name\"\n                    required\n                    value={info.name}\n                    onChange={(e) => setInfo({ ...info, name: e.target.value })}\n                    className={classes.textFields}\n                />\n\n                <TextField \n                    variant=\"outlined\"\n                    label=\"Your Email\"\n                    name=\"Email\"\n                    type=\"email\"\n                    required\n                    value={info.email}\n                    onChange={(e) => setInfo({ ...info, email: e.target.value })}\n                    className={classes.textFields}\n                />\n\n                <TextField \n                    variant=\"outlined\"\n                    label=\"Your Phone Number\"\n                    name=\"Phone\"\n                    required\n                    value={info.phone}\n                    onChange={(e) => setInfo({ ...info, phone: e.target.value })}\n                    className={classes.textFields}\n                />\n\n                <TextField \n                    variant=\"outlined\"\n                    label=\"Message\"\n                    name=\"Message\"\n                    required\n                    value={info.message}\n                    onChange={(e) => setInfo({ ...info, message: e.target.value })}\n                    className={classes.textFields}\n                />\n\n                <Button\n                    onClick={preSubmit}\n                    className={classes.button}\n                    fullWidth\n                    color='secondary'\n                >\n                    <Typography variant={holder.xs ? 'body1' : 'h6'}>\n                        Send\n                    </Typography>\n                </Button>\n\n\n            <SuccessNotification\n                success={success}\n                closeSuccess={closeSuccess}\n            />\n            <ErrorNotification\n                error={error}\n                closeError={closeError}\n            />\n            <WarningNotification\n                warning={warning}\n                closeWarning={closeWarning}\n            />\n\n        </Paper>\n    );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}