{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/context/Story.js\";\nimport React from 'react';\nimport io from 'socket.io-client';\nexport var CTX = React.createContext();\nvar initState = {\n  chats: []\n};\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var _action$payload$msg = action.payload.msg,\n      from = _action$payload$msg.from,\n      msg = _action$payload$msg.msg,\n      to = _action$payload$msg.to;\n  console.log(from, msg, to);\n\n  switch (action.type) {\n    case 'RECIEVE_MESSAGE':\n      console.log(state);\n      return _defineProperty({\n        chats: _toConsumableArray(state.chats)\n      }, _to, [].concat(_toConsumableArray(state[_to]), [{\n        from: _from,\n        msg: _msg\n      }]));\n\n    case 'NEW_ROOM':\n      var _action$payload = action.payload,\n          _from = _action$payload.from,\n          _msg = _action$payload.msg,\n          _to = _action$payload.to;\n      console.log(_from, _msg, _to);\n      return _defineProperty({\n        chats: _toConsumableArray(state.chats)\n      }, _to, []);\n\n    default:\n      return state;\n  }\n}\n\nvar socket;\n\nfunction Store(props) {\n  var _React$useReducer = React.useReducer(reducer, initState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      chats = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  function sendChatAction(value) {\n    socket.emit('chat message', value);\n    dispatch({\n      type: 'NEW_ROOM',\n      payload: value\n    });\n  }\n\n  if (props.username) {\n    socket.emit('new user', props.username);\n  }\n\n  if (!socket) {\n    socket = io(':3001');\n    socket.on('chat message', function (res) {\n      console.log(res);\n      dispatch({\n        type: 'RECIEVE_MESSAGE',\n        payload: res\n      });\n    });\n  }\n\n  var user = props.username ? props.username.username : 'Anon';\n  return React.createElement(CTX.Provider, {\n    value: {\n      chats: chats,\n      sendChatAction: sendChatAction,\n      user: user\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, props.children);\n}\n\nexport default Store;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/context/Story.js"],"names":["React","io","CTX","createContext","initState","chats","reducer","state","action","payload","msg","from","to","console","log","type","socket","Store","props","useReducer","dispatch","sendChatAction","value","emit","username","on","res","user","children"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAQ,IAAMC,GAAG,GAAGF,KAAK,CAACG,aAAN,EAAZ;AAER,IAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE;AADO,CAAlB;;AAIA,SAASC,OAAT,GAA0C;AAAA,MAAzBC,KAAyB,uEAAnBH,SAAmB;AAAA,MAARI,MAAQ;AAAA,4BACZA,MAAM,CAACC,OAAP,CAAeC,GADH;AAAA,MAC9BC,IAD8B,uBAC9BA,IAD8B;AAAA,MACxBD,GADwB,uBACxBA,GADwB;AAAA,MACnBE,EADmB,uBACnBA,EADmB;AAGtCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBD,GAAlB,EAAuBE,EAAvB;;AACA,UAAOJ,MAAM,CAACO,IAAd;AACI,SAAK,iBAAL;AACIF,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AAEA;AACIF,QAAAA,KAAK,qBACEE,KAAK,CAACF,KADR;AADT,SAIKO,GAJL,+BAIcL,KAAK,CAACK,GAAD,CAJnB,IAIyB;AAACD,QAAAA,IAAI,EAAJA,KAAD;AAAOD,QAAAA,GAAG,EAAHA;AAAP,OAJzB;;AAMJ,SAAK,UAAL;AAAA,4BAC8BF,MAAM,CAACC,OADrC;AAAA,UACYE,KADZ,mBACYA,IADZ;AAAA,UACkBD,IADlB,mBACkBA,GADlB;AAAA,UACuBE,GADvB,mBACuBA,EADvB;AAEIC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAkBD,IAAlB,EAAuBE,GAAvB;AACA;AACIP,QAAAA,KAAK,qBACEE,KAAK,CAACF,KADR;AADT,SAIKO,GAJL,EAIU,EAJV;;AAMJ;AACI,aAAOL,KAAP;AApBR;AAsBH;;AACD,IAAIS,MAAJ;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,0BAEQlB,KAAK,CAACmB,UAAN,CAAiBb,OAAjB,EAA0BF,SAA1B,CAFR;AAAA;AAAA,MAEXC,KAFW;AAAA,MAEJe,QAFI;;AAGd,WAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3BN,IAAAA,MAAM,CAACO,IAAP,CAAY,cAAZ,EAA4BD,KAA5B;AACAF,IAAAA,QAAQ,CAAC;AAACL,MAAAA,IAAI,EAAE,UAAP;AAAmBN,MAAAA,OAAO,EAAEa;AAA5B,KAAD,CAAR;AACH;;AAEL,MAAGJ,KAAK,CAACM,QAAT,EAAmB;AACfR,IAAAA,MAAM,CAACO,IAAP,CAAY,UAAZ,EAAwBL,KAAK,CAACM,QAA9B;AACH;;AAED,MAAI,CAACR,MAAL,EAAa;AACTA,IAAAA,MAAM,GAAGf,EAAE,CAAC,OAAD,CAAX;AAEAe,IAAAA,MAAM,CAACS,EAAP,CAAU,cAAV,EAA0B,UAASC,GAAT,EAAc;AACpCb,MAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACAN,MAAAA,QAAQ,CAAC;AAACL,QAAAA,IAAI,EAAE,iBAAP;AAA0BN,QAAAA,OAAO,EAAEiB;AAAnC,OAAD,CAAR;AACH,KAHD;AAIH;;AAED,MAAMC,IAAI,GAAGT,KAAK,CAACM,QAAN,GAAiBN,KAAK,CAACM,QAAN,CAAeA,QAAhC,GAA2C,MAAxD;AAEA,SACI,oBAAC,GAAD,CAAK,QAAL;AAAc,IAAA,KAAK,EAAE;AAACnB,MAAAA,KAAK,EAALA,KAAD;AAAQgB,MAAAA,cAAc,EAAdA,cAAR;AAAwBM,MAAAA,IAAI,EAAJA;AAAxB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KAAK,CAACU,QADX,CADJ;AAKH;;AAED,eAAeX,KAAf","sourcesContent":["import React from 'react';\nimport io from 'socket.io-client';\n\nexport  const CTX = React.createContext();\n\nconst initState = {\n    chats: [],\n}\n\nfunction reducer(state=initState, action) {\n    const { from, msg, to } = action.payload.msg;\n\n    console.log(from, msg, to);\n    switch(action.type) {\n        case 'RECIEVE_MESSAGE':\n            console.log(state);\n            \n            return {\n                chats: [\n                    ...state.chats,\n                ],\n                [to]: [...state[to], {from, msg}]\n            }\n        case 'NEW_ROOM':\n            const { from, msg, to } = action.payload;\n            console.log(from, msg, to)\n            return {\n                chats: [\n                    ...state.chats,\n                ],\n                [to]: [],\n            }\n        default:\n            return state\n    }\n}\nlet socket;\n\n\nfunction Store(props) {\n    \n    const [chats, dispatch] = React.useReducer(reducer, initState);\n        function sendChatAction(value) {\n            socket.emit('chat message', value);\n            dispatch({type: 'NEW_ROOM', payload: value})\n        }\n    \n    if(props.username) {\n        socket.emit('new user', props.username)\n    }\n\n    if (!socket) {\n        socket = io(':3001');\n\n        socket.on('chat message', function(res) {\n            console.log(res)\n            dispatch({type: 'RECIEVE_MESSAGE', payload: res});\n        })\n    }\n\n    const user = props.username ? props.username.username : 'Anon';\n\n    return (\n        <CTX.Provider value={{chats, sendChatAction, user}}>\n            {props.children}\n        </CTX.Provider>\n    )\n}\n\nexport default Store"]},"metadata":{},"sourceType":"module"}