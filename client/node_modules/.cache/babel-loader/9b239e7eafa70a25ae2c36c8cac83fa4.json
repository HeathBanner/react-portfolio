{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/MtnDream/Editor/Tools/TextSize.js\";\nimport React, { Fragment, useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Menu, MenuItem, Button, Icon } from '@material-ui/core';\nimport { EditorContext } from '../../../../../context/EditorContext';\nvar textOptions = [{\n  cb: 'h1'\n}, {\n  cb: 'h2'\n}, {\n  cb: 'h3'\n}, {\n  cb: 'h4'\n}, {\n  cb: 'h5'\n}, {\n  cb: 'h6'\n}, {\n  cb: 'subtitle1'\n}, {\n  cb: 'subtitle2'\n}, {\n  cb: 'body1'\n}, {\n  cb: 'body2'\n}, {\n  cb: 'caption'\n}, {\n  cb: 'button'\n}, {\n  cb: 'overline'\n}, {\n  cb: 'srOnly'\n}, {\n  cb: 'inherit'\n}];\nvar useStyles = makeStyles(function (theme) {\n  return {};\n});\n\nvar TextSize = function TextSize() {\n  var classes = useStyles();\n  var holder = useContext(EditorContext);\n  var style = holder.textStyle;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1];\n\n  var handleOpen = function handleOpen(e) {\n    setAnchorEl(e.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var wrapper = function wrapper(newStyle) {\n    holder.handleTextStyle(newStyle);\n    handleClose();\n  };\n\n  var sizeSwitch = function sizeSwitch() {\n    switch (holder.sectionMode.el) {\n      case 'body':\n        return React.createElement(Button, {\n          style: {\n            marginRight: 10\n          },\n          onClick: handleOpen,\n          variant: \"contained\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, holder[holder.sectionMode.el][holder.sectionMode.index].textStyle);\n\n      case 'jumbotron':\n        return React.createElement(Button, {\n          style: {\n            marginRight: 10\n          },\n          disabled: true,\n          variant: \"contained\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"lock\"));\n\n      case 'image':\n        return React.createElement(Button, {\n          style: {\n            marginRight: 10\n          },\n          disabled: true,\n          variant: \"contained\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"lock\"));\n\n      case 'readLength':\n        return React.createElement(Button, {\n          style: {\n            marginRight: 10\n          },\n          disabled: true,\n          variant: \"contained\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"lock\"));\n\n      default:\n        return React.createElement(Button, {\n          style: {\n            marginRight: 10\n          },\n          onClick: handleOpen,\n          variant: \"contained\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, holder[holder.sectionMode.el].textStyle);\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, sizeSwitch(), React.createElement(Menu, {\n    id: \"textSize\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, textOptions.map(function (item) {\n    return React.createElement(MenuItem, {\n      key: item.cb,\n      onClick: function onClick() {\n        return wrapper(item.cb);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, item.cb);\n  })));\n};\n\nexport default TextSize;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/MtnDream/Editor/Tools/TextSize.js"],"names":["React","Fragment","useState","useContext","makeStyles","Menu","MenuItem","Button","Icon","EditorContext","textOptions","cb","useStyles","theme","TextSize","classes","holder","style","textStyle","anchorEl","setAnchorEl","handleOpen","e","currentTarget","handleClose","wrapper","newStyle","handleTextStyle","sizeSwitch","sectionMode","el","marginRight","index","Boolean","map","item"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useContext } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Menu, MenuItem, Button, Icon } from '@material-ui/core';\n\nimport { EditorContext } from '../../../../../context/EditorContext';\n\nconst textOptions = [\n    {\n        cb: 'h1'\n    },\n    {\n        cb: 'h2'\n    },\n    {\n        cb: 'h3'\n    },\n    {\n        cb: 'h4'\n    },\n    {\n        cb: 'h5'\n    },\n    {\n        cb: 'h6'\n    },\n    {\n        cb: 'subtitle1'\n    },\n    {\n        cb: 'subtitle2'\n    },\n    {\n        cb: 'body1'\n    },\n    {\n        cb: 'body2'\n    },\n    {\n        cb: 'caption'\n    },\n    {\n        cb: 'button'\n    },\n    {\n        cb: 'overline'\n    },\n    {\n        cb: 'srOnly'\n    },\n    {\n        cb: 'inherit'\n    }\n];\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\nconst TextSize = () => {\n    \n    const classes = useStyles();\n\n    const holder = useContext(EditorContext);\n    const style = holder.textStyle;\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleOpen = (e) => {\n        setAnchorEl(e.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };  \n\n    const wrapper = newStyle => {\n        holder.handleTextStyle(newStyle);\n        handleClose();\n    };\n\n    const sizeSwitch = () => {\n        switch (holder.sectionMode.el) {\n            case 'body':\n                return <Button style={{ marginRight: 10 }} onClick={handleOpen} variant=\"contained\">\n                            {holder[holder.sectionMode.el][holder.sectionMode.index].textStyle}\n                        </Button>;\n            case 'jumbotron':\n                return <Button style={{ marginRight: 10 }} disabled={true} variant=\"contained\">\n                            <Icon>lock</Icon>\n                        </Button>;\n            case 'image':\n                return <Button style={{ marginRight: 10 }} disabled={true} variant=\"contained\">\n                            <Icon>lock</Icon>\n                        </Button>;\n            case 'readLength':\n                return <Button style={{ marginRight: 10 }} disabled={true} variant=\"contained\">\n                            <Icon>lock</Icon>\n                        </Button>;\n            default:\n                return <Button style={{ marginRight: 10 }} onClick={handleOpen} variant=\"contained\">\n                            {holder[holder.sectionMode.el].textStyle}\n                        </Button>;\n        }\n    };\n\n    return (\n        <Fragment>\n            \n            {sizeSwitch()}\n\n            <Menu\n                id=\"textSize\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {\n                    textOptions.map(item => {\n                        return (\n                            <MenuItem key={item.cb} onClick={() => wrapper(item.cb)}>\n                                {item.cb}\n                            </MenuItem>\n                        );\n                    })\n                }    \n            </Menu>\n\n        </Fragment>\n    );\n};\n\nexport default TextSize;\n"]},"metadata":{},"sourceType":"module"}