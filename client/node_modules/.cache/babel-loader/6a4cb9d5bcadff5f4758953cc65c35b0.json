{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Social/Timeline.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, Fragment, useState, useEffect } from 'react';\nimport { AppContext } from '../../../context/AuthContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Collapse, List, ListItem, ListItemText, ListItemAvatar, Divider, Avatar, Icon, IconButton, CircularProgress, Typography } from '@material-ui/core';\nimport Moment from 'react-moment';\nimport GetMoment from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  var _root;\n\n  return {\n    root: (_root = {}, _defineProperty(_root, theme.breakpoints.down('xs'), {\n      width: '90%'\n    }), _defineProperty(_root, \"paddingTop\", '10px'), _defineProperty(_root, \"paddingBottom\", '10px'), _defineProperty(_root, \"width\", '80%'), _defineProperty(_root, \"margin\", '0 auto'), _root),\n    listItem: {\n      marginTop: '20px'\n    },\n    form: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    Collapse: {\n      marginBottom: '20px'\n    },\n    avatar: {\n      height: 60,\n      width: 60,\n      marginRight: 10\n    },\n    iconButton: {\n      backgroundColor: 'rgb(255, 145, 71)'\n    }\n  };\n});\n\nvar Timeline = function Timeline() {\n  var holder = useContext(AppContext);\n  var classes = useStyles();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      commentInput = _useState2[0],\n      setCommentInput = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newComment = _useState4[0],\n      setNewComment = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      storyIDs = _useState6[0],\n      setStoryIDs = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      stories = _useState8[0],\n      setStories = _useState8[1];\n\n  useEffect(function () {\n    if (!holder.auth) {\n      return;\n    }\n\n    fetch('/api/social/friendStories', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: holder.auth.info\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      var storyStorage = result;\n      var storyIDList = {};\n      holder.auth.info.authored_stories.map(function (story) {\n        storyIDList[story._id] = false;\n        storyStorage.push(story);\n      });\n      storyStorage.sort(function (a, b) {\n        return new Date(b.time) - new Date(a.time);\n      });\n      setStories(storyStorage);\n      setStoryIDs(storyIDList);\n    });\n  }, [holder.auth]);\n  useEffect(function () {\n    if (!newComment) {\n      return;\n    }\n\n    setNewComment('');\n    var storyStorage = [];\n    var storyIDList = {};\n    stories.map(function (story) {\n      if (story._id === newComment) {\n        storyStorage.push(story);\n        storyIDList[story._id] = true;\n      } else {\n        storyIDList[story._id] = false;\n        storyStorage.push(story);\n      }\n    });\n    storyStorage.sort(function (a, b) {\n      return new Date(b.time) - new Date(a.time);\n    });\n    setStoryIDs(storyIDList);\n    setStories(storyStorage);\n  }, [newComment]);\n\n  var handleDelete = function handleDelete(id) {\n    fetch('/api/social/deleteStory', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: id\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function () {});\n  };\n\n  var handleCommentInput = function handleCommentInput(e) {\n    var value = e.target.value;\n    setCommentInput(value);\n  };\n\n  var handleCommentSubmit = function handleCommentSubmit(id, username) {\n    var time = GetMoment();\n    var data = {\n      time: time,\n      id: id,\n      userId: holder.auth._id,\n      comment: commentInput\n    };\n    var newStories = stories;\n    newStories.map(function (item, index) {\n      if (item._id === id) {\n        newStories[index].comments.push({\n          authored_by: {\n            info: '5d126d136f6f1085c8df8b81',\n            username: username\n          },\n          text: commentInput,\n          type: 'comment',\n          time: time\n        });\n      }\n    });\n    setStories(newStories);\n    setNewComment(id);\n    fetch('/api/social/newComment', {\n      method: 'POST',\n      body: JSON.stringify({\n        data: data\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function () {\n      setCommentInput('');\n    });\n  };\n\n  var renderTimeline = function renderTimeline() {\n    if (stories) {\n      return stories.map(function (story) {\n        return React.createElement(Paper, {\n          key: story._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          className: classes.listItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(ListItemAvatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          className: classes.avatar,\n          alt: story._id,\n          src: \"https://media.licdn.com/dms/image/C5603AQHqTyUqMrqJZA/profile-displayphoto-shrink_200_200/0?e=1571270400&v=beta&t=Fwpkf09f2GNerYN2fC12EwcsHYivKOPTtRBhechPva4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: React.createElement(Typography, {\n            variant: holder.sm ? 'body1' : 'h6',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }, \"\".concat(story.authored_by.username, \": \").concat(story.text)),\n          secondary: React.createElement(Moment, {\n            date: story.time,\n            format: 'dddd h:mm a',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          onClick: function onClick() {\n            return expandComment(story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          fontSize: holder.sm ? 'small' : 'large',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, storyIDs ? storyIDs[story._id] ? 'expand_less' : 'expand_more' : false)), React.createElement(IconButton, {\n          onClick: function onClick() {\n            return handleDelete(story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          fontSize: holder.sm ? 'small' : 'large',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, \"delete_outline\"))), React.createElement(Collapse, {\n          className: classes.collapse,\n          in: storyIDs ? storyIDs[story._id] : false,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(List, {\n          disablePadding: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, renderComments(story.comments)), React.createElement(\"div\", {\n          className: classes.form,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          style: {\n            width: '100%'\n          },\n          name: \"123\",\n          value: commentInput,\n          variant: \"outlined\",\n          label: \"Add a comment\",\n          onChange: handleCommentInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          className: classes.iconButton,\n          onClick: function onClick() {\n            return handleCommentSubmit(story._id, story.authored_by.username);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          fontSize: holder.sm ? 'small' : 'large',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, \"add_circle\")))));\n      });\n    } else {\n      return React.createElement(CircularProgress, {\n        size: 100,\n        color: \"secondary\",\n        thickness: 2.6,\n        style: {\n          display: 'block',\n          margin: '40px auto 0px auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      });\n    }\n  };\n\n  var renderComments = function renderComments(comments) {\n    var commentList = [];\n\n    if (comments.length < 5) {\n      commentList = comments.slice(0, comments.length);\n    } else {\n      commentList = comments.slice(0, 5);\n    }\n\n    return commentList.map(function (comment, index) {\n      return React.createElement(Fragment, {\n        key: comment.time,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(ListItem, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: React.createElement(Typography, {\n          variant: holder.sm ? 'body1' : 'h6',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, \"\".concat(comment.authored_by.username, \": \").concat(comment.text)),\n        secondary: React.createElement(Moment, {\n          date: comment.time,\n          format: 'dddd h:mm a',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })));\n    });\n  };\n\n  var expandComment = function expandComment(id) {\n    var newCommentState = !storyIDs[id];\n    setStoryIDs(_objectSpread({}, storyIDs, _defineProperty({}, id, newCommentState)));\n  };\n\n  return React.createElement(List, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, renderTimeline());\n};\n\nexport default Timeline;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Social/Timeline.js"],"names":["React","useContext","Fragment","useState","useEffect","AppContext","makeStyles","Paper","TextField","Collapse","List","ListItem","ListItemText","ListItemAvatar","Divider","Avatar","Icon","IconButton","CircularProgress","Typography","Moment","GetMoment","useStyles","theme","root","breakpoints","down","width","listItem","marginTop","form","display","alignItems","marginBottom","avatar","height","marginRight","iconButton","backgroundColor","Timeline","holder","classes","commentInput","setCommentInput","newComment","setNewComment","storyIDs","setStoryIDs","stories","setStories","auth","fetch","method","body","JSON","stringify","id","info","headers","then","res","json","result","storyStorage","storyIDList","authored_stories","map","story","_id","push","sort","a","b","Date","time","handleDelete","handleCommentInput","e","value","target","handleCommentSubmit","username","data","userId","comment","newStories","item","index","comments","authored_by","text","type","renderTimeline","sm","expandComment","collapse","renderComments","margin","commentList","length","slice","newCommentState"],"mappings":"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","sourcesContent":["import React, { useContext, Fragment, useState, useEffect } from 'react';\n\nimport { AppContext } from '../../../context/AuthContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Collapse, List, ListItem, ListItemText, ListItemAvatar, Divider, Avatar, Icon, IconButton, CircularProgress, Typography} from '@material-ui/core';\n\nimport Moment from 'react-moment';\nimport GetMoment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.down('xs')]: {\n            width: '90%',\n        },\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        width: '80%',\n        margin: '0 auto'\n    },\n    listItem: {\n        marginTop: '20px',\n    },\n    form: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    Collapse: {\n        marginBottom: '20px',\n    },\n    avatar: {\n        height: 60,\n        width: 60,\n        marginRight: 10,\n    },\n    iconButton: {\n        backgroundColor: 'rgb(255, 145, 71)'\n    }\n}));\n\nconst Timeline = () => {\n\n    const holder = useContext(AppContext);\n    const classes = useStyles();\n\n    const [commentInput, setCommentInput] = useState('');\n    const [newComment, setNewComment] = useState('');\n\n    const [storyIDs, setStoryIDs] = useState({});\n    const [stories, setStories] = useState('');\n\n    useEffect(() => {\n        if (!holder.auth) { return }\n        fetch('/api/social/friendStories', {\n            method: 'POST',\n            body: JSON.stringify({ id: holder.auth.info }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.json())\n            .then((result) => {\n                let storyStorage = result;\n                let storyIDList = {};\n                holder.auth.info.authored_stories.map((story) => {\n                    storyIDList[story._id] = false;\n                    storyStorage.push(story);\n                });\n                storyStorage.sort((a, b) => {\n                    return new Date(b.time) - new Date(a.time);\n                });\n                setStories(storyStorage);\n                setStoryIDs(storyIDList);\n            });\n    }, [holder.auth]);\n\n    useEffect(() => {\n        if (!newComment) { return }\n            setNewComment('');\n            let storyStorage = [];\n            let storyIDList = {};\n            stories.map((story) => {\n                if (story._id === newComment) {\n                    storyStorage.push(story); \n                    storyIDList[story._id] = true\n                } else {\n                    storyIDList[story._id] = false\n                    storyStorage.push(story); \n                }\n            });\n            storyStorage.sort((a, b) => {\n                return new Date(b.time) - new Date(a.time);\n            });\n            setStoryIDs(storyIDList);\n            setStories(storyStorage);\n    }, [newComment]);\n    \n    const handleDelete = (id) => {\n        fetch('/api/social/deleteStory', {\n            method: 'POST',\n            body: JSON.stringify({ id }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(() => {});\n    };\n\n    const handleCommentInput = (e) => {\n        const { value } = e.target;\n        setCommentInput(value);\n    };\n\n    const handleCommentSubmit = (id, username) => {\n        const time = GetMoment(); \n        const data = {\n            time,\n            id,\n            userId: holder.auth._id,\n            comment: commentInput,\n        };\n        let newStories = stories;\n        newStories.map((item, index) => {    \n            if(item._id === id) {\n                newStories[index].comments.push({\n                    authored_by: { info: '5d126d136f6f1085c8df8b81', username },\n                    text: commentInput,\n                    type: 'comment',\n                    time,\n                });\n            }\n        });\n        setStories(newStories);\n        setNewComment(id);\n        fetch('/api/social/newComment', {\n            method: 'POST',\n            body: JSON.stringify({ data }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.json())\n            .then(() => {\n                setCommentInput('');\n            });\n    };\n\n    const renderTimeline = () => {\n        if (stories) {\n            return (\n                stories.map((story) => (\n\n                    <Paper key={story._id}>\n\n                        <ListItem className={classes.listItem}>\n\n                            <ListItemAvatar>\n                                <Avatar\n                                    className={classes.avatar}\n                                    alt={story._id}\n                                    src={`https://media.licdn.com/dms/image/C5603AQHqTyUqMrqJZA/profile-displayphoto-shrink_200_200/0?e=1571270400&v=beta&t=Fwpkf09f2GNerYN2fC12EwcsHYivKOPTtRBhechPva4`}\n                                />\n                            </ListItemAvatar>\n\n                            <ListItemText \n                                primary={\n                                    <Typography variant={holder.sm ? 'body1' : 'h6'}>\n                                        {`${story.authored_by.username}: ${story.text}`}\n                                    </Typography>\n                                } \n                                secondary={<Moment date={story.time} format={'dddd h:mm a'} />}\n                            />\n                            \n                            <IconButton onClick={() => expandComment(story._id)}>\n                                <Icon fontSize={holder.sm ? 'small' : 'large'}>\n                                    {storyIDs ? storyIDs[story._id] ? 'expand_less' : 'expand_more' : false}\n                                </Icon>\n                            </IconButton>\n\n                            <IconButton onClick={() => handleDelete(story._id)}>\n                                <Icon fontSize={holder.sm ? 'small' : 'large'}>\n                                    delete_outline\n                                </Icon>\n                            </IconButton>\n\n                        </ListItem>\n\n                        <Collapse className={classes.collapse} in={storyIDs ? storyIDs[story._id] : false} timeout=\"auto\" unmountOnExit>\n                            \n                            <List disablePadding>\n                                {renderComments(story.comments)}\n                            </List>\n\n                            <div className={classes.form}>\n\n                                <TextField\n                                    style={{ width: '100%' }}\n                                    name='123'\n                                    value={commentInput}\n                                    variant=\"outlined\"\n                                    label=\"Add a comment\"\n                                    onChange={handleCommentInput}\n                                />\n\n                                <IconButton\n                                    className={classes.iconButton}\n                                    onClick={() => handleCommentSubmit(story._id, story.authored_by.username)}\n                                >\n                                    <Icon fontSize={holder.sm ? 'small' : 'large'}>add_circle</Icon>\n                                </IconButton>\n\n                            </div>\n\n                        </Collapse>\n\n                    </Paper>\n                ))\n            );          \n        } else { return <CircularProgress size={100} color=\"secondary\" thickness={2.6} style={{display: 'block', margin: '40px auto 0px auto'}}  /> }\n    };\n\n    const renderComments = (comments) => {\n        let commentList = [];\n        if (comments.length < 5) { commentList = comments.slice(0, comments.length) }\n        else { commentList = comments.slice(0, 5) }\n        return (\n            commentList.map((comment, index) => {\n                return (  \n                    <Fragment key={comment.time}>\n\n                        <Divider />\n\n                        <ListItem key={index}>\n                            <ListItemText primary={\n                                <Typography variant={holder.sm ? 'body1' : 'h6'}>\n                                    {`${comment.authored_by.username}: ${comment.text}`}\n                                </Typography>\n                                }\n                                secondary={<Moment date={comment.time} format={'dddd h:mm a'} />} />\n                        </ListItem>\n\n                    </Fragment>\n                );\n            })\n        );\n    };\n\n    const expandComment = (id) => {\n        const newCommentState = !storyIDs[id];\n        setStoryIDs({ ...storyIDs, [id]: newCommentState });\n    };\n\n    return (\n        <List className={classes.root}>\n            {renderTimeline()}\n        </List>\n    );\n};\n\nexport default Timeline;\n"]},"metadata":{},"sourceType":"module"}