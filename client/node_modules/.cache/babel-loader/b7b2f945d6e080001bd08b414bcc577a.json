{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Weather/Weather.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppContext } from '../../../context/AuthContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport Search from './Search';\nimport WeatherModule from './WeatherModule';\nimport Description from './Description';\nvar useStyles = makeStyles(function (theme) {\n  var _topDiv, _concept;\n\n  return {\n    weatherSection: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      alignContent: 'flex-start',\n      flexWrap: 'wrap'\n    },\n    topDiv: (_topDiv = {}, _defineProperty(_topDiv, theme.breakpoints.down('sm'), {\n      borderWidth: '90px 100vw 0 0'\n    }), _defineProperty(_topDiv, theme.breakpoints.down('xs'), {\n      borderWidth: '40px 100vw 0 0'\n    }), _defineProperty(_topDiv, \"width\", 0), _defineProperty(_topDiv, \"height\", 0), _defineProperty(_topDiv, \"borderStyle\", 'solid'), _defineProperty(_topDiv, \"borderWidth\", '0 100vw 130px 0'), _defineProperty(_topDiv, \"borderColor\", 'transparent white transparent transparent'), _defineProperty(_topDiv, \"transform\", 'scale(1.0001)'), _topDiv),\n    headerContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    moduleContainer: {\n      marginTop: 50,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      flexWrap: 'wrap'\n    },\n    concept: (_concept = {}, _defineProperty(_concept, theme.breakpoints.down('sm'), {\n      marginTop: 0,\n      marginLeft: 0\n    }), _defineProperty(_concept, \"color\", '#0000a2'), _defineProperty(_concept, \"marginTop\", 30), _defineProperty(_concept, \"marginLeft\", 80), _concept)\n  };\n});\n\nvar Weather = function Weather(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      weather = _useState2[0],\n      setWeather = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      parsedForecast = _useState4[0],\n      setParsedForecast = _useState4[1];\n\n  var classes = useStyles();\n  var media = useContext(AppContext);\n  useEffect(function () {\n    fetch('https://api.openweathermap.org/data/2.5/forecast?lat=35.227085&lon=-80.843124&units=imperial&APPID=4216d1350fe31af9bf5100bb34fa72e2').then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setWeather(result);\n    });\n  }, []);\n  useEffect(function () {\n    if (!weather) {\n      return;\n    }\n\n    var dt = '';\n    var filteredResult = weather.list.filter(function (object) {\n      if (dt === '') {\n        dt = object.dt_txt.split(' ');\n        dt = dt[0];\n        return true;\n      }\n\n      var sample = object.dt_txt.split(' ');\n\n      if (dt !== sample[0]) {\n        dt = sample[0];\n        return true;\n      }\n    });\n    setParsedForecast(filteredResult);\n    props.grabWeather(filteredResult[0]);\n  }, [weather]);\n\n  function updateModule(coords) {\n    setParsedForecast('');\n    fetch(\"https://api.openweathermap.org/data/2.5/forecast?lat=\".concat(coords[0].coord.lat, \"&lon=\").concat(coords[0].coord.lon, \"&units=imperial&APPID=4216d1350fe31af9bf5100bb34fa72e2\")).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setWeather(result);\n    });\n  }\n\n  ;\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.weatherSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.topDiv,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    className: classes.headerContainer,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.concept,\n    variant: media.xs ? 'h5' : 'h4',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Weather Concept\"), React.createElement(Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    className: classes.moduleContainer,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, parsedForecast ? React.createElement(WeatherModule, {\n    forecast: parsedForecast,\n    city: weather.city.name,\n    country: weather.city.country,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }) : '', React.createElement(Search, {\n    updateModule: updateModule,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })));\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Weather/Weather.js"],"names":["React","useEffect","useState","useContext","AppContext","makeStyles","Grid","Typography","Search","WeatherModule","Description","useStyles","theme","weatherSection","display","justifyContent","alignItems","alignContent","flexWrap","topDiv","breakpoints","down","borderWidth","headerContainer","moduleContainer","marginTop","concept","marginLeft","Weather","props","weather","setWeather","parsedForecast","setParsedForecast","classes","media","fetch","then","res","json","result","dt","filteredResult","list","filter","object","dt_txt","split","sample","grabWeather","updateModule","coords","coord","lat","lon","xs","city","name","country"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\n\nimport { AppContext } from '../../../context/AuthContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport Search from './Search';\nimport WeatherModule from './WeatherModule';\nimport Description from './Description';\n\nconst useStyles = makeStyles(theme => ({\n    weatherSection: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        flexWrap: 'wrap',\n    },\n    topDiv: {\n        [theme.breakpoints.down('sm')]: {\n            borderWidth: '90px 100vw 0 0',\n        },\n        [theme.breakpoints.down('xs')]: {\n            borderWidth: '40px 100vw 0 0', \n        },\n        width: 0,\n        height: 0,\n        borderStyle: 'solid',\n        borderWidth: '0 100vw 130px 0',\n        borderColor: 'transparent white transparent transparent',\n        transform: 'scale(1.0001)',\n    },\n    headerContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    moduleContainer: {\n        marginTop: 50,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        flexWrap: 'wrap',\n    },\n    concept: {\n        [theme.breakpoints.down('sm')]: {\n            marginTop: 0,\n            marginLeft: 0,\n        },\n        color: '#0000a2',\n        marginTop: 30,\n        marginLeft: 80,\n    },\n}));\n  \nconst Weather = (props) => {\n\n    const [weather, setWeather] = useState('');\n    const [parsedForecast, setParsedForecast] = useState('');\n\n    const classes = useStyles();\n    const media = useContext(AppContext);\n\n    useEffect(() => {\n        fetch('https://api.openweathermap.org/data/2.5/forecast?lat=35.227085&lon=-80.843124&units=imperial&APPID=4216d1350fe31af9bf5100bb34fa72e2')\n            .then(res => res.json())\n            .then((result) => { \n                setWeather(result);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (!weather) { return }\n        let dt = '';\n        const filteredResult = weather.list.filter((object) => {\n            if(dt === '') {\n                dt = object.dt_txt.split(' ');\n                dt = dt[0];\n                return true;\n            }\n            const sample = object.dt_txt.split(' ')\n            if (dt !== sample[0]) {\n                dt = sample[0];\n                return true;\n            }\n        })\n        setParsedForecast(filteredResult);\n        props.grabWeather(filteredResult[0]);\n    }, [weather]);\n\n    function updateModule(coords) {\n        setParsedForecast('');\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${coords[0].coord.lat}&lon=${coords[0].coord.lon}&units=imperial&APPID=4216d1350fe31af9bf5100bb34fa72e2`)\n            .then(res => res.json())\n            .then((result) => {\n                setWeather(result); \n            });\n    };\n\n    return (\n        <Grid container className={classes.weatherSection}>\n\n            <Grid className={classes.topDiv} item xs={12}></Grid>\n\n            <Grid className={classes.headerContainer} item xs={12}>\n\n                <Typography\n                    className={classes.concept}\n                    variant={media.xs ? 'h5' : 'h4'}\n                >\n                    Weather Concept\n                </Typography>\n\n                <Description />\n\n            </Grid>\n                    \n            <Grid className={classes.moduleContainer} item xs={12}>\n\n                {\n                    parsedForecast ?\n\n                    <WeatherModule \n                        forecast={parsedForecast}\n                        city={weather.city.name}\n                        country={weather.city.country}\n                    />\n                        : \n                    ''\n                }\n\n                <Search updateModule={updateModule} />\n            \n            </Grid>\n\n        </Grid>\n    );\n};\n \nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}