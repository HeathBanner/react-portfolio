{"ast":null,"code":"import _defineProperty from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Chat/ChatContainer.js\";\nimport React, { useState, useContext } from 'react';\nimport { CTX } from '../../../context/Story';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, List, ListItem, ListItemText, Icon, TextField, Button } from '@material-ui/core';\n\nfunction Chat() {\n  var _React$createElement;\n\n  var _useContext = useContext(CTX),\n      allChats = _useContext.allChats,\n      sendChatAction = _useContext.sendChatAction,\n      user = _useContext.user;\n\n  var topics = Object.keys(allChats);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      textValue = _useState2[0],\n      setTextValue = _useState2[1];\n\n  var _useState3 = useState(topics[0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeTopic = _useState4[0],\n      setActiveTopic = _useState4[1];\n\n  function handleChange(e) {\n    var value = e.target.value;\n    setTextValue(value);\n  }\n\n  return React.createElement(Paper, {\n    className: classes.chatPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Chat\"), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, allChats[activeTopic].map(function (chat, index) {\n    return React.createElement(ListItem, {\n      key: index,\n      className: classes.listItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      icon: React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"message\"),\n      label: \"\".concat(chat.from, \": \").concat(chat.msg),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  })), React.createElement(List, {\n    className: classes.chatList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.chatInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(TextField, (_React$createElement = {\n    value: value,\n    variant: \"outlined\"\n  }, _defineProperty(_React$createElement, \"value\", textValue), _defineProperty(_React$createElement, \"onChange\", handleChange), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(Button, {\n    onClick: function onClick() {\n      sendChatAction({\n        from: user,\n        msg: textValue,\n        topic: activeTopic\n      });\n      setTextValue('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Send\")));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Chat/ChatContainer.js"],"names":["React","useState","useContext","CTX","makeStyles","Typography","List","ListItem","ListItemText","Icon","TextField","Button","Chat","allChats","sendChatAction","user","topics","Object","keys","textValue","setTextValue","activeTopic","setActiveTopic","handleChange","e","value","target","classes","chatPaper","map","chat","index","listItem","from","msg","chatList","chatInput","topic"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AAEA,SAASC,GAAT,QAAoB,wBAApB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,YAArC,EAAmDC,IAAnD,EAAyDC,SAAzD,EAAoEC,MAApE,QAAkF,mBAAlF;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AAAA,oBAC+BV,UAAU,CAACC,GAAD,CADzC;AAAA,MACJU,QADI,eACJA,QADI;AAAA,MACMC,cADN,eACMA,cADN;AAAA,MACsBC,IADtB,eACsBA,IADtB;;AAEZ,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYL,QAAZ,CAAf;;AAFY,kBAIsBZ,QAAQ,CAAC,EAAD,CAJ9B;AAAA;AAAA,MAILkB,SAJK;AAAA,MAIMC,YAJN;;AAAA,mBAK0BnB,QAAQ,CAACe,MAAM,CAAC,CAAD,CAAP,CALlC;AAAA;AAAA,MAKLK,WALK;AAAA,MAKQC,cALR;;AAQZ,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AAAA,QACbC,KADa,GACHD,CAAC,CAACE,MADC,CACbD,KADa;AAErBL,IAAAA,YAAY,CAACK,KAAD,CAAZ;AACH;;AAGD,SAEI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEE,OAAO,CAACC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAIA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,QAAQ,CAACQ,WAAD,CAAR,CAAsBQ,GAAtB,CAA0B,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACxC,WACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,MAAA,SAAS,EAAEJ,OAAO,CAACK,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADV;AAEI,MAAA,KAAK,YAAKF,IAAI,CAACG,IAAV,eAAmBH,IAAI,CAACI,GAAxB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQH,GATA,CADL,CAJA,EAiBA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEP,OAAO,CAACQ,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBA,EAqBA;AAAK,IAAA,SAAS,EAAER,OAAO,CAACS,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEX,KADX;AAEI,IAAA,OAAO,EAAC;AAFZ,oDAGWN,SAHX,qDAIcI,YAJd;AAAA;AAAA;AAAA,mFADJ,EAOI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,mBAAM;AAACT,MAAAA,cAAc,CAAC;AAACmB,QAAAA,IAAI,EAAElB,IAAP;AAAamB,QAAAA,GAAG,EAAEf,SAAlB;AAA6BkB,QAAAA,KAAK,EAAEhB;AAApC,OAAD,CAAd;AAAkED,MAAAA,YAAY,CAAC,EAAD,CAAZ;AAAkB,KAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CArBA,CAFJ;AAkCH;;AAED,eAAeR,IAAf","sourcesContent":["import React, {useState, useContext} from 'react';\n\nimport { CTX } from '../../../context/Story';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, List, ListItem, ListItemText, Icon, TextField, Button } from '@material-ui/core';\n\n\nfunction Chat() {\n    const { allChats, sendChatAction, user } = useContext(CTX);\n    const topics = Object.keys(allChats);\n\n    const [textValue, setTextValue] = useState('');\n    const [activeTopic, setActiveTopic] = useState(topics[0]);\n\n\n    function handleChange(e) {\n        const { value } = e.target;\n        setTextValue(value);\n    }\n\n\n    return (\n\n        <Paper className={classes.chatPaper}>\n        <Typography align=\"center\">\n            Chat\n        </Typography>\n        <List>\n            {allChats[activeTopic].map((chat, index) => {\n                return(\n                    <ListItem key={index} className={classes.listItem}>\n                        <Chip \n                            icon={<Icon>message</Icon>}\n                            label={`${chat.from}: ${chat.msg}`}\n                        />\n                    </ListItem>\n                )\n            })}\n        </List>\n\n        <List className={classes.chatList}>\n           \n        </List>\n\n        <div className={classes.chatInput}>\n            <TextField \n                value={value}\n                variant=\"outlined\"\n                value={textValue}\n                onChange={handleChange}\n            />\n            <Button onClick={() => {sendChatAction({from: user, msg: textValue, topic: activeTopic}); setTextValue('');}}>Send</Button>\n        </div>\n    </Paper>\n    ); \n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}