{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/pages/Chat/Chat.js\";\nimport React, { useState, useContext } from 'react';\nimport Store from '../../context/Story';\nimport { CTX } from '../../context/Story';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, List, ListItem, ListItemText, Icon, TextField } from '@material-ui/core';\n\nfunction Chat() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      textValue = _useState2[0],\n      setTextValue = _useState2[1];\n\n  var _useContext = useContext(CTX),\n      _useContext2 = _slicedToArray(_useContext, 1),\n      allChat = _useContext2[0];\n\n  return React.createElement(Store.Provider, {\n    value: allChat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Chat APP\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Topics\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Chat Window\"), [{\n    from: 'user',\n    msg: 'hello'\n  }].map(function (topic) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Chatbox\"), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Name\",\n    value: textValue,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"TopicWindow\"), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, ['topic'].map(function (topic) {\n    return React.createElement(ListItem, {\n      key: topic,\n      button: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: topic,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  })))));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/pages/Chat/Chat.js"],"names":["React","useState","useContext","Store","CTX","makeStyles","Typography","List","ListItem","ListItemText","Icon","TextField","Chat","textValue","setTextValue","allChat","from","msg","map","topic","handleChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,SAASC,GAAT,QAAoB,qBAApB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,YAArC,EAAmDC,IAAnD,EAAyDC,SAAzD,QAA0E,mBAA1E;;AAEA,SAASC,IAAT,GAAgB;AAAA,kBAEsBX,QAAQ,CAAC,EAAD,CAF9B;AAAA;AAAA,MAELY,SAFK;AAAA,MAEMC,YAFN;;AAAA,oBAGMZ,UAAU,CAACE,GAAD,CAHhB;AAAA;AAAA,MAGLW,OAHK;;AAKZ,SACI,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEA,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAGQ,CAAC;AAACC,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,GAAG,EAAE;AAApB,GAAD,EAA+BC,GAA/B,CAAmC,UAAAC,KAAK,EAAI;AACxC,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH,GAPD,CAHR,CAPJ,EAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAC,MAFV;AAGI,IAAA,KAAK,EAAEN,SAHX;AAII,IAAA,QAAQ,EAAEO,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CApBJ,EA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,CAAC,OAAD,EAAUF,GAAV,CAAc,UAAAC,KAAK,EAAI;AACnB,WACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,MAAA,MAAM,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH,GAND,CAFR,CAFJ,CA7BJ,CAFJ,CADJ;AAiDH;;AAED,eAAeP,IAAf","sourcesContent":["import React, { useState, useContext } from 'react';\n\nimport Store from '../../context/Story';\n\nimport { CTX } from '../../context/Story';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, List, ListItem, ListItemText, Icon, TextField } from '@material-ui/core';\n\nfunction Chat() {\n\n    const [textValue, setTextValue] = useState('');\n    const [allChat] = useContext(CTX);\n\n    return (\n        <Store.Provider value={allChat}>\n        \n            <div>\n                <Typography>\n                    Chat APP\n                </Typography>\n                <div>\n                    <Typography>Topics</Typography>\n                </div>\n                <div>\n                    <Typography>Chat Window</Typography>\n                    {\n                        [{from: 'user', msg: 'hello'}].map(topic => {\n                            return (\n                                <div>\n\n                                </div>\n                            )\n\n                        })\n                    }\n                </div>\n                <div>\n                    <Typography>Chatbox</Typography>\n                    <TextField \n                        variant=\"outlined\"\n                        label=\"Name\"\n                        value={textValue}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div>\n                    <Typography>TopicWindow</Typography>\n                    <List>\n                        {\n                            ['topic'].map(topic => {\n                                return(\n                                    <ListItem key={topic} button>\n                                        <ListItemText primary={topic}></ListItemText>\n                                    </ListItem>\n                                )\n                            })\n                        }\n                    </List>\n                </div>\n            </div>\n        </Store.Provider>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}