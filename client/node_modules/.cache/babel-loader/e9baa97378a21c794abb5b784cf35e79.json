{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Login/LoginForm.js\";\nimport React, { Fragment, useContext } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport { InputLabel, Input } from '@material-ui/core';\nimport AuthContext from '../../context/AuthContext';\nimport { Redirect } from 'react-router-dom';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      marginTop: '40px',\n      color: 'black !important',\n      width: '60% !important'\n    },\n    label: {\n      color: 'white !important'\n    },\n    hidden: {\n      transform: 'translate(0, 1.5px) scale(0.75) !important',\n      transformOrigin: 'top left !important',\n      color: 'white !important'\n    },\n    underline: {\n      '&:before': {\n        borderBottom: '1px solid rgb(0, 0, 0) !important'\n      },\n      '&:after': {\n        borderBottom: '2px solid rgb(129, 0, 206) !important'\n      },\n      '&:hover:before': {\n        borderBottom: '2px solid rgb(0, 0, 0) !important'\n      }\n    },\n    input: {\n      backgroundColor: 'transparent !important'\n    },\n    postStory: {\n      display: 'block',\n      margin: '20px auto',\n      padding: '5px 10px',\n      background: 'rgb(129, 0, 206)'\n    },\n    form: {\n      // display: 'flex',\n      // flexWrap: 'wrap',\n      // flexDirection: 'row',\n      width: '50%',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      background: 'rgb(0, 0, 0, 0.08)',\n      padding: '20px'\n    }\n  };\n});\n\nfunction LoginForm() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      emailFocus = _React$useState4[0],\n      setEmailFocus = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      password = _React$useState6[0],\n      setPassword = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      passwordFocus = _React$useState8[0],\n      setPasswordFocus = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      success = _React$useState10[0],\n      setSuccess = _React$useState10[1];\n\n  var context = useContext(AuthContext);\n  var classes = useStyles();\n\n  function handleInputChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n\n    if (name === 'email') {\n      return setEmail(value);\n    }\n\n    if (name === 'password') {\n      return setPassword(value);\n    }\n  }\n\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    console.log(email, password);\n    fetch('/api/users/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        email: email,\n        password: password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (_ref) {\n      var user = _ref.user,\n          token = _ref.token;\n      console.log(user, token);\n      console.log(context);\n      context.onLogin(user, token);\n      console.log('past login');\n      setSuccess(true);\n    });\n  }\n\n  if (success) {\n    return React.createElement(Redirect, {\n      to: '/social',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleOnSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    className: email ? classes.hidden : classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    classes: {\n      underline: classes.underline\n    },\n    name: \"email\",\n    value: email,\n    type: \"email\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    className: password ? classes.hidden : classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Input, {\n    classes: {\n      underline: classes.underline\n    },\n    variant: \"outlined\",\n    name: \"password\",\n    value: password,\n    type: \"password\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), React.createElement(Fab, {\n    size: \"small\",\n    variant: \"extended\",\n    color: \"primary\",\n    className: classes.postStory,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Login\")));\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Login/LoginForm.js"],"names":["React","Fragment","useContext","FormControl","makeStyles","Fab","InputLabel","Input","AuthContext","Redirect","useStyles","theme","root","marginTop","color","width","label","hidden","transform","transformOrigin","underline","borderBottom","input","backgroundColor","postStory","display","margin","padding","background","form","position","top","left","LoginForm","useState","email","setEmail","emailFocus","setEmailFocus","password","setPassword","passwordFocus","setPasswordFocus","success","setSuccess","context","classes","handleInputChange","e","target","name","value","handleOnSubmit","preventDefault","console","log","fetch","method","body","JSON","stringify","headers","then","res","json","user","token","onLogin"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport { InputLabel, Input } from '@material-ui/core';\n\nimport AuthContext from '../../context/AuthContext';\nimport { Redirect } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: '40px',\n        color: 'black !important',\n        width: '60% !important',\n    },\n    label: {\n        color: 'white !important',\n    },\n    hidden: {\n        transform: 'translate(0, 1.5px) scale(0.75) !important',\n        transformOrigin: 'top left !important',\n        color: 'white !important',\n    },\n    underline: {\n        '&:before': {\n            borderBottom: '1px solid rgb(0, 0, 0) !important',\n            },\n        '&:after': {\n            borderBottom: '2px solid rgb(129, 0, 206) !important',\n        },\n        '&:hover:before': {\n            borderBottom: '2px solid rgb(0, 0, 0) !important',\n        }\n    },\n    input: {\n        backgroundColor: 'transparent !important',\n    },\n    postStory: {\n        display: 'block',\n        margin: '20px auto',\n        padding: '5px 10px',\n        background: 'rgb(129, 0, 206)'\n    },\n    form: {\n        // display: 'flex',\n        // flexWrap: 'wrap',\n        // flexDirection: 'row',\n        width: '50%',\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        background: 'rgb(0, 0, 0, 0.08)',\n        padding: '20px',\n    },\n}))\n\n\nfunction LoginForm() {\n\n    const [email, setEmail] = React.useState('');\n    const [emailFocus, setEmailFocus] = React.useState(false);\n    const [password, setPassword] = React.useState('');\n    const [passwordFocus, setPasswordFocus] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n\n\n    const context = useContext(AuthContext);\n\n    const classes = useStyles();\n\n    function handleInputChange(e) {\n        const { name, value } = e.target;\n        if(name === 'email'){return setEmail(value)}\n        if(name === 'password'){return setPassword(value)}\n    }\n\n    function handleOnSubmit(e) {\n        e.preventDefault();\n        console.log(email, password)\n        fetch('/api/users/login', {\n            method: 'POST',\n            body: JSON.stringify({email: email, password: password}),\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then(res => res.json())\n        .then(({ user, token }) => {\n            console.log(user, token);\n            console.log(context)\n            context.onLogin(user, token);\n            console.log('past login')\n            setSuccess(true);\n        });\n    }\n\n    if(success){return <Redirect to={'/social'} />}\n\n    return (\n        <Fragment>\n            <form className={classes.form} onSubmit={handleOnSubmit}>\n                <FormControl className={classes.root}>\n                    <InputLabel className={email ? classes.hidden : classes.label}>Email</InputLabel>\n                    <Input \n                        classes={{underline: classes.underline}}\n                        name='email'\n                        value={email}\n                        type=\"email\"\n                        onChange={handleInputChange}\n                    />\n                </FormControl>\n                <FormControl className={classes.root}>\n                    <InputLabel className={password ? classes.hidden : classes.label}>Password</InputLabel>\n                    <Input \n                        classes={{underline: classes.underline}}\n                        variant=\"outlined\"\n                        name='password'\n                        value={password}\n                        type=\"password\"\n                        onChange={handleInputChange}\n                    />\n                </FormControl>\n                <Fab \n                    size=\"small\" \n                    variant=\"extended\"\n                    color=\"primary\"\n                    className={classes.postStory} \n                    type=\"submit\"\n                >Login</Fab>\n            </form>\n        </Fragment>\n    );\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}