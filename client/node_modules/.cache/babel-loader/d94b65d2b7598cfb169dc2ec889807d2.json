{"ast":null,"code":"import _toConsumableArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Home from './pages/Home/home';\nimport Social from './pages/Social/Social';\nimport Login from './pages/Login/Login';\nimport Register from './pages/Register/Register';\nimport AuthContext from './context/AuthContext';\nimport Settings from './pages/Social/Settings';\nimport FindFriends from './pages/Social/FindFriends';\nimport Profile from './pages/Social/Profile';\nimport TokenStore from './lib/TokenStore';\nimport io from 'socket.io-client';\nimport { USER_CONNECTED } from './socket/events';\nvar socketURL = \"http://localhost:3001\";\n\nfunction App() {\n  var _useState = useState({\n    user: undefined,\n    isLoaded: false,\n    newStory: false,\n    authToken: TokenStore.getToken(),\n    onLogin: handleLogin,\n    onLogout: handleLogout,\n    updateLoaded: updateLoaded,\n    updateDidMount: updateDidMount,\n    updateNewStory: updateNewStory\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      auth = _useState2[0],\n      setAuth = _useState2[1];\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      validated = _React$useState2[0],\n      setValidated = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      didMount = _React$useState4[0],\n      setDidMount = _React$useState4[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      socket = _useState4[0],\n      setSocket = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  function handleLogin(user, authToken) {\n    TokenStore.setToken(authToken);\n    setAuth(_objectSpread({}, auth, {\n      user: user,\n      authToken: authToken\n    }));\n    setValidated(true);\n  }\n\n  function handleLogout() {\n    TokenStore.clearToken();\n    var user = undefined;\n    var authToken = undefined;\n    setAuth(_objectSpread({}, auth, {\n      user: user,\n      authToken: authToken\n    }));\n    return React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n  }\n\n  function updateLoaded(user, isLoaded) {\n    console.log(user);\n    setAuth(_objectSpread({}, auth, {\n      user: user,\n      isLoaded: isLoaded\n    }));\n  }\n\n  function updateDidMount() {\n    setDidMount(false);\n  }\n\n  function updateNewStory(user, newStory) {\n    setAuth.apply(void 0, _toConsumableArray(auth).concat([user, newStory]));\n  }\n\n  function initSocket() {\n    console.log('INIT');\n    var socket = io(socketURL);\n    socket.on('connect', function () {\n      console.log('Connected');\n    });\n    socket.emit(USER_CONNECTED, user);\n    console.log(socket);\n    setSocket(socket);\n    updateUser(\"HeathBanner\");\n  }\n\n  function updateUser(user) {\n    console.log(socket); // socket.emit(USER_CONNECTED, user);\n    // setUser(user);\n  } // function logout() {\n  //   const { socket } = socket\n  //   socket.emit(LOGOUT);\n  //   setUser(null);\n  // }\n\n\n  useEffect(function () {\n    var authToken = auth.authToken;\n    console.log(socket);\n\n    if (!authToken) {\n      return setValidated(false);\n    }\n\n    ;\n\n    if (!didMount) {\n      setDidMount(true);\n      initSocket();\n      fetch('/api/users/me', {\n        headers: {\n          'Authorization': \"Bearer \".concat(authToken)\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (user) {\n        console.log(user);\n\n        if (!user._id) {\n          return setValidated(false);\n        }\n\n        var isLoaded = true;\n        setAuth(_objectSpread({}, auth, {\n          user: user,\n          isLoaded: isLoaded\n        }));\n        setValidated(true);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  });\n  return React.createElement(AuthContext.Provider, {\n    value: auth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, !validated ? React.createElement(Redirect, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }) : '', React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/home\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/social\",\n    exact: true,\n    component: Social,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/social/:handle\",\n    component: Profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/register\",\n    component: Register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/settings\",\n    component: Settings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/findFriends\",\n    component: FindFriends,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/App.js"],"names":["React","useEffect","useState","Switch","Route","Redirect","Home","Social","Login","Register","AuthContext","Settings","FindFriends","Profile","TokenStore","io","USER_CONNECTED","socketURL","App","user","undefined","isLoaded","newStory","authToken","getToken","onLogin","handleLogin","onLogout","handleLogout","updateLoaded","updateDidMount","updateNewStory","auth","setAuth","validated","setValidated","didMount","setDidMount","socket","setSocket","setUser","setToken","clearToken","console","log","initSocket","on","emit","updateUser","fetch","headers","then","res","json","_id","catch","err"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Home from './pages/Home/home';\nimport Social from './pages/Social/Social';\nimport Login from './pages/Login/Login';\nimport Register from './pages/Register/Register';\nimport AuthContext from './context/AuthContext';\nimport Settings from './pages/Social/Settings';\nimport FindFriends from './pages/Social/FindFriends';\nimport Profile from './pages/Social/Profile';\n\nimport TokenStore from './lib/TokenStore';\n\nimport io from 'socket.io-client';\nimport { USER_CONNECTED } from './socket/events';\n\nconst socketURL=\"http://localhost:3001\";\n\nfunction App() {\n\n  const [auth, setAuth] = useState({\n    user: undefined,\n    isLoaded: false,\n    newStory: false,\n    authToken: TokenStore.getToken(),\n    onLogin: handleLogin,\n    onLogout: handleLogout,\n    updateLoaded: updateLoaded,\n    updateDidMount: updateDidMount,\n    updateNewStory: updateNewStory,\n  })\n  const [validated, setValidated] = React.useState(true);\n  const [didMount, setDidMount] = React.useState(false);\n  const [socket, setSocket] = useState(null);\n  const [user , setUser] = useState(null); \n\n\n  function handleLogin(user, authToken) {\n    TokenStore.setToken(authToken);\n    setAuth({...auth, user, authToken});\n    setValidated(true);\n  }\n  \n  function handleLogout() {\n    TokenStore.clearToken();\n    const user = undefined;\n    const authToken = undefined;\n    setAuth({...auth, user, authToken});\n    return <Redirect to=\"/login\" />;\n  }\n\n  function updateLoaded(user, isLoaded) {\n    console.log(user)\n    setAuth({...auth, user, isLoaded})\n  }\n\n  function updateDidMount() {\n    setDidMount(false);\n  }\n  \n  function updateNewStory(user, newStory) {\n    setAuth(...auth, user, newStory);\n  }\n\n  function initSocket ()  {\n    console.log('INIT')\n    const socket = io(socketURL);\n    socket.on('connect', () => {\n        console.log('Connected');\n    })\n    socket.emit(USER_CONNECTED, user);\n    console.log(socket)\n    setSocket(socket);\n    updateUser(\"HeathBanner\")\n  }\n\n  function updateUser(user) {\n    console.log(socket)\n    // socket.emit(USER_CONNECTED, user);\n    // setUser(user);\n  }\n\n  // function logout() {\n  //   const { socket } = socket\n  //   socket.emit(LOGOUT);\n  //   setUser(null);\n  // }\n\n  useEffect(() => {\n    const { authToken } = auth;\n    console.log(socket)\n    if(!authToken){return setValidated(false)};\n    if(!didMount) {\n      setDidMount(true)\n      initSocket()\n      fetch('/api/users/me', {headers:{'Authorization': `Bearer ${authToken}`}})\n      .then(res => res.json())\n      .then((user) => {\n        console.log(user);\n        if(!user._id){return setValidated(false)}\n        const isLoaded = true\n        setAuth({...auth, user, isLoaded})\n        setValidated(true)\n      })\n      .catch(err => console.log(err));\n    }\n  });\n\n  return (\n    <AuthContext.Provider value={auth}>\n      {!validated ? <Redirect to=\"/login\" /> : ''}\n      <div className=\"App\">\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/social\" exact component={Social} />\n            <Route path=\"/social/:handle\" component={Profile} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/settings\" component={Settings} />\n            <Route path=\"/findFriends\" component={FindFriends} />\n        </Switch>\n      </div>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}