{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Weather/Weather.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Parallax } from 'react-parallax';\nimport WeatherModule from './WeatherModule';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n      height: '100%'\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)'\n    },\n    title: {\n      color: theme.palette.primary.light\n    },\n    titleBar: {\n      background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n    }\n  };\n});\n\nfunction Weather() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      weather = _useState2[0],\n      setWeather = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setIsLoaded = _useState4[1];\n\n  var classes = useStyles();\n  useEffect(function () {\n    if (!isLoaded) {\n      fetch('/api.openweathermap.org/data/2.5/forecast?lat=35&lon=139&APPID=4216d1350fe31af9bf5100bb34fa72e2').then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        console.log(result);\n        setWeather(result);\n        setIsLoaded(true);\n      });\n    }\n  });\n  var weatherInfo = [];\n\n  if (isLoaded) {\n    weatherInfo = weather.list.map(function (object) {\n      return React.createElement(GridListTile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(WeatherModule, {\n        weather: object.weather[0].description,\n        image: object.weather[0].icon,\n        temp_max: object.main.temp_max,\n        temp_min: object.main.temp_min,\n        city: weather.city.name,\n        country: weather.city.country,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Parallax, {\n    bgImage: require('./imgs/rowan-heuvel.png'),\n    bgImageAlt: \"Weather\",\n    strength: 400,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"weather-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"weather-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Weather Concept\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"weather-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce sed elit nec nulla finibus vestibulum. Duis posuere ligula elit, id ornare turpis scelerisque eu. Curabitur id gravida velit, nec condimentum diam. Curabitur mattis, nisl vel accumsan porttitor, nisl diam ullamcorper leo, vel luctus justo sapien et turpis. Curabitur mattis justo massa, volutpat hendrerit nisi consequat id. Nulla auctor, sapien a posuere rutrum, lectus ex fermentum enim, et eleifend ipsum erat in tellus. Aenean dignissim porta porttitor. Curabitur at tempus ante. Aliquam malesuada velit in leo mollis, in eleifend odio auctor.\"))), React.createElement(\"div\", {\n    className: \"col-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"weather-module\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cellHeight: 'auto',\n    className: classes.gridList,\n    cols: 1.7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, weatherInfo)))))));\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Weather/Weather.js"],"names":["React","useEffect","useState","Parallax","WeatherModule","makeStyles","GridList","GridListTile","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","height","gridList","transform","title","color","primary","light","titleBar","Weather","weather","setWeather","isLoaded","setIsLoaded","classes","fetch","then","res","json","result","console","log","weatherInfo","list","map","object","description","icon","main","temp_max","temp_min","city","name","country","require"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Parallax } from 'react-parallax';\nimport WeatherModule from './WeatherModule';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n      height: '100%'\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)',\n    },\n    title: {\n      color: theme.palette.primary.light,\n    },\n    titleBar: {\n      background:\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n  }));\n  \n\nfunction Weather() {\n\n    const [weather, setWeather] = useState('');\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const classes = useStyles();\n\n\n    useEffect(() => {\n        if (!isLoaded) {\n            fetch('/api.openweathermap.org/data/2.5/forecast?lat=35&lon=139&APPID=4216d1350fe31af9bf5100bb34fa72e2')\n            .then(res => res.json())\n            .then((result) => {\n                console.log(result);\n                setWeather(result);\n                setIsLoaded(true)\n            });\n        }\n    })\n\n    var weatherInfo = [];\n\n    if (isLoaded) {\n        \n        weatherInfo = weather.list.map(object => {\n            return (\n            <GridListTile >\n                <WeatherModule \n                    weather={object.weather[0].description}\n                    image={object.weather[0].icon}\n                    temp_max={object.main.temp_max}\n                    temp_min={object.main.temp_min}\n                    city={weather.city.name}\n                    country={weather.city.country}\n                />\n            </GridListTile>\n            )\n        })\n    } \n\n\n    return (\n        <div>\n            <Parallax\n                bgImage={require('./imgs/rowan-heuvel.png')}\n                bgImageAlt=\"Weather\"\n                strength={400}\n            >\n                <div className=\"weather-section\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h1 id=\"weather-header\">Weather Concept</h1>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <div id=\"weather-info\">\n                                <h3>Description</h3>\n                                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n                                    Fusce sed elit nec nulla finibus vestibulum. Duis posuere \n                                    ligula elit, id ornare turpis scelerisque eu. Curabitur \n                                    id gravida velit, nec condimentum diam. Curabitur mattis, \n                                    nisl vel accumsan porttitor, nisl diam ullamcorper leo, \n                                    vel luctus justo sapien et turpis. Curabitur mattis justo \n                                    massa, volutpat hendrerit nisi consequat id. Nulla auctor, \n                                    sapien a posuere rutrum, lectus ex fermentum enim, et \n                                    eleifend ipsum erat in tellus. Aenean dignissim porta porttitor. \n                                    Curabitur at tempus ante. Aliquam malesuada velit in leo \n                                    mollis, in eleifend odio auctor.\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div id=\"weather-module\">\n\n                            <GridList cellHeight={'auto'} className={classes.gridList} cols={1.7}>\n                                {weatherInfo}\n                            </GridList>\n                                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Parallax>\n        </div>\n    );\n}\n \nexport default Weather;"]},"metadata":{},"sourceType":"module"}