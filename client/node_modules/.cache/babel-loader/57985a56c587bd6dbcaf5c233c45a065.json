{"ast":null,"code":"var _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Weather/WeatherModule.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Typography, Divider } from '@material-ui/core';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport FormatDate from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    moduleContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    moduleBox: {\n      width: '70%',\n      color: 'white',\n      backgroundColor: 'rgb(0, 0, 0, 0.1)',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center',\n      flexWrap: 'wrap'\n    },\n    weatherBoxes: {\n      width: '33.3%',\n      height: 250,\n      padding: 20,\n      borderRadius: 0,\n      color: 'rgb(255, 255, 255)',\n      backgroundColor: 'rgb(0, 0, 0, 0.1)',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center',\n      flexWrap: 'wrap'\n    },\n    boxHeader: {\n      textTransform: 'capitalize',\n      width: '100%'\n    }\n  };\n});\n\nvar WeatherModule = function WeatherModule(props) {\n  var classes = useStyles();\n  return React.createElement(Grid, {\n    className: classes.moduleContainer,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.moduleBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      width: '100%',\n      padding: '20px 0px 10px 0px'\n    },\n    variant: \"h1\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, props.city), React.createElement(Divider, {\n    style: {\n      width: '70%',\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), props.forecast.map(function (weather) {\n    return React.createElement(Paper, {\n      className: classes.weatherBoxes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: {\n        width: '100%',\n        marginBottom: 20\n      },\n      variant: \"h3\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Moment, {\n      className: classes.day,\n      date: FormatDate(weather.dt_txt),\n      format: \"dddd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.boxHeader,\n      variant: \"h4\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, weather.weather[0].description), React.createElement(\"img\", {\n      src: \"https://openweathermap.org/img/w/\".concat(weather.weather[0].icon, \".png\"),\n      alt: \"Weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      style: {\n        width: '100%'\n      },\n      variant: \"h5\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"High: \", \"\".concat(Math.round(weather.main.temp_max)), \"\\u2109\"), React.createElement(Typography, {\n      style: {\n        width: '100%'\n      },\n      variant: \"h6\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Low: \", \"\".concat(Math.round(weather.main.temp_min)), \"\\u2109\"));\n  })));\n};\n\nexport default WeatherModule; // <Paper className={classes.root}>\n//     <Grid container>\n//         <Paper className={classes.header}>\n//             <Grid item xs={9}>\n//                 <div className={classes.city}>\n//                     <Typography variant=\"h6\">\n//                         {props.city}\n//                     </Typography>\n//                 </div>\n//             </Grid>\n//             <Grid item xs={5}>\n//                 <div className={classes.date}>\n//                         <Typography>\n//                             <Moment className={classes.day} date={date} format=\"dddd\" />\n//                         </Typography>\n//                         <Typography>\n//                             <Moment className={classes.monthYear} date={date} format=\"MMM YYYY\" />\n//                         </Typography>\n//                 </div>\n//             </Grid>\n//         </Paper>\n//     </Grid>\n//     <Grid container>\n//         <Grid item xs={12}>\n//             <Typography variant=\"h6\" align=\"center\" className={classes.weather}>\n//                 {props.weather}\n//             </Typography>\n//         </Grid>\n//     </Grid>\n//     <Grid container>\n//         <Grid item xs={12}>\n//             <Tilt className={classes.img}>\n//                 <img src={image} alt={props.weather} />\n//             </Tilt>\n//         </Grid>\n//     </Grid>\n//     <Grid container>\n//         <Grid item xs={12}>\n//             <Paper style={{width: 180, margin: '0 auto'}}>\n//                 <Typography align=\"center\" variant=\"h6\">\n//                     High: {props.temp_max}&#8457; \n//                 </Typography>\n//                 <Typography align=\"center\">\n//                     Low: {props.temp_min}&#8457;\n//                 </Typography>\n//             </Paper>\n//         </Grid>\n//     </Grid>\n// </Paper>","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Weather/WeatherModule.js"],"names":["React","makeStyles","Grid","Paper","Typography","Divider","Moment","FormatDate","useStyles","theme","moduleContainer","display","justifyContent","alignItems","moduleBox","width","color","backgroundColor","alignContent","flexWrap","weatherBoxes","height","padding","borderRadius","boxHeader","textTransform","WeatherModule","props","classes","city","marginBottom","forecast","map","weather","day","dt_txt","description","icon","Math","round","main","temp_max","temp_min"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Typography, Divider } from '@material-ui/core';\n\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport FormatDate from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    moduleContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    moduleBox: {\n        width: '70%',\n        color: 'white',\n        backgroundColor: 'rgb(0, 0, 0, 0.1)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n    },\n    weatherBoxes: {\n        width: '33.3%',\n        height: 250,\n        padding: 20,\n        borderRadius: 0,\n        color: 'rgb(255, 255, 255)',\n        backgroundColor: 'rgb(0, 0, 0, 0.1)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n    },\n    boxHeader: {\n        textTransform: 'capitalize',\n        width: '100%'\n    },\n}));\n\n\nconst WeatherModule = (props) => {\n    \n    const classes = useStyles();\n\n    return (\n        <Grid className={classes.moduleContainer} item xs={12}>\n\n            <Paper className={classes.moduleBox}>\n\n                <Typography style={{ width: '100%', padding: '20px 0px 10px 0px' }} variant=\"h1\" align=\"center\">\n                    {props.city}\n                </Typography>\n\n                <Divider style={{ width: '70%', marginBottom: 20 }} />\n\n                {\n                    props.forecast.map((weather) => (\n\n                        <Paper className={classes.weatherBoxes}>\n\n                            <Typography style={{ width: '100%', marginBottom: 20 }} variant=\"h3\" align=\"center\">\n                                <Moment className={classes.day} date={FormatDate(weather.dt_txt)} format=\"dddd\" />\n                            </Typography>\n\n                            <Divider style={{ width: '100%' }} />\n\n                            <Typography className={classes.boxHeader} variant=\"h4\" align=\"center\">\n                                {weather.weather[0].description}\n                            </Typography>\n\n                            <img\n                                src={`https://openweathermap.org/img/w/${weather.weather[0].icon}.png`}\n                                alt=\"Weather\"\n                            />\n\n                            <Typography style={{ width: '100%' }} variant=\"h5\" align=\"center\">\n                                High: {`${Math.round(weather.main.temp_max)}`}&#8457;\n                            </Typography>\n\n                            <Typography style={{ width: '100%' }} variant=\"h6\" align=\"center\">\n                                Low: {`${Math.round(weather.main.temp_min)}`}&#8457;\n                            </Typography>\n\n                        </Paper>\n\n                    ))\n                }                \n\n            </Paper>\n\n        </Grid>\n    );\n}\n\nexport default WeatherModule;\n        // <Paper className={classes.root}>\n        //     <Grid container>\n        //         <Paper className={classes.header}>\n        //             <Grid item xs={9}>\n        //                 <div className={classes.city}>\n        //                     <Typography variant=\"h6\">\n        //                         {props.city}\n        //                     </Typography>\n        //                 </div>\n        //             </Grid>\n        //             <Grid item xs={5}>\n        //                 <div className={classes.date}>\n        //                         <Typography>\n        //                             <Moment className={classes.day} date={date} format=\"dddd\" />\n        //                         </Typography>\n        //                         <Typography>\n        //                             <Moment className={classes.monthYear} date={date} format=\"MMM YYYY\" />\n        //                         </Typography>\n        //                 </div>\n        //             </Grid>\n        //         </Paper>\n        //     </Grid>\n        //     <Grid container>\n        //         <Grid item xs={12}>\n        //             <Typography variant=\"h6\" align=\"center\" className={classes.weather}>\n        //                 {props.weather}\n        //             </Typography>\n        //         </Grid>\n        //     </Grid>\n        //     <Grid container>\n        //         <Grid item xs={12}>\n        //             <Tilt className={classes.img}>\n        //                 <img src={image} alt={props.weather} />\n        //             </Tilt>\n        //         </Grid>\n        //     </Grid>\n        //     <Grid container>\n        //         <Grid item xs={12}>\n        //             <Paper style={{width: 180, margin: '0 auto'}}>\n        //                 <Typography align=\"center\" variant=\"h6\">\n        //                     High: {props.temp_max}&#8457; \n        //                 </Typography>\n        //                 <Typography align=\"center\">\n        //                     Low: {props.temp_min}&#8457;\n        //                 </Typography>\n        //             </Paper>\n        //         </Grid>\n        //     </Grid>\n        // </Paper>"]},"metadata":{},"sourceType":"module"}