{"ast":null,"code":"import _toConsumableArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Home/FriendSideBar.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Parallax } from 'react-parallax';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GridList, GridListTile, GridListTileBar, ListSubheader, IconButton, Icon, Typography } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      // overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      width: '100%',\n      // height: 450,\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      // overflow: 'hidden',\n      // backgroundColor: theme.palette.background.paper,\n      margin: '0 auto'\n    },\n    subheader: {\n      textAlign: 'center',\n      margin: '20px 0px'\n    },\n    tile: {\n      marginRight: '10px',\n      marginBottom: '10px',\n      // width: '100%',\n      img: {\n        height: '100%',\n        width: '100%'\n      }\n    },\n    img: {},\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)'\n    }\n  };\n});\n\nfunction Friends(props) {\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      friendList = _useState2[0],\n      setFriendList = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loaded = _useState4[0],\n      setLoaded = _useState4[1];\n\n  useEffect(function () {\n    if (!loaded && props.user) {\n      fetch('/api/social/getFriends', {\n        method: 'POST',\n        body: JSON.stringify({\n          id: props.user._id\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        setFriendList(_toConsumableArray(result));\n        setLoaded(true);\n      });\n    }\n\n    ;\n  });\n\n  function renderFriends() {\n    if (loaded) {\n      return friendList.map(function (friend, index) {\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(GridListTile, {\n          cols: 1,\n          className: classes.tile,\n          style: {\n            backgroundImage: url(friend.info.skyline)\n          },\n          key: friend._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(GridListTileBar, {\n          title: friend.username,\n          actionIcon: React.createElement(IconButton, {\n            className: classes.icon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, \"exit_to_app\")),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        })));\n      });\n    } else {\n      return React.createElement(Typography, {\n        variant: \"h3\",\n        align: \"center\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Sorry, no photos \", \"\\xAF|_(\\u30C4)_/\\xAF\");\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cellHeight: 180,\n    col: 2.5,\n    className: classes.gridList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(GridListTile, {\n    key: \"Subheader\",\n    cols: 2,\n    style: {\n      height: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(ListSubheader, {\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.subheader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Friends\"))), renderFriends()));\n}\n\nexport default Friends;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Home/FriendSideBar.js"],"names":["React","Fragment","useState","useEffect","Parallax","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","Icon","Typography","useStyles","theme","root","display","flexWrap","justifyContent","backgroundColor","palette","background","paper","gridList","width","margin","subheader","textAlign","tile","marginRight","marginBottom","img","height","icon","color","Friends","props","classes","friendList","setFriendList","loaded","setLoaded","user","fetch","method","body","JSON","stringify","id","_id","headers","then","res","json","result","renderFriends","map","friend","index","backgroundImage","url","info","skyline","username"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\n\nimport { Parallax } from 'react-parallax';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GridList, GridListTile, GridListTileBar, ListSubheader, IconButton, Icon, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        // overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        width: '100%',\n        // height: 450,\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        // overflow: 'hidden',\n        // backgroundColor: theme.palette.background.paper,\n        margin: '0 auto',\n    },\n    subheader: {\n        textAlign: 'center',\n        margin: '20px 0px',\n    },\n    tile: {\n        marginRight: '10px',\n        marginBottom: '10px',\n        // width: '100%',\n        img: {\n            height: '100%',\n            width: '100%'\n        }\n    },\n    img: {\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n}));\n\nfunction Friends(props) {\n\n    const classes = useStyles();\n\n    const [friendList, setFriendList] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        if((!loaded) && (props.user)) {\n            fetch('/api/social/getFriends', {\n                method: 'POST',\n                body: JSON.stringify({id: props.user ._id}),\n                headers: {'Content-Type': 'application/json'}\n            }).then(res => res.json())\n            .then((result) => {\n                setFriendList([...result])\n                setLoaded(true);\n            });\n        };\n    });\n\n    function renderFriends() {\n        \n        if(loaded){\n            return (\n                friendList.map((friend, index) => {\n                    return (\n                        <Fragment>\n                            <GridListTile cols={1}  className={classes.tile} style={{backgroundImage: url(friend.info.skyline)}} key={friend._id} >\n                                <GridListTileBar \n                                    title={friend.username}\n                                    actionIcon={\n                                        <IconButton className={classes.icon}>\n                                            <Icon>exit_to_app</Icon>\n                                        </IconButton>\n                                    }\n                                />\n                            </GridListTile>\n                        </Fragment>\n                    )\n                })  \n            );\n        } else {\n            return (\n                <Typography variant=\"h3\" align=\"center\" color=\"textSecondary\" >\n                    Sorry, no photos {`¯|_(ツ)_/¯`}\n                </Typography>\n            );\n        }\n    }\n\n    return (\n        <div className=\"col-12\">\n                <GridList cellHeight={180} col={2.5} className={classes.gridList}>\n                    <GridListTile key=\"Subheader\" cols={2} style={{height: 'auto'}}>\n                        <ListSubheader component=\"div\">\n                            <Typography variant=\"h4\" className={classes.subheader}>Friends</Typography>\n                        </ListSubheader>\n                    </GridListTile>\n                    {renderFriends()}\n                </GridList>\n        </div>\n    );\n}\n\nexport default Friends;"]},"metadata":{},"sourceType":"module"}