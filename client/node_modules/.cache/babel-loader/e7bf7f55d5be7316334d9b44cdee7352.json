{"ast":null,"code":"var _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Social/ProfileShell/Photos.js\";\nimport React, { Fragment } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, GridList, GridListTile, GridListTileBar, IconButton, Icon } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      backgroundColor: theme.palette.background.paper // width: '70%',\n\n    },\n    header: {\n      margin: '20px 0px',\n      textAlign: 'center'\n    },\n    gridList: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      overflow: 'hidden',\n      width: '70%',\n      margin: '0 auto !important'\n    },\n    tile: {\n      width: 800\n    },\n    titleBar: {\n      background: 'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' + 'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n    },\n    icon: {\n      color: 'white'\n    },\n    sorry: {}\n  };\n});\n\nfunction Photos(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n  var xs = useMediaQuery(theme.breakpoints.down('xs'));\n  var sm = useMediaQuery(theme.breakpoints.down('sm'));\n  var md = useMediaQuery(theme.breakpoints.down('md'));\n\n  var gridHeight = function gridHeight() {\n    if (xs) {\n      return 120;\n    }\n\n    if (sm) {\n      return 240;\n    }\n\n    if (md) {\n      return 300;\n    }\n  };\n\n  var gridCols = function gridCols() {\n    if (xs) {\n      return 1.6;\n    }\n\n    if (sm) {\n      return 2;\n    }\n\n    if (md) {\n      return 2;\n    }\n  };\n\n  function renderPhotos() {\n    if (props.info.gallery.length >= 1) {\n      return props.info.gallery.map(function (photo, index) {\n        return React.createElement(GridListTile, {\n          cols: 1,\n          key: index,\n          className: classes.tile,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: photo.img,\n          alt: photo.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(GridListTileBar, {\n          title: photo.title,\n          titlePosition: \"top\",\n          actionIcon: React.createElement(IconButton, {\n            className: classes.icon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, \"star_border\")),\n          actionPosition: \"left\",\n          className: classes.titleBar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }));\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: classes.sorry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Sorry, no photos to show\"), React.createElement(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"\\xAF|_(\\u30C4)_/\\xAF\"));\n    }\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    color: \"textSecondary\",\n    className: classes.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Gallery\")), React.createElement(Grid, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cols: gridCols(),\n    cellHeight: gridHeight(),\n    spacing: 12,\n    className: classes.gridList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, renderPhotos())));\n}\n\nexport default Photos;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Social/ProfileShell/Photos.js"],"names":["React","Fragment","useTheme","makeStyles","useMediaQuery","Grid","Typography","GridList","GridListTile","GridListTileBar","IconButton","Icon","useStyles","theme","root","backgroundColor","palette","background","paper","header","margin","textAlign","gridList","display","flexWrap","justifyContent","overflow","width","tile","titleBar","icon","color","sorry","Photos","props","classes","xs","breakpoints","down","sm","md","gridHeight","gridCols","renderPhotos","info","gallery","length","map","photo","index","img","title"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\n\nimport { useTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, GridList, GridListTile, GridListTileBar, IconButton, Icon } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper, \n        // width: '70%',\n   \n    },\n    header: {\n        margin: '20px 0px',\n        textAlign: 'center',\n    },\n    gridList: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        overflow: 'hidden',\n        width: '70%',\n        margin: '0 auto !important',\n    },\n    tile: {\n        width: 800\n    },\n    titleBar: {\n        background: \n        'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n        'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    icon: {\n        color: 'white',\n    },\n    sorry: {\n        \n    },\n}))\n\nfunction Photos(props) {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    \n    const xs = useMediaQuery(theme.breakpoints.down('xs'));\n    const sm = useMediaQuery(theme.breakpoints.down('sm'));\n    const md = useMediaQuery(theme.breakpoints.down('md'));\n\n    const gridHeight = () => {\n        if(xs) {return 120}\n        if(sm) {return 240}\n        if(md) {return 300}\n    }\n\n    const gridCols = () => {\n        if(xs) {return 1.6}\n        if(sm) {return 2}\n        if(md) {return 2}\n    }\n\n\n    function renderPhotos() {\n\n        if(props.info.gallery.length >= 1) {\n            return (\n                props.info.gallery.map((photo, index) => {\n                    return (\n                                <GridListTile cols={1} key={index} className={classes.tile}>\n                                    <img src={photo.img} alt={photo.title} />\n                                    <GridListTileBar \n                                        title={photo.title}\n                                        titlePosition=\"top\"\n                                        actionIcon={\n                                            <IconButton className={classes.icon}>\n                                                <Icon>star_border</Icon>\n                                            </IconButton>\n                                        }\n                                        actionPosition=\"left\"\n                                        className={classes.titleBar}\n                                    />\n                                </GridListTile>\n                    );\n                })\n            );\n        } else {\n            return (\n                <div className={classes.sorry}>\n                    <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\" >\n                        Sorry, no photos to show\n                    </Typography>\n                    <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\" >\n                        {`¯|_(ツ)_/¯`}\n                    </Typography>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <Fragment>\n\n        <Grid xs={12}>\n            <Typography variant=\"h3\" color=\"textSecondary\" className={classes.header}>\n                Gallery\n            </Typography>\n        </Grid>\n        <Grid xs={12}>\n        <GridList cols={gridCols()} cellHeight={gridHeight()} spacing={12} className={classes.gridList}>\n            {renderPhotos()}\n        </GridList>\n        </Grid>\n\n        </Fragment>\n    );\n}\n\nexport default Photos;"]},"metadata":{},"sourceType":"module"}