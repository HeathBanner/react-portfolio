{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Story/Story.js\";\nimport React, { Fragment, useContext } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\nimport Moment from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  return _defineProperty({\n    root: {\n      // marginTop: '40px',\n      color: 'black !important' // width: '60% !important',\n      // flexWrap: 'wrap',\n      // flexDirection: 'column',\n\n    },\n    label: {// color: 'black !important',\n    },\n    postStory: {\n      marginLeft: '10px',\n      backgroundColor: 'rgb(255, 145, 71)'\n    },\n    form: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '80%',\n      margin: '20px auto'\n    },\n    underline: {\n      '&:before': {\n        borderBottom: '1px solid rgb(129, 0, 206) !important'\n      },\n      '&:after': {\n        borderBottom: '2px solid rgb(255, 145, 71) !important'\n      },\n      '&:hover:before': {\n        borderBottom: '2px solid rgb(129, 0, 206) !important'\n      }\n    }\n  }, \"label\", {\n    '&:before': {\n      borderBottom: '1px solid rgb(129, 0, 206) !important'\n    },\n    '&:after': {\n      borderBottom: '2px solid rgb(255, 145, 71) !important'\n    }\n  });\n});\n\nfunction Story() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      story = _React$useState2[0],\n      setStory = _React$useState2[1];\n\n  var classes = useStyles();\n  var auth = useContext(AuthContext);\n\n  function handleInputChange(e) {\n    var value = e.target.value;\n    setStory(value);\n  }\n\n  function handleStoryPost() {\n    var userId = auth.user._id;\n    var infoId = auth.user.info._id;\n    var time = Moment();\n    fetch('/api/social/newStory', {\n      method: 'POST',\n      body: JSON.stringify({\n        userId: userId,\n        infoId: infoId,\n        story: story,\n        time: time\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      console.log(user);\n      auth.updateDidMount();\n    });\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    multiline: true,\n    fullWidth: false,\n    InputProps: {\n      classes: {\n        underline: classes.underline\n      }\n    },\n    InputLabelProps: {\n      label: classes.label\n    },\n    rowsMax: \"8\",\n    label: \"Story\",\n    helperText: \"Story here...\",\n    name: \"setStory\",\n    value: story,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Fab, {\n    onClick: handleStoryPost,\n    size: \"small\",\n    className: classes.postStory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"create\"))));\n}\n\nexport default Story;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Story/Story.js"],"names":["React","Fragment","useContext","AuthContext","TextField","makeStyles","Icon","Fab","Moment","useStyles","theme","root","color","label","postStory","marginLeft","backgroundColor","form","display","alignItems","justifyContent","width","margin","underline","borderBottom","Story","useState","story","setStory","classes","auth","handleInputChange","e","value","target","handleStoryPost","userId","user","_id","infoId","info","time","fetch","method","body","JSON","stringify","headers","then","res","json","console","log","updateDidMount"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from 'react';\n\nimport AuthContext from '../../../context/AuthContext';\n\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\n\nimport Moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        // marginTop: '40px',\n        color: 'black !important',\n        // width: '60% !important',\n        // flexWrap: 'wrap',\n        // flexDirection: 'column',\n    },\n    label: {\n        // color: 'black !important',\n    },\n    postStory: {\n        marginLeft: '10px',\n        backgroundColor: 'rgb(255, 145, 71)'\n    },\n    form: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '80%',\n        margin: '20px auto',\n    },\n    underline: {\n        '&:before': {\n            borderBottom: '1px solid rgb(129, 0, 206) !important',\n            },\n        '&:after': {\n            borderBottom: '2px solid rgb(255, 145, 71) !important',\n        },\n        '&:hover:before': {\n            borderBottom: '2px solid rgb(129, 0, 206) !important',\n        }\n    },\n    label: {\n        '&:before': {\n            borderBottom: '1px solid rgb(129, 0, 206) !important',\n            },\n        '&:after': {\n            borderBottom: '2px solid rgb(255, 145, 71) !important',\n        },\n    }\n}))\n\n\nfunction Story() {\n    \n    const [story, setStory] = React.useState('')\n\n    const classes = useStyles();\n    const auth = useContext(AuthContext)\n\n    function handleInputChange(e) {\n        const { value } = e.target\n        setStory(value)\n    }\n\n    function handleStoryPost() {\n        const userId = auth.user._id;\n        const infoId = auth.user.info._id;\n        const time = Moment();\n        fetch('/api/social/newStory', {\n            method: 'POST',\n            body: JSON.stringify({userId: userId, infoId: infoId,story: story, time: time}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((user) => {\n            console.log(user);\n            auth.updateDidMount()\n        })\n    }\n\n    return (\n        <Fragment>\n            <form className={classes.form}>\n                    <TextField\n                        multiline\n                        fullWidth={false}\n                        InputProps={{classes:{underline: classes.underline}}}\n                        InputLabelProps={{label: classes.label}}\n                        rowsMax=\"8\"\n                        label=\"Story\"\n                        helperText=\"Story here...\"\n                        name=\"setStory\"\n                        value={story}\n                        onChange={handleInputChange}\n                    />\n                    <Fab onClick={handleStoryPost} size=\"small\" className={classes.postStory}><Icon>create</Icon></Fab>\n            </form>\n        </Fragment>\n    );\n}\n\nexport default Story;"]},"metadata":{},"sourceType":"module"}