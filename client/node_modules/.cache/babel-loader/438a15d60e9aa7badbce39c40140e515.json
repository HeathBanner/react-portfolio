{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Social/Story.js\";\nimport React, { Fragment, useContext, useState } from 'react';\nimport { AppContext } from '../../../context/AuthContext';\nimport { TextField, Icon, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Moment from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  var _input, _label;\n\n  return {\n    root: {\n      color: 'black !important'\n    },\n    postStory: {\n      marginLeft: '10px'\n    },\n    form: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '80%',\n      margin: '20px auto'\n    },\n    textField: {\n      width: '80%'\n    },\n    input: (_input = {}, _defineProperty(_input, theme.breakpoints.down('xs'), {\n      fontSize: '1rem',\n      padding: '5px 0px'\n    }), _defineProperty(_input, \"fontSize\", '1.5rem'), _defineProperty(_input, \"padding\", '10px 0px'), _input),\n    underline: {\n      '&:before': {\n        borderBottom: '1px solid rgb(129, 0, 206) !important'\n      },\n      '&:after': {\n        borderBottom: '2px solid rgb(255, 145, 71) !important'\n      },\n      '&:hover:before': {\n        borderBottom: '2px solid rgb(129, 0, 206) !important'\n      }\n    },\n    label: (_label = {}, _defineProperty(_label, theme.breakpoints.down('xs'), {\n      fontSize: '1rem'\n    }), _defineProperty(_label, \"fontSize\", '1.5rem'), _label)\n  };\n});\n\nvar Story = function Story() {\n  var classes = useStyles();\n  var holder = useContext(AppContext);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      story = _useState2[0],\n      setStory = _useState2[1];\n\n  var handleInputChange = function handleInputChange(e) {\n    var value = e.target.value;\n    setStory(value);\n  };\n\n  var handleStoryPost = function handleStoryPost() {\n    var userId = holder.auth._id;\n    var infoId = holder.auth.info._id;\n    var time = Moment();\n    fetch('/api/social/newStory', {\n      method: 'POST',\n      body: JSON.stringify({\n        userId: userId,\n        infoId: infoId,\n        story: story,\n        time: time\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      setStory('');\n      holder.getNewStory();\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textField,\n    InputProps: {\n      classes: {\n        input: classes.input\n      }\n    },\n    InputLabelProps: {\n      className: classes.label\n    },\n    multiline: true,\n    fullWidth: false,\n    rowsMax: \"8\",\n    label: \"Story\",\n    name: \"setStory\",\n    value: story,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.postStory,\n    onClick: handleStoryPost,\n    size: holder.xs ? 'small' : 'large',\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    fontSize: holder.xs ? 'small' : 'large',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"add_circle\"))));\n};\n\nexport default Story;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Social/Story.js"],"names":["React","Fragment","useContext","useState","AppContext","TextField","Icon","Button","makeStyles","Moment","useStyles","theme","root","color","postStory","marginLeft","form","display","alignItems","justifyContent","width","margin","textField","input","breakpoints","down","fontSize","padding","underline","borderBottom","label","Story","classes","holder","story","setStory","handleInputChange","e","value","target","handleStoryPost","userId","auth","_id","infoId","info","time","fetch","method","body","JSON","stringify","headers","then","res","json","user","getNewStory","className","xs"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useState } from 'react';\n\nimport { AppContext } from '../../../context/AuthContext';\n\nimport { TextField, Icon, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        color: 'black !important',\n    },\n    postStory: {\n        marginLeft: '10px',\n    },\n    form: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '80%',\n        margin: '20px auto',\n    },\n    textField: {\n        width: '80%',\n    },\n    input: {\n        [theme.breakpoints.down('xs')]: {\n            fontSize: '1rem',\n            padding: '5px 0px',\n        },\n        fontSize: '1.5rem',\n        padding: '10px 0px',\n    },\n    underline: {\n        '&:before': {\n            borderBottom: '1px solid rgb(129, 0, 206) !important',\n        },\n        '&:after': {\n            borderBottom: '2px solid rgb(255, 145, 71) !important',\n        },\n        '&:hover:before': {\n            borderBottom: '2px solid rgb(129, 0, 206) !important',\n        },\n    },\n    label: {\n        [theme.breakpoints.down('xs')]: {\n            fontSize: '1rem',\n        },\n        fontSize: '1.5rem',\n    },\n}));\n\nconst Story = () => {\n    \n    const classes = useStyles();\n    const holder = useContext(AppContext);\n    \n    const [story, setStory] = useState('');\n\n    const handleInputChange = (e) => {\n        const { value } = e.target;\n        setStory(value);\n    };\n\n    const handleStoryPost = () => {\n        const userId = holder.auth._id;\n        const infoId = holder.auth.info._id;\n        const time = Moment();\n        fetch('/api/social/newStory', {\n            method: 'POST',\n            body: JSON.stringify({ userId, infoId, story, time }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.json())\n            .then((user) => {\n                setStory('');\n                holder.getNewStory();\n            });\n    };\n\n    return (\n        <Fragment>\n\n            <div className={classes.form}>\n\n                <TextField\n                    className={classes.textField}\n                    InputProps={{ classes: {\n                        input: classes.input,\n                        }\n                    }}\n                    InputLabelProps={{ className: classes.label }}\n                    multiline\n                    fullWidth={false}\n                    rowsMax=\"8\"\n                    label=\"Story\"\n                    name=\"setStory\"\n                    value={story}\n                    onChange={handleInputChange}\n                />\n\n                <Button\n                    className={classes.postStory}\n                    onClick={handleStoryPost}\n                    size={holder.xs ? 'small' : 'large'}\n                    color=\"primary\"\n                >\n                    <Icon fontSize={holder.xs ? 'small' : 'large'}>\n                        add_circle\n                    </Icon>\n                </Button>\n            \n            </div>\n\n        </Fragment>\n    );\n};\n\nexport default Story;\n"]},"metadata":{},"sourceType":"module"}