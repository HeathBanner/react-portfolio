{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/MtnDream/Editor/Tools/ColorPicker.js\";\nimport React, { useState, useContext, Fragment } from 'react';\nimport { EditorContext } from '../../../../../context/EditorContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Popover, Avatar, Button, Icon } from '@material-ui/core';\nvar colorPalette = [{\n  name: 'Black',\n  code: '#000000'\n}, {\n  name: 'Gunmetal',\n  code: '#2C3539'\n}, {\n  name: 'Charcoal',\n  code: '#34282C'\n}, {\n  name: 'Dark Slate Grey',\n  code: '#25383C'\n}, {\n  name: 'Iridium',\n  code: '#3D3C3A'\n}, {\n  name: 'Smokey Gray',\n  code: '#6D6968'\n}, {\n  name: 'Battleship Gray',\n  code: '#848482'\n}, {\n  name: 'Gray Cloud',\n  code: '#B6B6B4'\n}, {\n  name: 'Metallic Silver',\n  code: '#BCC6CC'\n}, {\n  name: 'Blue Gray',\n  code: '#98AFC7'\n}, {\n  name: 'Steel Blue',\n  code: '#4863A0'\n}, {\n  name: 'Dark Slate Blue',\n  code: '#2B3856'\n}, {\n  name: 'Navy Blue',\n  code: '#000080'\n}, {\n  name: 'Blue Orchid',\n  code: '#1F45FC'\n}, {\n  name: 'Blue Koi',\n  code: '#659EC7'\n}, {\n  name: 'Deep Sky Blue',\n  code: '#3BB9FF'\n}, {\n  name: 'Light Sea Green',\n  code: '#3EA99F'\n}, {\n  name: 'Medium Aquamarine',\n  code: '#348781'\n}, {\n  name: 'Teal',\n  code: '#008080'\n}, {\n  name: 'Hazel Green',\n  code: '#617C58'\n}, {\n  name: 'Venom Green',\n  code: '#728C00'\n}, {\n  name: 'Dark Forest Green',\n  code: '#254117'\n}, {\n  name: 'Medium Forest Green',\n  code: '#347235'\n}, {\n  name: 'Pine Green',\n  code: '#387C44'\n}, {\n  name: 'Green Apple',\n  code: '#4CC417'\n}, {\n  name: 'Avocado Green',\n  code: '#B2C248'\n}, {\n  name: 'Cantaloupe',\n  code: '#FFA62F'\n}, {\n  name: 'Sandy Brown',\n  code: '#EE9A4D'\n}, {\n  name: 'Copper',\n  code: '#B87333'\n}, {\n  name: 'Wood',\n  code: '#966F33'\n}, {\n  name: 'Oak Brown',\n  code: '#806517'\n}, {\n  name: 'Army Brown',\n  code: '#827B60'\n}, {\n  name: 'Mocha',\n  code: '#493D26'\n}, {\n  name: 'Coffee',\n  code: '#6F4E37'\n}, {\n  name: 'Light Coral',\n  code: '#E77471'\n}, {\n  name: 'Scarlet',\n  code: '#FF2400'\n}, {\n  name: 'Grapefruit',\n  code: '#DC381F'\n}, {\n  name: 'Red Wine',\n  code: '#990012'\n}, {\n  name: 'Firebrick',\n  code: '#800517'\n}, {\n  name: 'Maroon',\n  code: '#810541'\n}];\nvar useStyles = makeStyles(function (theme) {\n  return {\n    typography: {\n      padding: theme.spacing(2)\n    },\n    colorsContainer: {\n      width: 400,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexWrap: 'wrap'\n    },\n    avatars: {\n      height: 30,\n      width: 30,\n      margin: 5,\n      flexGrow: 1,\n      cursor: 'pointer'\n    }\n  };\n});\n\nvar ColorPicker = function ColorPicker() {\n  var classes = useStyles();\n  var holder = useContext(EditorContext);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1];\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var wrapper = function wrapper(color) {\n    holder.handleTextColor(color);\n    handleClose();\n  };\n\n  var colorSwitch = function colorSwitch() {\n    switch (holder.sectionMode.el) {\n      case 'body':\n        return holder[holder.sectionMode.el][holder.sectionMode.index].color;\n\n      case 'jumbotron':\n        return 'N/A';\n\n      case 'image':\n        return 'N/A';\n\n      case 'readLength':\n        return 'N/A';\n\n      default:\n        return holder[holder.sectionMode.el].color;\n    }\n  };\n\n  var open = Boolean(anchorEl);\n  var id = open ? 'simple-popover' : undefined;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: {\n      marginRight: 10\n    },\n    \"aria-describedby\": id,\n    variant: \"contained\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    style: {\n      color: colorSwitch()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, \"format_color_text\")), React.createElement(Popover, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.colorsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, colorPalette.map(function (color) {\n    return React.createElement(Avatar, {\n      onClick: function onClick() {\n        return wrapper(color.code);\n      },\n      style: {\n        backgroundColor: color.code\n      },\n      className: classes.avatars,\n      key: color.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    });\n  }))));\n};\n\nexport default ColorPicker;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/MtnDream/Editor/Tools/ColorPicker.js"],"names":["React","useState","useContext","Fragment","EditorContext","makeStyles","Popover","Avatar","Button","Icon","colorPalette","name","code","useStyles","theme","typography","padding","spacing","colorsContainer","width","display","justifyContent","alignItems","flexWrap","avatars","height","margin","flexGrow","cursor","ColorPicker","classes","holder","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","wrapper","color","handleTextColor","colorSwitch","sectionMode","el","index","open","Boolean","id","undefined","marginRight","vertical","horizontal","map","backgroundColor"],"mappings":"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","sourcesContent":["import React, {\n    useState,\n    useContext,\n    Fragment,\n} from 'react';\n\nimport { EditorContext } from '../../../../../context/EditorContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Popover,\n    Avatar,\n    Button,\n    Icon,\n} from '@material-ui/core';\n\nconst colorPalette = [\n    {\n        name: 'Black',\n        code: '#000000',\n    },\n    {\n        name: 'Gunmetal',\n        code: '#2C3539',\n    },\n    {\n        name: 'Charcoal',\n        code: '#34282C',\n    },\n    {\n        name: 'Dark Slate Grey',\n        code: '#25383C',\n    },\n    {\n        name: 'Iridium',\n        code: '#3D3C3A',\n    },\n    {\n        name: 'Smokey Gray',\n        code: '#6D6968',\n    },\n    {\n        name: 'Battleship Gray',\n        code: '#848482',\n    },\n    {\n        name: 'Gray Cloud',\n        code: '#B6B6B4',\n    },\n    {\n        name: 'Metallic Silver',\n        code: '#BCC6CC',\n    },\n    {\n        name: 'Blue Gray',\n        code: '#98AFC7',\n    },\n    {\n        name: 'Steel Blue',\n        code: '#4863A0',\n    },\n    {\n        name: 'Dark Slate Blue',\n        code: '#2B3856',\n    },\n    {\n        name: 'Navy Blue',\n        code: '#000080',\n    },\n    {\n        name: 'Blue Orchid',\n        code: '#1F45FC',\n    },\n    {\n        name: 'Blue Koi',\n        code: '#659EC7',\n    },\n    {\n        name: 'Deep Sky Blue',\n        code: '#3BB9FF',\n    },\n    {\n        name: 'Light Sea Green',\n        code: '#3EA99F',\n    },\n    {\n        name: 'Medium Aquamarine',\n        code: '#348781',\n    },\n    {\n        name: 'Teal',\n        code: '#008080',\n    },\n    {\n        name: 'Hazel Green',\n        code: '#617C58',\n    },\n    {\n        name: 'Venom Green',\n        code: '#728C00',\n    },\n    {\n        name: 'Dark Forest Green',\n        code: '#254117',\n    },\n    {\n        name: 'Medium Forest Green',\n        code: '#347235',\n    },\n    {\n        name: 'Pine Green',\n        code: '#387C44',\n    },\n    {\n        name: 'Green Apple',\n        code: '#4CC417',\n    },\n    {\n        name: 'Avocado Green',\n        code: '#B2C248',\n    },\n    {\n        name: 'Cantaloupe',\n        code: '#FFA62F',\n    },\n    {\n        name: 'Sandy Brown',\n        code: '#EE9A4D',\n    },\n    {\n        name: 'Copper',\n        code: '#B87333',\n    },\n    {\n        name: 'Wood',\n        code: '#966F33',\n    },\n    {\n        name: 'Oak Brown',\n        code: '#806517',\n    },\n    {\n        name: 'Army Brown',\n        code: '#827B60',\n    },\n    {\n        name: 'Mocha',\n        code: '#493D26',\n    },\n    {\n        name: 'Coffee',\n        code: '#6F4E37',\n    },\n    {\n        name: 'Light Coral',\n        code: '#E77471',\n    },\n    {\n        name: 'Scarlet',\n        code: '#FF2400',\n    },\n    {\n        name: 'Grapefruit',\n        code: '#DC381F',\n    },\n    {\n        name: 'Red Wine',\n        code: '#990012',\n    },\n    {\n        name: 'Firebrick',\n        code: '#800517',\n    },\n    {\n        name: 'Maroon',\n        code: '#810541',\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n  colorsContainer: {\n    width: 400,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  avatars: {\n    height: 30,\n    width: 30,\n    margin: 5,\n    flexGrow: 1,\n    cursor: 'pointer',\n  },\n}));\n\nconst ColorPicker = () => {\n\n  const classes = useStyles();\n  const holder = useContext(EditorContext);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const wrapper = (color) => {\n    holder.handleTextColor(color);\n    handleClose();\n  };\n\n  const colorSwitch = () => {\n    switch (holder.sectionMode.el) {\n        case 'body':\n            return holder[holder.sectionMode.el][holder.sectionMode.index].color;\n        case 'jumbotron':\n            return 'N/A';\n        case 'image':\n            return 'N/A';\n        case 'readLength':\n            return 'N/A';\n        default:\n            return holder[holder.sectionMode.el].color;\n    }\n};\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <Fragment>\n\n      <Button style={{ marginRight: 10 }} aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n\n        <Icon style={{ color: colorSwitch() }}>\n            format_color_text\n        </Icon>\n\n      </Button>\n\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n          <div className={classes.colorsContainer}>\n              \n            {\n                colorPalette.map((color) => {\n                    return (\n                        <Avatar\n                            onClick={() => wrapper(color.code)}\n                            style={{ backgroundColor: color.code }}\n                            className={classes.avatars}\n                            key={color.name}\n                        />\n                    );\n                })\n            }\n \n          </div>\n\n      </Popover>\n\n    </Fragment>\n  );\n};\n\nexport default ColorPicker;\n"]},"metadata":{},"sourceType":"module"}