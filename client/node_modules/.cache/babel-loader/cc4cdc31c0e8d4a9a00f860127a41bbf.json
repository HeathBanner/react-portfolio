{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Weather/Search.js\";\nimport React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport Select from 'react-select';\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Icon from '@material-ui/core/Icon';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport jssPluginPropsSort from 'jss-plugin-props-sort';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      height: 250,\n      width: '70%',\n      margin: '20px auto',\n      color: 'white'\n    },\n    label: {\n      color: 'white'\n    },\n    input: {\n      display: 'flex',\n      padding: 0,\n      height: 'auto',\n      fontColor: 'white !important'\n    },\n    valueContainer: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      flex: 1,\n      alignItems: 'center',\n      overflow: 'hidden',\n      borderBottom: '1px solid white',\n      color: 'white !important'\n    },\n    chip: {\n      margin: theme.spacing(0.5, 0.25),\n      color: 'white'\n    },\n    chipFocused: {\n      backgroundColor: emphasize(theme.palette.type === 'light' ? theme.palette.grey[900] : theme.palette.grey[100], 0.08)\n    },\n    noOptionsMessage: {\n      padding: theme.spacing(1, 2)\n    },\n    singleValue: {\n      fontSize: 16,\n      color: 'white'\n    },\n    placeholder: {\n      position: 'absolute',\n      left: 2,\n      bottom: 6,\n      fontSize: 16,\n      color: 'white'\n    },\n    paper: {\n      position: 'absolute',\n      zIndex: 1,\n      marginTop: theme.spacing(1),\n      left: 0,\n      right: 0\n    },\n    divider: {\n      height: theme.spacing(2)\n    }\n  };\n});\n\nfunction NoOptionsMessage(props) {\n  return React.createElement(Typography, Object.assign({\n    color: \"textSecondary\",\n    className: props.selectProps.classes.noOptionsMessage\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), props.children);\n}\n\nNoOptionsMessage.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction inputComponent(_ref) {\n  var inputRef = _ref.inputRef,\n      props = _objectWithoutProperties(_ref, [\"inputRef\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    ref: inputRef\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }));\n}\n\ninputComponent.propTypes = {\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\n\nfunction Control(props) {\n  var children = props.children,\n      innerProps = props.innerProps,\n      innerRef = props.innerRef,\n      _props$selectProps = props.selectProps,\n      classes = _props$selectProps.classes,\n      TextFieldProps = _props$selectProps.TextFieldProps;\n  return React.createElement(TextField, Object.assign({\n    fullWidth: true,\n    style: {\n      color: 'white'\n    },\n    onChange: props.selectProps.onChange,\n    InputProps: {\n      inputComponent: inputComponent,\n      inputProps: _objectSpread({\n        onChange: props.selectProps.onChange,\n        className: classes.input,\n        ref: innerRef,\n        children: children\n      }, innerProps)\n    }\n  }, TextFieldProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }));\n}\n\nControl.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction Option(props) {\n  return React.createElement(MenuItem, Object.assign({\n    ref: props.innerRef,\n    selected: props.isFocused,\n    component: \"div\",\n    style: {\n      fontWeight: props.isSelected ? 500 : 400\n    }\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), props.children);\n}\n\nOption.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  isFocused: PropTypes.bool,\n  isSelected: PropTypes.bool\n};\n\nfunction Placeholder(props) {\n  return React.createElement(Typography, Object.assign({\n    color: \"textSecondary\",\n    className: props.selectProps.classes.placeholder\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), props.children);\n}\n\nPlaceholder.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction SingleValue(props) {\n  return React.createElement(Typography, Object.assign({\n    className: props.selectProps.classes.singleValue\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }), props.children);\n}\n\nSingleValue.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction ValueContainer(props) {\n  return React.createElement(\"div\", {\n    className: props.selectProps.classes.valueContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, props.children);\n}\n\nValueContainer.propTypes = {\n  children: PropTypes.node,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction Menu(props) {\n  return React.createElement(Paper, Object.assign({\n    square: true,\n    className: props.selectProps.classes.paper\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }), props.children);\n}\n\nMenu.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object\n};\nvar components = {\n  Control: Control,\n  Menu: Menu,\n  NoOptionsMessage: NoOptionsMessage,\n  Option: Option,\n  Placeholder: Placeholder,\n  // SingleValue,\n  ValueContainer: ValueContainer\n};\nvar suggestions = [];\nvar states = [{\n  label: 'Alabama'\n}, {\n  label: 'Alaska'\n}, {\n  label: 'Arizona'\n}, {\n  label: 'Arkansas'\n}, {\n  label: 'California'\n}, {\n  label: 'Colorado'\n}, {\n  label: 'Connecticut'\n}, {\n  label: 'Delaware'\n}, {\n  label: 'Florida'\n}, {\n  label: 'Georgia'\n}, {\n  label: 'Hawaii'\n}, {\n  label: 'Idaho'\n}, {\n  label: 'Illinois'\n}, {\n  label: 'Indiana'\n}, {\n  label: 'Iowa'\n}, {\n  label: 'Kansas'\n}, {\n  label: 'Louisiana'\n}, {\n  label: 'Maine'\n}, {\n  label: 'Maryland'\n}, {\n  label: 'Massachusetts'\n}, {\n  label: 'Michigan'\n}, {\n  label: 'Minnesota'\n}, {\n  label: 'Mississippi'\n}, {\n  label: 'Missouri'\n}, {\n  label: 'Montana'\n}, {\n  label: 'Nebraska'\n}, {\n  label: 'Nevada'\n}, {\n  label: 'New Hampshire'\n}, {\n  label: 'New Jersey'\n}, {\n  label: 'New Mexico'\n}, {\n  label: 'New York'\n}, {\n  label: 'North Carolina'\n}, {\n  label: 'North Dakota'\n}, {\n  label: 'Ohio'\n}, {\n  label: 'Oklahoma'\n}, {\n  label: 'Oregon'\n}, {\n  label: 'Pennsylvania'\n}, {\n  label: 'Rhode Island'\n}, {\n  label: 'South Carolina'\n}, {\n  label: 'South Dakota'\n}, {\n  label: 'Tennesee'\n}, {\n  label: 'Texas'\n}, {\n  label: 'Utah'\n}, {\n  label: 'Vermont'\n}, {\n  label: 'Virginia'\n}, {\n  label: 'Washington'\n}, {\n  label: 'West Virginia'\n}, {\n  label: 'Wisconsin'\n}, {\n  label: 'Wyoming'\n}];\nexport default function IntegrationReactSelect() {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      queriedState = _React$useState2[0],\n      setQueriedState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedState = _React$useState4[0],\n      setSelectedState = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      queriedCities = _React$useState6[0],\n      setQueriedCities = _React$useState6[1];\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      selectedCity = _React$useState8[0],\n      setSelectedCity = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      isLoaded = _React$useState10[0],\n      setIsLoaded = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      sentRequest = _React$useState12[0],\n      setSentRequest = _React$useState12[1];\n\n  useEffect(function () {\n    if (!sentRequest) {\n      setSentRequest(true);\n      fetch('/api/cities/onLoad').then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        console.log(result);\n        setQueriedCities(result);\n        setIsLoaded(true);\n      });\n    }\n\n    if (isLoaded) {\n      console.log('isloaded');\n      setIsLoaded(false);\n      suggestions = queriedCities.map(function (suggestion) {\n        return {\n          value: suggestion.name,\n          label: suggestion.name\n        };\n      });\n    }\n  });\n\n  function handleCityInputChange(value) {\n    if (value.nativeEvent) {\n      var query = value.target.value;\n      fetch('/api/cities/search', {\n        method: 'POST',\n        body: JSON.stringify({\n          data: query\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        console.log(result);\n        setIsLoaded(true);\n        setQueriedCities(result);\n      });\n    } else {\n      setSelectedCity(value);\n    }\n  }\n\n  function handleStateInputChange(value) {\n    if (value.nativeEvent) {\n      var query = value.target.value;\n      console.log(value.target);\n      setQueriedState(query);\n      console.log('GOTCHA');\n    } else {\n      setSelectedState(value);\n    }\n  }\n\n  function handleSubmit(event) {\n    console.log(event);\n  }\n\n  var selectStyles = {\n    input: function input(base) {\n      return _objectSpread({}, base, {\n        color: 'white',\n        '& input': {\n          font: 'inherit'\n        }\n      });\n    }\n  };\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, React.createElement(NoSsr, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, React.createElement(Select, {\n    classes: classes,\n    styles: selectStyles,\n    inputId: \"react-select-city\",\n    TextFieldProps: {\n      label: 'City',\n      InputLabelProps: {\n        htmlFor: 'react-select-city',\n        shrink: true\n      },\n      placeholder: 'Search for a city'\n    },\n    options: queriedCities ? queriedCities.map(function (suggestion) {\n      return {\n        value: suggestion.name,\n        label: suggestion.name\n      };\n    }) : console.log('not yet'),\n    value: selectedCity,\n    onChange: handleCityInputChange,\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }), React.createElement(Select, {\n    classes: classes,\n    styles: selectStyles,\n    inputId: \"react-select-country\",\n    TextFieldProps: {\n      label: 'State',\n      InputLabelProps: {\n        htmlFor: 'react-select-country',\n        shrink: true\n      },\n      placeholder: 'Search for a city'\n    },\n    options: states.map(function (suggestion) {\n      return {\n        value: suggestion.label,\n        label: suggestion.label\n      };\n    }),\n    components: components,\n    value: selectedState,\n    onChange: handleStateInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Weather/Search.js"],"names":["React","useEffect","clsx","Select","emphasize","makeStyles","useTheme","Typography","NoSsr","TextField","Paper","Chip","MenuItem","Icon","PropTypes","FormControl","Button","jssPluginPropsSort","useStyles","theme","root","flexGrow","height","width","margin","color","label","input","display","padding","fontColor","valueContainer","flexWrap","flex","alignItems","overflow","borderBottom","chip","spacing","chipFocused","backgroundColor","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","paper","zIndex","marginTop","right","divider","NoOptionsMessage","props","selectProps","classes","innerProps","children","propTypes","node","object","isRequired","inputComponent","inputRef","oneOfType","func","Control","innerRef","TextFieldProps","onChange","inputProps","className","ref","Option","isFocused","fontWeight","isSelected","bool","Placeholder","SingleValue","ValueContainer","Menu","components","suggestions","states","IntegrationReactSelect","useState","queriedState","setQueriedState","selectedState","setSelectedState","queriedCities","setQueriedCities","selectedCity","setSelectedCity","isLoaded","setIsLoaded","sentRequest","setSentRequest","fetch","then","res","json","result","console","log","map","suggestion","value","name","handleCityInputChange","nativeEvent","query","target","method","body","JSON","stringify","data","headers","handleStateInputChange","handleSubmit","event","selectStyles","base","font","InputLabelProps","htmlFor","shrink"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport Select from 'react-select';\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Icon from '@material-ui/core/Icon';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport jssPluginPropsSort from 'jss-plugin-props-sort';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    width: '70%',\n    margin: '20px auto',\n    color: 'white'\n  },\n  label: {\n    color: 'white',\n  },\n  input: {\n    display: 'flex',\n    padding: 0,\n    height: 'auto',\n    fontColor: 'white !important'\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n    overflow: 'hidden',\n    borderBottom: '1px solid white',\n    color: 'white !important'\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25),\n    color: 'white'\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === 'light' ? theme.palette.grey[900] : theme.palette.grey[100],\n      0.08,\n    ),\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2),\n  },\n  singleValue: {\n    fontSize: 16,\n    color: 'white'\n  },\n  placeholder: {\n    position: 'absolute',\n    left: 2,\n    bottom: 6,\n    fontSize: 16,\n    color: 'white'\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  divider: {\n    height: theme.spacing(2),\n  },\n}));\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nNoOptionsMessage.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired,\n};\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\ninputComponent.propTypes = {\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n};\n\nfunction Control(props) {\n  const {\n    children,\n    innerProps,\n    innerRef,\n    selectProps: { classes, TextFieldProps },\n  } = props;\n\n  return (\n    <TextField\n      fullWidth\n      style={{\n        color: 'white',\n      }}\n      onChange= {props.selectProps.onChange}\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          onChange: props.selectProps.onChange,\n          className: classes.input,\n          ref: innerRef,\n          children,\n          ...innerProps,\n        },\n      }}\n      {...TextFieldProps}\n    />\n  );\n}\n\nControl.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  selectProps: PropTypes.object.isRequired,\n};\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      ref={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400,\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nOption.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  isFocused: PropTypes.bool,\n  isSelected: PropTypes.bool,\n};\n\nfunction Placeholder(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.placeholder}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nPlaceholder.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired,\n};\n\nfunction SingleValue(props) {\n  return (\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\n      {props.children}\n    </Typography>\n  );\n}\n\nSingleValue.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired,\n};\n\n\nfunction ValueContainer(props) {\n\n\n  return <div className={props.selectProps.classes.valueContainer} >{props.children}</div>;\n}\n\nValueContainer.propTypes = {\n  children: PropTypes.node,\n  selectProps: PropTypes.object.isRequired,\n};\n\n\nfunction Menu(props) {\n  return (\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n      {props.children}\n    </Paper>\n  );\n}\n\nMenu.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object,\n};\n\nconst components = {\n  Control,\n  Menu,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  // SingleValue,\n  ValueContainer,\n};\n\nvar suggestions = [];\n\nconst states = [\n  {label: 'Alabama'},\n  {label: 'Alaska'},\n  {label: 'Arizona'},\n  {label: 'Arkansas'},\n  {label: 'California'},\n  {label: 'Colorado'},\n  {label: 'Connecticut'},\n  {label: 'Delaware'},\n  {label: 'Florida'},\n  {label: 'Georgia'},\n  {label: 'Hawaii'},\n  {label: 'Idaho'},\n  {label: 'Illinois'},\n  {label: 'Indiana'},\n  {label: 'Iowa'},\n  {label: 'Kansas'},\n  {label: 'Louisiana'},\n  {label: 'Maine'},\n  {label: 'Maryland'},\n  {label: 'Massachusetts'},\n  {label: 'Michigan'},\n  {label: 'Minnesota'},\n  {label: 'Mississippi'},\n  {label: 'Missouri'},\n  {label: 'Montana'},\n  {label: 'Nebraska'},\n  {label: 'Nevada'},\n  {label: 'New Hampshire'},\n  {label: 'New Jersey'},\n  {label: 'New Mexico'},\n  {label: 'New York'},\n  {label: 'North Carolina'},\n  {label: 'North Dakota'},\n  {label: 'Ohio'},\n  {label: 'Oklahoma'},\n  {label: 'Oregon'},\n  {label: 'Pennsylvania'},\n  {label: 'Rhode Island'},\n  {label: 'South Carolina'},\n  {label: 'South Dakota'},\n  {label: 'Tennesee'},\n  {label: 'Texas'},\n  {label: 'Utah'},\n  {label: 'Vermont'},\n  {label: 'Virginia'},\n  {label: 'Washington'},\n  {label: 'West Virginia'},\n  {label: 'Wisconsin'},\n  {label: 'Wyoming'}\n];\n\nexport default function IntegrationReactSelect() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [queriedState, setQueriedState] = React.useState('');\n  const [selectedState, setSelectedState] = React.useState('');\n\n  const [queriedCities, setQueriedCities] = React.useState(null);\n  const [selectedCity, setSelectedCity] = React.useState(null);\n\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const [sentRequest, setSentRequest] = React.useState(false);\n\n  useEffect(() => {\n    if(!sentRequest){\n      setSentRequest(true);\n      fetch('/api/cities/onLoad')\n      .then(res => res.json())\n      .then((result) => {console.log(result); setQueriedCities(result); setIsLoaded(true);})\n    }\n    if(isLoaded) {\n      console.log('isloaded')\n      setIsLoaded(false);\n      suggestions = queriedCities.map(suggestion => ({\n        value: suggestion.name,\n        label: suggestion.name,\n    }))\n    }\n  })\n\n  function handleCityInputChange(value) {\n    if (value.nativeEvent) {\n      const query = value.target.value\n      \n      fetch('/api/cities/search', {\n        method: 'POST',\n        body: JSON.stringify({data: query}),\n        headers: {'Content-Type': 'application/json'}\n      })\n      .then(res => res.json())\n      .then((result) => {console.log(result); setIsLoaded(true); setQueriedCities(result);})\n    \n    } else {setSelectedCity(value)}\n  }\n\n  function handleStateInputChange(value) {\n    if(value.nativeEvent){\n      const query = value.target.value\n      console.log(value.target)\n      setQueriedState(query);\n      console.log('GOTCHA')\n    } else {setSelectedState(value)}\n  }\n\n  function handleSubmit(event) {\n    console.log(event);\n  }\n\n\n  const selectStyles = {\n    input: base => ({\n      ...base,\n      color: 'white',\n      '& input': {\n        font: 'inherit',\n      },\n    }),\n  };\n\n  return (\n    <div className={classes.root}>\n      <form onSubmit={handleSubmit}>\n      <NoSsr>\n        <Select\n          classes={classes}\n          styles={selectStyles}\n          inputId=\"react-select-city\"\n          TextFieldProps={{\n            label: 'City',\n            InputLabelProps: {\n              htmlFor: 'react-select-city',\n              shrink: true,\n            },\n            placeholder: 'Search for a city',\n          }}\n          options={queriedCities ? queriedCities.map(suggestion => ({\n            value: suggestion.name,\n            label: suggestion.name,\n          })) : console.log('not yet')}\n          value={selectedCity}\n          onChange={handleCityInputChange}\n          components={components}\n        />\n        <div className={classes.divider} />\n        <Select\n          classes={classes}\n          styles={selectStyles}\n          inputId=\"react-select-country\"\n          TextFieldProps={{\n            label: 'State',\n            InputLabelProps: {\n              htmlFor: 'react-select-country',\n              shrink: true,\n            },\n            placeholder: 'Search for a city',\n          }}\n          options={states.map(suggestion => ({\n            value: suggestion.label,\n            label: suggestion.label,\n          }))}\n          components={components}\n          value={selectedState}\n          onChange={handleStateInputChange}\n        />\n      </NoSsr>\n        <Button type=\"submit\" />\n        </form>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}