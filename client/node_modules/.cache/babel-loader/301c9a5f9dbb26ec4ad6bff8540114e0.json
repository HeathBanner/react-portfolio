{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Contact/ContactForm.js\";\nimport React, { useState, Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Button, Snackbar, SnackbarContent, IconButton, Icon, Typography } from '@material-ui/core';\nimport Image from './imgs/luke-chesser.jpg';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    form: {\n      backgroundImage: \"url(\".concat(Image, \")\"),\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexWrap: 'nowrap',\n      padding: '100px 0px 50px 0px',\n      height: '100vh'\n    },\n    paper: {\n      width: '60%',\n      padding: '20px 40px'\n    },\n    textFields: {\n      marginTop: '20px',\n      width: '80%'\n    },\n    button: {\n      padding: '10px',\n      marginTop: '20px'\n    },\n    snackbar: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    icon: {\n      marginRight: '10px'\n    },\n    label: {\n      '&$focused': {\n        color: '#c13bff !important'\n      }\n    },\n    outlinedInput: {\n      '&$focused $notchedOutline': {\n        borderColor: '#f50057 !important'\n      },\n      '&:hover $notchedOutline': {\n        borderColor: '#f50057 !important'\n      }\n    },\n    focused: {},\n    hover: {},\n    notchedOutline: {}\n  };\n});\n\nfunction ContactForm() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      open = _useState10[0],\n      setOpen = _useState10[1];\n\n  var classes = useStyles();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(name, email, phone, message);\n    var data = {\n      name: name,\n      email: email,\n      phone: phone,\n      message: message\n    };\n    fetch('/api/contact/newContact', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (response) {\n      console.log(response);\n      setOpen(true);\n      setName('');\n      setEmail('');\n      setPhone('');\n      setMessage('');\n    });\n  }\n\n  ;\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"center\",\n    color: \"textSecondary\",\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Contact Me\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Your Name\",\n    name: \"Name\",\n    required: true,\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    className: classes.textFields,\n    InputLabelProps: {\n      classes: {\n        root: classes.label,\n        focused: classes.focused\n      }\n    },\n    InputProps: {\n      classes: {\n        root: classes.outlinedInput,\n        focused: classes.focused,\n        hover: classes.hover,\n        notchedOutline: classes.notchedOutline\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Your Email\",\n    name: \"Email\",\n    type: \"email\",\n    required: true,\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    className: classes.textFields,\n    InputLabelProps: {\n      classes: {\n        root: classes.label,\n        focused: classes.focused\n      }\n    },\n    InputProps: {\n      classes: {\n        root: classes.outlinedInput,\n        focused: classes.focused,\n        hover: classes.hover,\n        notchedOutline: classes.notchedOutline\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Your Phone Number\",\n    name: \"Phone\",\n    required: true,\n    value: phone,\n    onChange: function onChange(e) {\n      return setPhone(e.target.value);\n    },\n    className: classes.textFields,\n    InputLabelProps: {\n      classes: {\n        root: classes.label,\n        focused: classes.focused\n      }\n    },\n    InputProps: {\n      classes: {\n        root: classes.outlinedInput,\n        focused: classes.focused,\n        hover: classes.hover,\n        notchedOutline: classes.notchedOutline\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Message\",\n    name: \"Message\",\n    required: true,\n    value: message,\n    onChange: function onChange(e) {\n      return setMessage(e.target.value);\n    },\n    className: classes.textFields,\n    InputLabelProps: {\n      classes: {\n        root: classes.label,\n        focused: classes.focused\n      }\n    },\n    InputProps: {\n      classes: {\n        root: classes.outlinedInput,\n        focused: classes.focused,\n        hover: classes.hover,\n        notchedOutline: classes.notchedOutline\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    className: classes.button,\n    fullWidth: true,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Send\")), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    message: React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"check\"), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Your contact information has been saved!\")),\n    action: React.createElement(IconButton, {\n      onClick: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"close\")),\n    classes: {\n      message: classes.snackbar\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }))));\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Contact/ContactForm.js"],"names":["React","useState","Fragment","makeStyles","Paper","TextField","Button","Snackbar","SnackbarContent","IconButton","Icon","Typography","Image","useStyles","theme","form","backgroundImage","display","justifyContent","alignItems","flexWrap","padding","height","paper","width","textFields","marginTop","button","snackbar","icon","marginRight","label","color","outlinedInput","borderColor","focused","hover","notchedOutline","ContactForm","name","setName","email","setEmail","phone","setPhone","message","setMessage","open","setOpen","classes","handleSubmit","e","preventDefault","console","log","data","fetch","method","body","JSON","stringify","headers","then","res","json","response","handleClose","target","value","root","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Button, Snackbar, SnackbarContent, IconButton, Icon, Typography } from '@material-ui/core';\nimport Image from './imgs/luke-chesser.jpg';\n\nconst useStyles = makeStyles(theme => ({\n    form : {\n        backgroundImage: `url(${Image})`,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: 'nowrap',\n        padding: '100px 0px 50px 0px',\n        height: '100vh'\n    },\n    paper: {\n        width: '60%',\n        padding: '20px 40px'\n    },\n    textFields: {\n        marginTop: '20px',\n        width: '80%',\n    },\n    button: {\n        padding: '10px',\n        marginTop: '20px'\n    },\n    snackbar: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    icon: {\n        marginRight: '10px'\n    },\n    label: {\n        '&$focused': {\n            color: '#c13bff !important',\n        },\n    },\n    outlinedInput: {\n        '&$focused $notchedOutline': {\n            borderColor: '#f50057 !important',\n        },\n        '&:hover $notchedOutline': {\n            borderColor: '#f50057 !important',\n        }\n    },\n    focused: {},\n    hover: {},\n    notchedOutline: {},\n}))\n\nfunction ContactForm() {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [phone, setPhone] = useState('');\n    const [message, setMessage] = useState('');\n    const [open, setOpen] = useState(false);\n \n    const classes = useStyles();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(name, email, phone, message);\n        const data = {name: name, email: email, phone: phone, message: message};\n        fetch('/api/contact/newContact', {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((response) => {\n            console.log(response);\n            setOpen(true)\n            setName('');\n            setEmail('');\n            setPhone('');\n            setMessage('');\n        });\n    };\n\n    function handleClose() {\n        setOpen(false);\n    }\n\n    return (\n        <div className={classes.form}>\n            <Paper  className={classes.paper}>\n                <Typography align=\"center\" color=\"textSecondary\" variant=\"h2\">\n                    Contact Me\n                </Typography>\n                <form onSubmit={handleSubmit}>\n                    <TextField \n                        variant=\"outlined\"\n                        label=\"Your Name\"\n                        name=\"Name\"\n                        required\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        className={classes.textFields}\n                        InputLabelProps={{classes: {\n                            root: classes.label,\n                            focused: classes.focused\n                        }}}\n                        InputProps={{classes: {\n                            root: classes.outlinedInput,\n                            focused: classes.focused,\n                            hover: classes.hover,\n                            notchedOutline: classes.notchedOutline\n                        }}}\n                    />\n                    <TextField \n                        variant=\"outlined\"\n                        label=\"Your Email\"\n                        name=\"Email\"\n                        type=\"email\"\n                        required\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        className={classes.textFields}\n                        InputLabelProps={{classes: {\n                            root: classes.label,\n                            focused: classes.focused\n                        }}}\n                        InputProps={{classes: {\n                            root: classes.outlinedInput,\n                            focused: classes.focused,\n                            hover: classes.hover,\n                            notchedOutline: classes.notchedOutline\n                        }}}\n                    />\n                    <TextField \n                        variant=\"outlined\"\n                        label=\"Your Phone Number\"\n                        name=\"Phone\"\n                        required\n                        value={phone}\n                        onChange={(e) => setPhone(e.target.value)}\n                        className={classes.textFields}\n                        InputLabelProps={{classes: {\n                            root: classes.label,\n                            focused: classes.focused\n                        }}}\n                        InputProps={{classes: {\n                            root: classes.outlinedInput,\n                            focused: classes.focused,\n                            hover: classes.hover,\n                            notchedOutline: classes.notchedOutline\n                        }}}\n                    />\n                    <TextField \n                        variant=\"outlined\"\n                        label=\"Message\"\n                        name=\"Message\"\n                        required\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        className={classes.textFields}\n                        InputLabelProps={{classes: {\n                            root: classes.label,\n                            focused: classes.focused\n                        }}}\n                        InputProps={{classes: {\n                            root: classes.outlinedInput,\n                            focused: classes.focused,\n                            hover: classes.hover,\n                            notchedOutline: classes.notchedOutline\n                        }}}\n                    />\n                    <Button type=\"submit\" className={classes.button} fullWidth color='secondary' >Send</Button>\n                </form>\n\n                <Snackbar\n                    anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\n                    open={open}\n                    autoHideDuration={6000}\n                    onClose={handleClose}\n                >\n\n                    <SnackbarContent \n                        message={\n                            <Fragment>\n                                <Icon className={classes.icon}>check</Icon>\n                                <Typography>\n                                    Your contact information has been saved!\n                                </Typography>\n                            </Fragment>\n                        }\n                        action={\n                            <IconButton onClick={handleClose}>\n                                <Icon style={{color: 'white'}}>close</Icon>\n                            </IconButton>\n                        }\n                        classes={{message: classes.snackbar}}\n                    />\n\n                </Snackbar>\n\n            </Paper>\n        </div>\n    );\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}