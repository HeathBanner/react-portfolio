{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Weather/Weather.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography } from '@material-ui/core';\nimport Search from './Search';\nimport WeatherModule from './WeatherModule';\nimport Description from './Description';\nimport weatherBG from './imgs/1x/weatherBGNew.png';\nvar useStyles = makeStyles(function (theme) {\n  var _weatherSection;\n\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      width: '100%',\n      marginTop: 180\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      transform: 'translateZ(0)'\n    },\n    weatherSection: (_weatherSection = {}, _defineProperty(_weatherSection, theme.breakpoints.up('md'), {\n      height: '160vh'\n    }), _defineProperty(_weatherSection, theme.breakpoints.up('sm'), {\n      height: '170vh'\n    }), _defineProperty(_weatherSection, theme.breakpoints.down('sm'), {\n      height: '185vh'\n    }), _defineProperty(_weatherSection, theme.breakpoints.down('xs'), {\n      height: '180vh'\n    }), _defineProperty(_weatherSection, \"backgroundImage\", \"url(\".concat(weatherBG, \")\")), _defineProperty(_weatherSection, \"backgroundSize\", 'cover'), _defineProperty(_weatherSection, \"height\", '160vh'), _weatherSection),\n    concept: {\n      marginTop: '30px',\n      marginLeft: '80px'\n    }\n  };\n});\n\nfunction Weather(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      weather = _useState2[0],\n      setWeather = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      parsedForecast = _useState4[0],\n      setParsedForecast = _useState4[1];\n\n  var classes = useStyles();\n  var theme = useTheme();\n  var sm = useMediaQuery(theme.breakpoints.down('sm'));\n  var xs = useMediaQuery(theme.breakpoints.down('xs'));\n\n  var getVariant = function getVariant() {\n    if (xs) {\n      return 'h4';\n    }\n\n    if (sm) {\n      return 'h3';\n    } else {\n      return 'h2';\n    }\n  };\n\n  useEffect(function () {\n    fetch('https://api.openweathermap.org/data/2.5/forecast?lat=35.227085&lon=-80.843124&units=imperial&APPID=4216d1350fe31af9bf5100bb34fa72e2').then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setWeather(result);\n    });\n  }, []);\n  useEffect(function () {\n    if (!weather) {\n      return;\n    }\n\n    var dt = '';\n    var filteredResult = weather.list.filter(function (object) {\n      if (dt === '') {\n        dt = object.dt_txt.split(' ');\n        dt = dt[0];\n        return true;\n      }\n\n      var sample = object.dt_txt.split(' ');\n\n      if (dt !== sample[0]) {\n        dt = sample[0];\n        return true;\n      }\n    });\n    setParsedForecast(filteredResult);\n    props.grabWeather(filteredResult[0]);\n  }, [weather]);\n\n  function updateModule(coords) {\n    setParsedForecast('');\n    fetch(\"https://api.openweathermap.org/data/2.5/forecast?lat=\".concat(coords[0].coord.lat, \"&lon=\").concat(coords[0].coord.lon, \"&units=imperial&APPID=4216d1350fe31af9bf5100bb34fa72e2\")).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setWeather(result);\n    });\n  }\n\n  ;\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.weatherSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.concept,\n    align: \"center\",\n    color: \"primary\",\n    variant: getVariant(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Weather Concept\")), parsedForecast ? React.createElement(WeatherModule, {\n    forecast: parsedForecast,\n    city: weather.city.name,\n    country: weather.city.country,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }) : '', React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Search, {\n    updateModule: updateModule,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }))));\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Weather/Weather.js"],"names":["React","useEffect","useState","makeStyles","useTheme","useMediaQuery","Grid","Typography","Search","WeatherModule","Description","weatherBG","useStyles","theme","root","display","flexWrap","justifyContent","overflow","width","marginTop","gridList","transform","weatherSection","breakpoints","up","height","down","concept","marginLeft","Weather","props","weather","setWeather","parsedForecast","setParsedForecast","classes","sm","xs","getVariant","fetch","then","res","json","result","dt","filteredResult","list","filter","object","dt_txt","split","sample","grabWeather","updateModule","coords","coord","lat","lon","city","name","country"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography } from '@material-ui/core';\n\nimport Search from './Search';\nimport WeatherModule from './WeatherModule';\nimport Description from './Description';\n\nimport weatherBG from './imgs/1x/weatherBGNew.png'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      width: '100%',\n      marginTop: 180\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      transform: 'translateZ(0)',\n    },\n    weatherSection: {\n        [theme.breakpoints.up('md')]: {\n            height: '160vh',\n        },\n        [theme.breakpoints.up('sm')]: {\n            height: '170vh',\n        },\n        [theme.breakpoints.down('sm')]: {\n            height: '185vh',\n        },\n        [theme.breakpoints.down('xs')]: {\n            height: '180vh',\n        },\n        backgroundImage: `url(${weatherBG})`,\n        backgroundSize: 'cover',\n        height: '160vh',\n    },\n    concept: {\n        marginTop: '30px',\n        marginLeft: '80px',\n    },\n}));\n  \nfunction Weather(props) {\n\n    const [weather, setWeather] = useState('');\n    const [parsedForecast, setParsedForecast] = useState('');\n\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const sm = useMediaQuery(theme.breakpoints.down('sm'));\n    const xs = useMediaQuery(theme.breakpoints.down('xs'));\n\n    const getVariant = () => {\n        if(xs) { return 'h4' }\n        if(sm) { return 'h3' }\n        else { return 'h2' }\n    };\n\n    useEffect(() => {\n        fetch('https://api.openweathermap.org/data/2.5/forecast?lat=35.227085&lon=-80.843124&units=imperial&APPID=4216d1350fe31af9bf5100bb34fa72e2')\n            .then(res => res.json())\n            .then((result) => { \n                setWeather(result);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (!weather) { return }\n        let dt = '';\n        const filteredResult = weather.list.filter((object) => {\n            if(dt === '') {\n                dt = object.dt_txt.split(' ');\n                dt = dt[0];\n                return true;\n            }\n            const sample = object.dt_txt.split(' ')\n            if (dt !== sample[0]) {\n                dt = sample[0];\n                return true;\n            }\n        })\n        setParsedForecast(filteredResult);\n        props.grabWeather(filteredResult[0]);\n    }, [weather]);\n\n    function updateModule(coords) {\n        setParsedForecast('');\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${coords[0].coord.lat}&lon=${coords[0].coord.lon}&units=imperial&APPID=4216d1350fe31af9bf5100bb34fa72e2`)\n            .then(res => res.json())\n            .then((result) => {\n                setWeather(result); \n            });\n    };\n\n    return (\n            <Grid container className={classes.weatherSection}>\n\n                    <Grid item xs={12}>\n\n                        <Typography className={classes.concept} align=\"center\" color=\"primary\" variant={getVariant()}>\n                            Weather Concept\n                        </Typography>\n\n                    </Grid>\n                            \n                    {\n                        parsedForecast ?\n\n                        <WeatherModule \n                            forecast={parsedForecast}\n                            city={weather.city.name}\n                            country={weather.city.country}\n                        />\n                            : \n                        ''\n                    }\n\n                    <Grid container>\n\n                        <Grid item xs={12}>\n                                <div >\n                                    <Search updateModule={updateModule} />\n                                </div>\n                        </Grid>\n\n                        <Grid item xs={12}>\n\n                            <Description />\n\n                        </Grid>\n\n                    </Grid>\n            </Grid>\n    );\n}\n \nexport default Weather;"]},"metadata":{},"sourceType":"module"}