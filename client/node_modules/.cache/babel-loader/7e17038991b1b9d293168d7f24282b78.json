{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Profile/Skyliner.js\";\nimport React, { Fragment, useContext, useEffect, useState } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar, Typography, Fab, Icon } from '@material-ui/core';\nimport { Parallax } from 'react-parallax';\nvar useStyles = makeStyles({\n  skyliner: {\n    width: '100%',\n    height: '40vh'\n  },\n  skylinerRow: {\n    height: '40vh',\n    display: 'flex',\n    alignItems: 'flex-end'\n  },\n  skylinerContent: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    flexDirection: 'row',\n    flexWrap: 'none'\n  },\n  profileAvatar: {\n    width: 120,\n    height: 120,\n    margin: '0px 20px 0px 10px'\n  },\n  username: {\n    color: 'white'\n  },\n  skylinerDivLeft: {\n    display: 'flex',\n    alignItems: 'flex-end'\n  },\n  skylinerDivRight: {\n    padding: '0px 20px',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  Fab: {\n    margin: '10px 20px'\n  }\n});\n\nfunction Skyliner(props) {\n  var classes = useStyles();\n  var auth = useContext(AuthContext);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      friend = _useState4[0],\n      setFriend = _useState4[1];\n\n  useEffect(function () {\n    if (!loaded && auth.user && props.user) {\n      setLoaded(true);\n      var result = auth.user.friendList.filter(function (friend) {\n        return props.user.username === friend.username;\n      });\n      console.log(result);\n      console.log(props.user.username);\n      console.log(auth.user.friendList);\n\n      if (result.length === 1) {\n        console.log('HA');\n        setFriend(true);\n      }\n\n      ;\n    }\n  });\n\n  function addFriend() {\n    var data = {\n      friendId: props.user._id,\n      personalId: auth.user._id\n    };\n    fetch('/api/social/addFriend', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      console.log(result);\n      setFriend(true);\n    });\n  }\n\n  ;\n\n  function renderButtons() {\n    if (props.auth) {\n      console.log(auth);\n\n      if (props.auth.username !== props.username) {\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, friend ? React.createElement(Fab, {\n          className: classes.Fab,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"person_outline\")) : React.createElement(Fab, {\n          onClick: addFriend,\n          className: classes.Fab,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"person_add\")), React.createElement(Fab, {\n          className: classes.Fab,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"message\")));\n      }\n    }\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Parallax, {\n    bgImage: props.user.skyline,\n    bgImageAlt: \"Skyliner\",\n    strength: 200,\n    className: classes.skyliner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row \".concat(classes.skylinerRow),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-6 \".concat(classes.skylinerContent),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.skylinerDivLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    src: props.user.avatar,\n    className: classes.profileAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    display: \"inline\",\n    variant: \"h2\",\n    color: \"textPrimary\",\n    className: classes.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, props.username))), React.createElement(\"div\", {\n    className: \"col-6 \".concat(classes.skylinerContent),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.skylinerDivRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, renderButtons())))));\n}\n\nexport default Skyliner;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Profile/Skyliner.js"],"names":["React","Fragment","useContext","useEffect","useState","AuthContext","makeStyles","Avatar","Typography","Fab","Icon","Parallax","useStyles","skyliner","width","height","skylinerRow","display","alignItems","skylinerContent","flexDirection","flexWrap","profileAvatar","margin","username","color","skylinerDivLeft","skylinerDivRight","padding","justifyContent","Skyliner","props","classes","auth","loaded","setLoaded","friend","setFriend","user","result","friendList","filter","console","log","length","addFriend","data","friendId","_id","personalId","fetch","method","body","JSON","stringify","headers","then","res","json","renderButtons","skyline","avatar"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useEffect, useState } from 'react';\n\nimport AuthContext from '../../../context/AuthContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar, Typography, Fab, Icon } from '@material-ui/core';\n\nimport { Parallax } from 'react-parallax';\n\nconst useStyles = makeStyles({\n    skyliner: {\n        width: '100%',\n        height: '40vh',\n    },\n    skylinerRow: {\n        height: '40vh',\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    skylinerContent: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        flexDirection: 'row',\n        flexWrap: 'none',\n    },\n    profileAvatar: {\n        width: 120,\n        height: 120,\n        margin: '0px 20px 0px 10px',\n    },\n    username: {\n        color: 'white',\n    },\n    skylinerDivLeft: {\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    skylinerDivRight: {\n        padding: '0px 20px',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    Fab: {\n        margin: '10px 20px',\n    },\n})\n\nfunction Skyliner(props) {\n\n    const classes = useStyles();\n    const auth = useContext(AuthContext);\n    \n    const [loaded, setLoaded] = useState(false);\n    const [friend, setFriend] = useState(false);\n\n    useEffect(() => {\n        if((!loaded)&&(auth.user)&&(props.user)){\n            setLoaded(true)\n            var result = auth.user.friendList.filter(friend => props.user.username === friend.username)\n            console.log(result);\n            console.log(props.user.username);\n            console.log(auth.user.friendList)\n            if(result.length === 1){console.log('HA');setFriend(true)};\n        }\n    });\n\n    function addFriend() {\n\n        const data = {\n            friendId: props.user._id,\n            personalId: auth.user._id,\n        };\n\n        fetch('/api/social/addFriend', {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((result) => {\n            console.log(result);\n            setFriend(true);\n        });\n    };\n\n    function renderButtons() {\n        if(props.auth) {\n            console.log(auth)\n            if(props.auth.username !== props.username) {\n                return (\n                    <Fragment>\n                        {friend ? \n                            <Fab className={classes.Fab}>\n                                <Icon>person_outline</Icon> \n                            </Fab>\n                        : \n                            <Fab onClick={addFriend} className={classes.Fab}>\n                                <Icon>person_add</Icon>\n                            </Fab>\n                        }\n                        <Fab className={classes.Fab}>\n                            <Icon>message</Icon>\n                        </Fab>\n                    </Fragment>\n                );\n            }\n        }\n    }\n\n    return (\n        <Fragment>\n            <Parallax\n                bgImage={props.user.skyline}\n                bgImageAlt=\"Skyliner\"\n                strength={200}\n                className={classes.skyliner}\n            >\n                <div className={`row ${classes.skylinerRow}`}>\n                    <div className={`col-6 ${classes.skylinerContent}`}>\n                        <div className={classes.skylinerDivLeft}>\n                            <Avatar src={props.user.avatar} className={classes.profileAvatar} />\n                            <Typography\n                                display=\"inline\"\n                                variant=\"h2\"\n                                color=\"textPrimary\"\n                                className={classes.username}\n                            >\n                                {props.username}\n                            </Typography>\n                        </div>\n                    </div>\n                    <div className={`col-6 ${classes.skylinerContent}`}>\n                        <div className={classes.skylinerDivRight}>\n                            {renderButtons()}                            \n                        </div>\n                    </div>\n                </div>\n            </Parallax>\n        </Fragment>\n    );\n}\n\n\nexport default Skyliner;"]},"metadata":{},"sourceType":"module"}