{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Chat/ChatContainer.js\";\nimport React, { useState, useContext } from 'react';\nimport { CTX } from '../../../context/Story';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, List, ListItem, Icon, TextField, Button, Paper, Chip } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    chatMenu: {\n      position: 'fixed',\n      bottom: '0',\n      right: '0'\n    },\n    chatPaper: {\n      minHeight: 300,\n      minWidth: 200,\n      padding: '10px 10px'\n    },\n    chatInput: {\n      position: 'absolute',\n      bottom: 0,\n      display: 'flex',\n      margin: '0px 10px'\n    },\n    chatContainer: {\n      overflow: 'scroll'\n    },\n    chatList: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      paddingInlineStart: '0px'\n    },\n    listItem: {\n      padding: '0px 0px 0px 0px'\n    }\n  };\n});\n\nfunction Chat() {\n  var _useContext = useContext(CTX),\n      chats = _useContext.chats,\n      sendChatAction = _useContext.sendChatAction,\n      user = _useContext.user;\n\n  var topics = Object.keys(chats);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      textValue = _useState2[0],\n      setTextValue = _useState2[1];\n\n  var _useState3 = useState(topics[0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeTopic = _useState4[0],\n      setActiveTopic = _useState4[1];\n\n  var classes = useStyles();\n\n  function handleChange(e) {\n    var value = e.target.value;\n    setTextValue(value);\n  }\n\n  return React.createElement(Paper, {\n    className: classes.chatPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Chat\"), React.createElement(List, {\n    className: classes.chatContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, console.log('?????', chats.chats), chats.chats.hasOwnProperty('key') ? chats.chats.HeathLinen.map(function (chat, index) {\n    console.log('PASSSSS', chats.chats);\n    return React.createElement(ListItem, {\n      key: index,\n      className: classes.listItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      icon: React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"message\"),\n      label: \"\".concat(chat.from, \": \").concat(chat.msg),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }) : console.log(chats)), React.createElement(\"div\", {\n    className: classes.chatInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    value: textValue,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: function onClick() {\n      sendChatAction({\n        from: user,\n        msg: textValue,\n        to: 'HeathLinen'\n      });\n      setTextValue('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Send\")));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Chat/ChatContainer.js"],"names":["React","useState","useContext","CTX","makeStyles","Typography","List","ListItem","Icon","TextField","Button","Paper","Chip","useStyles","theme","chatMenu","position","bottom","right","chatPaper","minHeight","minWidth","padding","chatInput","display","margin","chatContainer","overflow","chatList","justifyContent","paddingInlineStart","listItem","Chat","chats","sendChatAction","user","topics","Object","keys","textValue","setTextValue","activeTopic","setActiveTopic","classes","handleChange","e","value","target","console","log","hasOwnProperty","HeathLinen","map","chat","index","from","msg","to"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\n\nimport { CTX } from '../../../context/Story';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, List, ListItem, Icon, TextField, Button, Paper, Chip } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    chatMenu: {\n        position: 'fixed',\n        bottom: '0',\n        right: '0',\n    },\n    chatPaper: {        \n        minHeight: 300,\n        minWidth: 200,\n        padding: '10px 10px',\n\n    },\n    chatInput: {\n        position: 'absolute',\n        bottom: 0,\n        display: 'flex',\n        margin: '0px 10px',\n    },\n    chatContainer: {\n        overflow: 'scroll'\n    },\n    chatList: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        paddingInlineStart: '0px'\n    },   \n    listItem: {\n        padding: '0px 0px 0px 0px'\n    },\n}))\n\n\nfunction Chat() {\n    const { chats, sendChatAction, user } = useContext(CTX);\n    const topics = Object.keys(chats);\n\n    const [textValue, setTextValue] = useState('');\n    const [activeTopic, setActiveTopic] = useState(topics[0]);\n\n    const classes = useStyles();\n\n\n    function handleChange(e) {\n        const { value } = e.target;\n        setTextValue(value);\n    }\n\n\n    return (\n\n        <Paper className={classes.chatPaper}>\n        <Typography align=\"center\">\n            Chat\n        </Typography>\n        <List className={classes.chatContainer}>\n            {console.log('?????',chats.chats)}\n            {chats.chats.hasOwnProperty('key')  ? chats.chats.HeathLinen.map((chat, index) => {\n                console.log('PASSSSS', chats.chats)\n                return(\n                    <ListItem key={index} className={classes.listItem}>\n                        <Chip \n                            icon={<Icon>message</Icon>}\n                            label={`${chat.from}: ${chat.msg}`}\n                        />\n                    </ListItem>\n                )\n            }) : console.log(chats)}\n        </List>\n        <div className={classes.chatInput}>\n            <TextField \n                variant=\"outlined\"\n                value={textValue}\n                onChange={handleChange}\n            />\n            <Button onClick={() => {sendChatAction({from: user, msg: textValue, to: 'HeathLinen'}); setTextValue('');}}>Send</Button>\n        </div>\n    </Paper>\n    ); \n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}