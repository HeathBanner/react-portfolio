{"ast":null,"code":"// import React, { useContext, useState, Fragment } from 'react';\n// import { Link } from 'react-router-dom';\n// import clsx from 'clsx';\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\n// import Drawer from '@material-ui/core/Drawer';\n// import Avatar from '@material-ui/core/Avatar';\n// import CssBaseline from '@material-ui/core/CssBaseline';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import List from '@material-ui/core/List';\n// import Typography from '@material-ui/core/Typography';\n// import Divider from '@material-ui/core/Divider';\n// import IconButton from '@material-ui/core/IconButton';\n// import Icon from '@material-ui/core/Icon';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import Moment from 'react-moment';\n// import FormatDate from 'moment';\n// import AuthContext from '../../context/AuthContext';\n// import { Redirect } from 'react-router-dom';\n// const drawerWidth = 240;\n// export default function PersistentDrawerLeft(props) {\n//   const useStyles = makeStyles(theme => ({\n//     root: {\n//       display: 'flex',\n//     },\n//     appBar: {\n//       transition: theme.transitions.create(['margin', 'width'], {\n//         easing: theme.transitions.easing.sharp,\n//         duration: theme.transitions.duration.leavingScreen,\n//       }),\n//     },\n//     appBarShift: {\n//       width: `calc(100% - ${drawerWidth}px)`,\n//       marginLeft: drawerWidth,\n//       transition: theme.transitions.create(['margin', 'width'], {\n//         easing: theme.transitions.easing.easeOut,\n//         duration: theme.transitions.duration.enteringScreen,\n//       }),\n//     },\n//     toolBar: {\n//       display: 'flex',\n//       alignItems: 'center',\n//       flexWrap: 'nowrap',\n//       // justifyContent: 'center',\n//       // display: 'block',\n//       // textAlign: 'center',\n//       background: 'rgb(255, 145, 71)',\n//     },\n//     menuButton: {\n//         position: 'absolute',\n//         left: '3%',\n//         marginRight: theme.spacing(2),\n//         color: props.mood ? `${props.mood.menuButton}` : 'white',\n//     },\n//     barTitle: {\n//       position: 'absolute',\n//       top: '50%',\n//       left: '50%',\n//       transform: 'translate(-50%, -50%)',\n//       display: 'flex',\n//       alignItems: 'center',\n//       color: props.mood ? `${props.mood.barTitle}` : 'white',\n//       width: 'auto',\n//     },\n//     typo: {\n//       width: 'auto',\n//       display: 'inline',\n//       marginLeft: '10px',\n//     },\n//     hide: {\n//       display: 'none',\n//     },\n//     drawer: {\n//       width: '0px',\n//       // width: drawerWidth,\n//       flexShrink: 0,\n//     },\n//     drawerPaper: {\n//       width: drawerWidth,\n//     },\n//     drawerHeader: {\n//       display: 'flex',\n//       alignItems: 'center',\n//       padding: '0 8px',\n//       ...theme.mixins.toolbar,\n//       justifyContent: 'flex-end',\n//     },\n//     content: {\n//       flexGrow: 1,\n//       padding: theme.spacing(3),\n//       transition: theme.transitions.create('margin', {\n//         easing: theme.transitions.easing.sharp,\n//         duration: theme.transitions.duration.leavingScreen,\n//       }),\n//       marginLeft: -drawerWidth,\n//     },\n//     contentShift: {\n//       transition: theme.transitions.create('margin', {\n//         easing: theme.transitions.easing.easeOut,\n//         duration: theme.transitions.duration.enteringScreen,\n//       }),\n//       marginLeft: 0,\n//     },\n//     moment: {\n//       position: 'absolute',\n//       right: '3%',\n//       marginRight: theme.spacing(2),\n//       display: 'flex',\n//       alignItems: 'center',\n//     },\n//     clock: {\n//       marginRight: '5px'\n//     },\n//     link: {\n//       color: 'black',\n//       textDecoration: 'none',\n//       '&:hover': {\n//         color: 'black',\n//       }\n//     },\n//   }));\n//   const links = ['/inbox', '/settings', '/findFriends'];\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const value = useContext(AuthContext);\n//   const [open, setOpen] = useState(false);\n//   // const [inbox, setInbox] = useState(false); \n//   // const [settings, setSettings] = useState(false);\n//   function handleDrawerOpen() {\n//     setOpen(true);\n//   }\n//   function handleDrawerClose() {\n//     setOpen(false);\n//   }\n//   function handleMenuItem() {\n//     console.log('!!!!!!')\n//     value.onLogout();\n//   }\n//   function renderRedirect() {\n//     if(inbox){return <Redirect to={'/inbox'} />}\n//     if(settings){return <Redirect to={'/settings'} />}\n//   }\n//   function getTime() {\n//     date = FormatDate()\n//   }\n//   var date = ''\n//   setInterval(getTime, 30000);\n//   return (\n//       <Fragment>\n//         {renderRedirect()}\n//         <div className={classes.root}>\n//           <CssBaseline />\n//           <AppBar\n//             position=\"relative\"\n//             className={clsx(classes.appBar, {\n//               [classes.appBarShift]: open,\n//             })}\n//           >\n//             <Toolbar className={classes.toolBar}>\n//               <IconButton\n//                 color=\"inherit\"\n//                 aria-label=\"Open drawer\"\n//                 onClick={handleDrawerOpen}\n//                 edge=\"start\"\n//                 className={clsx(classes.menuButton, open && classes.hide)}\n//               >\n//                 <Icon>menu</Icon>\n//               </IconButton>\n//               {/* <div className={classes.barTitle}> */}\n//                 <Link className={classes.barTitle} to='/social'>\n//                   <Avatar alt={value.user ? value.user.username : console.log('NOPE')} src='/imgs/avatar.jpg' />\n//                   <Typography className={classes.typo} variant=\"h6\">\n//                     {value.user ? value.user.username : 'Anon'}\n//                   </Typography>\n//                 </Link>\n//               {/* </div> */}\n//               <div className={classes.moment}>\n//                 <Icon className={classes.clock}>access_time</Icon>\n//                 <Moment interval={30000} date={date} format={'dddd h:mm a'} />\n//               </div>\n//             </Toolbar>\n//           </AppBar>\n//           <Drawer\n//             className={classes.drawer}\n//             variant=\"persistent\"\n//             anchor=\"left\"\n//             open={open}\n//             classes={{\n//               paper: classes.drawerPaper,\n//             }}\n//           >\n//             <div className={classes.drawerHeader}>\n//               <IconButton onClick={handleDrawerClose}>\n//                 {theme.direction === 'ltr' ? <Icon>chevron_left</Icon> : <Icon>cheveron_right</Icon>}\n//               </IconButton>\n//             </div>\n//             <Divider />\n//             <List>\n//               {['Inbox', 'Settings', 'Find Friends'].map((text, index) => (\n//                 <Link key={index} style={{color: 'black', textDecoration: 'none'}} to={links[index]}>\n//                   <ListItem button key={text}>\n//                     <ListItemIcon >{index % 2 === 0 ? <Icon>inbox</Icon> : <Icon>mail</Icon>}</ListItemIcon>\n//                     <ListItemText primary={text} />\n//                   </ListItem>\n//                 </Link>\n//               ))}\n//                 <ListItem onClick={handleMenuItem} button key='Logout'>\n//                   <ListItemIcon><Icon>mail</Icon></ListItemIcon>\n//                   <ListItemText primary='Logout' />\n//                 </ListItem>\n//             </List>\n//             <Divider />\n//             </Drawer>\n//         </div>\n//       </Fragment>\n//   );\n// }","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Navigation/SocialDrawer.js"],"names":[],"mappingssourcesContent":["// import React, { useContext, useState, Fragment } from 'react';\n// import { Link } from 'react-router-dom';\n\n// import clsx from 'clsx';\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\n// import Drawer from '@material-ui/core/Drawer';\n// import Avatar from '@material-ui/core/Avatar';\n// import CssBaseline from '@material-ui/core/CssBaseline';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import List from '@material-ui/core/List';\n// import Typography from '@material-ui/core/Typography';\n// import Divider from '@material-ui/core/Divider';\n// import IconButton from '@material-ui/core/IconButton';\n// import Icon from '@material-ui/core/Icon';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import Moment from 'react-moment';\n// import FormatDate from 'moment';\n// import AuthContext from '../../context/AuthContext';\n// import { Redirect } from 'react-router-dom';\n\n// const drawerWidth = 240;\n\n\n// export default function PersistentDrawerLeft(props) {\n//   const useStyles = makeStyles(theme => ({\n//     root: {\n//       display: 'flex',\n//     },\n//     appBar: {\n//       transition: theme.transitions.create(['margin', 'width'], {\n//         easing: theme.transitions.easing.sharp,\n//         duration: theme.transitions.duration.leavingScreen,\n//       }),\n//     },\n//     appBarShift: {\n//       width: `calc(100% - ${drawerWidth}px)`,\n//       marginLeft: drawerWidth,\n//       transition: theme.transitions.create(['margin', 'width'], {\n//         easing: theme.transitions.easing.easeOut,\n//         duration: theme.transitions.duration.enteringScreen,\n//       }),\n//     },\n//     toolBar: {\n//       display: 'flex',\n//       alignItems: 'center',\n//       flexWrap: 'nowrap',\n//       // justifyContent: 'center',\n//       // display: 'block',\n//       // textAlign: 'center',\n//       background: 'rgb(255, 145, 71)',\n//     },\n//     menuButton: {\n//         position: 'absolute',\n//         left: '3%',\n//         marginRight: theme.spacing(2),\n//         color: props.mood ? `${props.mood.menuButton}` : 'white',\n//     },\n//     barTitle: {\n//       position: 'absolute',\n//       top: '50%',\n//       left: '50%',\n//       transform: 'translate(-50%, -50%)',\n//       display: 'flex',\n//       alignItems: 'center',\n//       color: props.mood ? `${props.mood.barTitle}` : 'white',\n//       width: 'auto',\n//     },\n//     typo: {\n//       width: 'auto',\n//       display: 'inline',\n//       marginLeft: '10px',\n//     },\n//     hide: {\n//       display: 'none',\n//     },\n//     drawer: {\n//       width: '0px',\n//       // width: drawerWidth,\n//       flexShrink: 0,\n//     },\n//     drawerPaper: {\n//       width: drawerWidth,\n//     },\n//     drawerHeader: {\n//       display: 'flex',\n//       alignItems: 'center',\n//       padding: '0 8px',\n//       ...theme.mixins.toolbar,\n//       justifyContent: 'flex-end',\n//     },\n//     content: {\n//       flexGrow: 1,\n//       padding: theme.spacing(3),\n//       transition: theme.transitions.create('margin', {\n//         easing: theme.transitions.easing.sharp,\n//         duration: theme.transitions.duration.leavingScreen,\n//       }),\n//       marginLeft: -drawerWidth,\n//     },\n//     contentShift: {\n//       transition: theme.transitions.create('margin', {\n//         easing: theme.transitions.easing.easeOut,\n//         duration: theme.transitions.duration.enteringScreen,\n//       }),\n//       marginLeft: 0,\n//     },\n//     moment: {\n//       position: 'absolute',\n//       right: '3%',\n//       marginRight: theme.spacing(2),\n//       display: 'flex',\n//       alignItems: 'center',\n//     },\n//     clock: {\n//       marginRight: '5px'\n//     },\n//     link: {\n//       color: 'black',\n//       textDecoration: 'none',\n//       '&:hover': {\n//         color: 'black',\n//       }\n//     },\n\n//   }));\n\n//   const links = ['/inbox', '/settings', '/findFriends'];\n  \n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const value = useContext(AuthContext);\n\n//   const [open, setOpen] = useState(false);\n//   // const [inbox, setInbox] = useState(false); \n//   // const [settings, setSettings] = useState(false);\n\n//   function handleDrawerOpen() {\n//     setOpen(true);\n//   }\n\n//   function handleDrawerClose() {\n//     setOpen(false);\n//   }\n\n//   function handleMenuItem() {\n//     console.log('!!!!!!')\n//     value.onLogout();\n//   }\n\n//   function renderRedirect() {\n//     if(inbox){return <Redirect to={'/inbox'} />}\n//     if(settings){return <Redirect to={'/settings'} />}\n//   }\n\n//   function getTime() {\n//     date = FormatDate()\n//   }\n//   var date = ''\n//   setInterval(getTime, 30000);\n\n//   return (\n//       <Fragment>\n//         {renderRedirect()}\n//         <div className={classes.root}>\n//           <CssBaseline />\n//           <AppBar\n//             position=\"relative\"\n//             className={clsx(classes.appBar, {\n//               [classes.appBarShift]: open,\n//             })}\n//           >\n//             <Toolbar className={classes.toolBar}>\n//               <IconButton\n//                 color=\"inherit\"\n//                 aria-label=\"Open drawer\"\n//                 onClick={handleDrawerOpen}\n//                 edge=\"start\"\n//                 className={clsx(classes.menuButton, open && classes.hide)}\n//               >\n//                 <Icon>menu</Icon>\n//               </IconButton>\n//               {/* <div className={classes.barTitle}> */}\n//                 <Link className={classes.barTitle} to='/social'>\n//                   <Avatar alt={value.user ? value.user.username : console.log('NOPE')} src='/imgs/avatar.jpg' />\n//                   <Typography className={classes.typo} variant=\"h6\">\n//                     {value.user ? value.user.username : 'Anon'}\n//                   </Typography>\n//                 </Link>\n//               {/* </div> */}\n//               <div className={classes.moment}>\n//                 <Icon className={classes.clock}>access_time</Icon>\n//                 <Moment interval={30000} date={date} format={'dddd h:mm a'} />\n//               </div>\n//             </Toolbar>\n//           </AppBar>\n//           <Drawer\n//             className={classes.drawer}\n//             variant=\"persistent\"\n//             anchor=\"left\"\n//             open={open}\n//             classes={{\n//               paper: classes.drawerPaper,\n//             }}\n//           >\n//             <div className={classes.drawerHeader}>\n//               <IconButton onClick={handleDrawerClose}>\n//                 {theme.direction === 'ltr' ? <Icon>chevron_left</Icon> : <Icon>cheveron_right</Icon>}\n//               </IconButton>\n//             </div>\n//             <Divider />\n//             <List>\n//               {['Inbox', 'Settings', 'Find Friends'].map((text, index) => (\n//                 <Link key={index} style={{color: 'black', textDecoration: 'none'}} to={links[index]}>\n//                   <ListItem button key={text}>\n//                     <ListItemIcon >{index % 2 === 0 ? <Icon>inbox</Icon> : <Icon>mail</Icon>}</ListItemIcon>\n//                     <ListItemText primary={text} />\n//                   </ListItem>\n//                 </Link>\n//               ))}\n//                 <ListItem onClick={handleMenuItem} button key='Logout'>\n//                   <ListItemIcon><Icon>mail</Icon></ListItemIcon>\n//                   <ListItemText primary='Logout' />\n//                 </ListItem>\n//             </List>\n//             <Divider />\n//             </Drawer>\n//         </div>\n//       </Fragment>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}