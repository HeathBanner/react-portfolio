{"ast":null,"code":"import _defineProperty from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Story/Timeline.js\";\nimport React, { useContext, Fragment, useState } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport Moment from 'react-moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Collapse, List, ListItem, ListItemText, ListItemAvatar, Divider, Typography, Avatar, Icon, IconButton } from '@material-ui/core';\nimport GetMoment from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      paddingTop: '0px',\n      paddingBottom: '0px'\n    },\n    form: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n});\n\nfunction Timeline() {\n  var classes = useStyles();\n  var auth = useContext(AuthContext);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      openComment = _useState2[0],\n      setOpenComment = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      commentInput = _useState4[0],\n      setCommentInput = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      storyIDs = _useState6[0],\n      setStoryIDs = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      friendStories = _useState8[0],\n      setFriendStories = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      onLoad = _useState10[0],\n      setOnLoad = _useState10[1];\n\n  if (!onLoad && auth.user) {\n    console.log('tripped!');\n    var storyIDList = {};\n    console.log(auth.user);\n    var test = auth.user.info.authored_stories.map(function (story, index) {\n      storyIDList[story._id] = false;\n    });\n    console.log(storyIDList);\n    setStoryIDs(storyIDList);\n    setOnLoad(true);\n  }\n\n  function handleDelete(id) {\n    console.log(id);\n    fetch('/api/social/deleteStory', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: id\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      console.log(user);\n      auth.updateAuth(user);\n    });\n  }\n\n  function handleCommentInput(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setCommentInput(value);\n  }\n\n  function handleCommentSubmit(e, id) {\n    e.preventDefault();\n    var username = auth.user.username;\n    var time = GetMoment();\n    console.log(id, commentInput);\n    fetch('api/social/newComment', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: id,\n        comment: commentInput,\n        username: username,\n        time: time\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      console.log(user);\n    });\n  }\n\n  ;\n\n  function renderFriendStories() {\n    if (friendStories.length > 1) {\n      friendStories.map(function (story, index) {\n        return React.createElement(Fragment, {\n          key: story._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(ListItemAvatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          alt: story._id,\n          src: \"/imgs/avatar.jpg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: story.text,\n          secondary: React.createElement(Moment, {\n            date: story.time,\n            format: 'dddd h:mm a',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          onClick: function onClick() {\n            return expandComment(story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, storyIDs ? storyIDs[story._id] ? 'expand_less' : 'expand_more' : false)), React.createElement(IconButton, {\n          onClick: function onClick() {\n            return handleDelete(story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"delete_outline\"))), React.createElement(Collapse, {\n          in: storyIDs ? storyIDs[story._id] : false,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(List, {\n          disablePadding: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, renderComments(story.comments)), React.createElement(\"form\", {\n          className: classes.form,\n          onSubmit: function onSubmit(e) {\n            return handleCommentSubmit(e, story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          name: \"123\",\n          value: commentInput,\n          variant: \"outlined\",\n          label: \"Add a comment\",\n          onChange: handleCommentInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"add_circle\")))), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }));\n      });\n    }\n  }\n\n  function renderComments(comments) {\n    console.log(comments);\n    var commentList = [];\n\n    if (comments.length < 5) {\n      commentList = comments.slice(0, comments.length);\n    } else {\n      commentList = comments.slice(0, 5);\n    }\n\n    return commentList.map(function (comment, index) {\n      return React.createElement(ListItem, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: \"\".concat(comment.username, \": \").concat(comment.text),\n        secondary: React.createElement(Moment, {\n          date: comment.time,\n          format: 'dddd h:mm a',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }));\n    });\n  }\n\n  ;\n\n  function expandComment(id) {\n    var newCommentState = !storyIDs[id];\n    console.log(newCommentState);\n    setStoryIDs(_objectSpread({}, storyIDs, _defineProperty({}, id, newCommentState)));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, auth.user ? auth.user.info.authored_stories.map(function (story, index) {\n    return React.createElement(Fragment, {\n      key: story._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: story._id,\n      src: \"/imgs/avatar.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: story.text,\n      secondary: React.createElement(Moment, {\n        date: story.time,\n        format: 'dddd h:mm a',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(IconButton, {\n      onClick: function onClick() {\n        return expandComment(story._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, storyIDs ? storyIDs[story._id] ? 'expand_less' : 'expand_more' : false)), React.createElement(IconButton, {\n      onClick: function onClick() {\n        return handleDelete(story._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"delete_outline\"))), React.createElement(Collapse, {\n      in: storyIDs ? storyIDs[story._id] : false,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(List, {\n      disablePadding: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, renderComments(story.comments)), React.createElement(\"form\", {\n      className: classes.form,\n      onSubmit: function onSubmit(e) {\n        return handleCommentSubmit(e, story._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"123\",\n      value: commentInput,\n      variant: \"outlined\",\n      label: \"Add a comment\",\n      onChange: handleCommentInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(IconButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"add_circle\")))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }));\n  }) : '', renderFriendStories()));\n}\n\nexport default Timeline;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Story/Timeline.js"],"names":["React","useContext","Fragment","useState","AuthContext","Moment","makeStyles","TextField","Collapse","List","ListItem","ListItemText","ListItemAvatar","Divider","Typography","Avatar","Icon","IconButton","GetMoment","useStyles","theme","root","backgroundColor","palette","background","paper","paddingTop","paddingBottom","form","display","alignItems","Timeline","classes","auth","openComment","setOpenComment","commentInput","setCommentInput","storyIDs","setStoryIDs","friendStories","setFriendStories","onLoad","setOnLoad","user","console","log","storyIDList","test","info","authored_stories","map","story","index","_id","handleDelete","id","fetch","method","body","JSON","stringify","headers","then","res","json","updateAuth","handleCommentInput","e","target","name","value","handleCommentSubmit","preventDefault","username","time","comment","renderFriendStories","length","text","expandComment","renderComments","comments","commentList","slice","newCommentState"],"mappings":"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","sourcesContent":["import React, { useContext, Fragment, useState } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport Moment from 'react-moment';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Collapse, List, ListItem, ListItemText, ListItemAvatar, Divider, Typography, Avatar, Icon, IconButton} from '@material-ui/core';\n\nimport GetMoment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        paddingTop: '0px',\n        paddingBottom: '0px',\n    },\n    form: {\n        display: 'flex',\n        alignItems: 'center',\n    }\n}));\n\nfunction Timeline() {\n\n    const classes = useStyles();\n    const auth = useContext(AuthContext);\n\n    const [openComment, setOpenComment] = useState(true);\n    const [commentInput, setCommentInput] = useState('');\n\n    const [storyIDs, setStoryIDs] = useState({});\n    const [friendStories, setFriendStories] = useState([]);\n    const [onLoad, setOnLoad] = useState(false);\n\n    if((!onLoad) && (auth.user)){\n        console.log('tripped!');\n        var storyIDList = {};\n        console.log(auth.user);\n        var test = auth.user.info.authored_stories.map((story, index) => {\n            storyIDList[story._id] = false\n        })\n        console.log(storyIDList)\n        setStoryIDs(storyIDList)\n        setOnLoad(true);\n    }\n\n    function handleDelete(id) {\n        console.log(id);\n        fetch('/api/social/deleteStory', {\n            method: 'POST',\n            body: JSON.stringify({id: id}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((user) => {\n            console.log(user);\n            auth.updateAuth(user);\n        })\n    }\n\n    function handleCommentInput(e) {\n        const { name, value } = e.target;\n        setCommentInput(value);\n    }\n\n    function handleCommentSubmit(e, id) {\n        e.preventDefault();\n        const {username } = auth.user;\n        const time = GetMoment();\n        console.log(id, commentInput);\n        fetch('api/social/newComment', {\n            method: 'POST',\n            body: JSON.stringify({id: id, comment: commentInput, username: username, time: time}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((user) => {\n            console.log(user);\n        });\n    };\n\n    function renderFriendStories() {\n        \n        if(friendStories.length > 1) {\n            friendStories.map((story, index) => {\n                return (\n                    <Fragment key={story._id}>\n                        <ListItem>\n                            <ListItemAvatar><Avatar alt={story._id} src=\"/imgs/avatar.jpg\" /></ListItemAvatar>\n                            <ListItemText \n                                primary={story.text} \n                                secondary={\n                                    <Moment date={story.time} format={'dddd h:mm a'} />\n                                }\n                            >\n                            </ListItemText>\n                            <IconButton onClick={() => expandComment(story._id)}>\n                                <Icon>{storyIDs ? storyIDs[story._id] ? 'expand_less' : 'expand_more' : false}</Icon>\n                            </IconButton>\n                            <IconButton onClick={() => handleDelete(story._id)}>\n                                <Icon>delete_outline</Icon>\n                            </IconButton>\n                        </ListItem>\n                        <Collapse in={storyIDs ? storyIDs[story._id] : false} timeout=\"auto\" unmountOnExit>\n                            <List disablePadding>\n                                {renderComments(story.comments)}\n                            </List>\n                            <form className={classes.form} onSubmit={(e) => handleCommentSubmit(e, story._id)}>\n                                <TextField\n                                name='123'\n                                value={commentInput}\n                                variant=\"outlined\"\n                                label=\"Add a comment\"\n                                onChange={handleCommentInput}\n                                >\n                                </TextField>\n                                    <IconButton type=\"submit\">\n                                        <Icon>add_circle</Icon>\n                                    </IconButton>\n                            </form>\n                        </Collapse>\n                        <Divider />\n                    </Fragment>\n                );\n            })\n        }\n    }\n\n    function renderComments(comments) {\n        console.log(comments)\n        var commentList = [];\n        if(comments.length < 5){commentList = comments.slice(0, comments.length)}\n        else{commentList = comments.slice(0, 5)}\n        \n        return (\n            commentList.map((comment, index) => {\n                return (  \n                    <ListItem key={index}>\n                        <ListItemText primary={`${comment.username}: ${comment.text}`} secondary={<Moment date={comment.time} format={'dddd h:mm a'} />} />\n                    </ListItem>\n                );\n            })\n        );\n    };\n\n    function expandComment(id) {\n        const newCommentState = !storyIDs[id];\n        console.log(newCommentState)\n        setStoryIDs({...storyIDs, [id]: newCommentState});\n    }\n\n    return (\n        <div>\n            <List className={classes.root}>\n                {auth.user ? auth.user.info.authored_stories.map((story, index) => (\n                    <Fragment key={story._id}>\n                        <ListItem>\n                            <ListItemAvatar><Avatar alt={story._id} src=\"/imgs/avatar.jpg\" /></ListItemAvatar>\n                            <ListItemText \n                                primary={story.text} \n                                secondary={\n                                    <Moment date={story.time} format={'dddd h:mm a'} />\n                                }\n                            >\n                            </ListItemText>\n                            <IconButton onClick={() => expandComment(story._id)}>\n                                <Icon>{storyIDs ? storyIDs[story._id] ? 'expand_less' : 'expand_more' : false}</Icon>\n                            </IconButton>\n                            <IconButton onClick={() => handleDelete(story._id)}>\n                                <Icon>delete_outline</Icon>\n                            </IconButton>\n                        </ListItem>\n                        <Collapse in={storyIDs ? storyIDs[story._id] : false} timeout=\"auto\" unmountOnExit>\n                            <List disablePadding>\n                                {renderComments(story.comments)}\n                            </List>\n                            <form className={classes.form} onSubmit={(e) => handleCommentSubmit(e, story._id)}>\n                                <TextField\n                                name='123'\n                                value={commentInput}\n                                variant=\"outlined\"\n                                label=\"Add a comment\"\n                                onChange={handleCommentInput}\n                                >\n                                </TextField>\n                                    <IconButton type=\"submit\">\n                                        <Icon>add_circle</Icon>\n                                    </IconButton>\n                            </form>\n                        </Collapse>\n                        <Divider />\n                    </Fragment>\n                    \n                )) : ''}\n                {renderFriendStories()}\n            </List>\n        \n        </div>\n    );\n}\n\nexport default Timeline;"]},"metadata":{},"sourceType":"module"}