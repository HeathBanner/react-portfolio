{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Story/Story.js\";\nimport React, { Fragment, useContext } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\nimport Moment from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      // marginTop: '40px',\n      color: 'black !important' // width: '60% !important',\n      // flexWrap: 'wrap',\n      // flexDirection: 'column',\n\n    },\n    label: {// color: 'black !important',\n    },\n    postStory: {\n      marginLeft: '10px'\n    },\n    form: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '80%',\n      margin: '20px auto'\n    }\n  };\n});\n\nfunction Story() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      story = _React$useState2[0],\n      setStory = _React$useState2[1];\n\n  var classes = useStyles();\n  var auth = useContext(AuthContext);\n\n  function handleInputChange(e) {\n    var value = e.target.value;\n    setStory(value);\n  }\n\n  function handleStoryPost(e) {\n    e.preventDefault();\n    var userId = auth.user._id;\n    var infoId = auth.user.info.id;\n    var time = Moment();\n    fetch('/api/social/newStory', {\n      method: 'POST',\n      body: JSON.stringify({\n        userId: userId,\n        infoId: infoId,\n        story: story,\n        time: time\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      console.log(user);\n      auth.updateAuth(user);\n    });\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleStoryPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    multiline: true,\n    fullWidth: false,\n    rowsMax: \"8\",\n    label: \"Story\",\n    helperText: \"Story here...\",\n    name: \"setStory\",\n    value: story,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Fab, {\n    type: \"submit\",\n    size: \"small\",\n    className: classes.postStory,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"create\"))));\n}\n\nexport default Story;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Story/Story.js"],"names":["React","Fragment","useContext","AuthContext","TextField","makeStyles","Icon","Fab","Moment","useStyles","theme","root","color","label","postStory","marginLeft","form","display","alignItems","justifyContent","width","margin","Story","useState","story","setStory","classes","auth","handleInputChange","e","value","target","handleStoryPost","preventDefault","userId","user","_id","infoId","info","id","time","fetch","method","body","JSON","stringify","headers","then","res","json","console","log","updateAuth"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from 'react';\n\nimport AuthContext from '../../../context/AuthContext';\n\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\n\nimport Moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        // marginTop: '40px',\n        color: 'black !important',\n        // width: '60% !important',\n        // flexWrap: 'wrap',\n        // flexDirection: 'column',\n    },\n    label: {\n        // color: 'black !important',\n    },\n    postStory: {\n        marginLeft: '10px',\n    },\n    form: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '80%',\n        margin: '20px auto',\n    }\n}))\n\n\nfunction Story() {\n    \n    const [story, setStory] = React.useState('')\n\n    const classes = useStyles();\n    const auth = useContext(AuthContext)\n\n    function handleInputChange(e) {\n        const { value } = e.target\n        setStory(value)\n    }\n\n    function handleStoryPost(e) {\n        e.preventDefault();\n        const userId = auth.user._id;\n        const infoId = auth.user.info.id;\n        const time = Moment();\n        fetch('/api/social/newStory', {\n            method: 'POST',\n            body: JSON.stringify({userId: userId, infoId: infoId,story: story, time: time}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((user) => {\n            console.log(user);\n            auth.updateAuth(user);\n        })\n    }\n\n    return (\n        <Fragment>\n            <form className={classes.form} onSubmit={handleStoryPost}>\n                    <TextField\n                        multiline\n                        fullWidth={false}\n                        rowsMax=\"8\"\n                        label=\"Story\"\n                        helperText=\"Story here...\"\n                        name=\"setStory\"\n                        value={story}\n                        onChange={handleInputChange}\n                    />\n                    <Fab type=\"submit\" size=\"small\" className={classes.postStory} color=\"primary\"><Icon>create</Icon></Fab>\n            </form>\n        </Fragment>\n    );\n}\n\nexport default Story;"]},"metadata":{},"sourceType":"module"}