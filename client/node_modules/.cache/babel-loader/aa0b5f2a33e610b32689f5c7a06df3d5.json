{"ast":null,"code":"import _objectSpread from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Social/ProfileShell/Timeline.js\";\nimport React, { useContext, Fragment, useState, useEffect } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport Moment from 'react-moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, TextField, Collapse, List, ListItem, ListItemText, ListItemAvatar, Divider, Typography, Avatar, Icon, IconButton, CircularProgress } from '@material-ui/core';\nimport GetMoment from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  var _root;\n\n  return {\n    root: (_root = {}, _defineProperty(_root, theme.breakpoints.down('xs'), {\n      width: '90%'\n    }), _defineProperty(_root, \"paddingTop\", '10px'), _defineProperty(_root, \"paddingBottom\", '10px'), _defineProperty(_root, \"width\", '80%'), _defineProperty(_root, \"margin\", '0 auto'), _root),\n    listItem: {\n      marginTop: '20px'\n    },\n    form: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    Collapse: {\n      marginBottom: '20px'\n    }\n  };\n});\n\nfunction Timeline(props) {\n  var classes = useStyles();\n  var auth = useContext(AuthContext);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      commentInput = _useState2[0],\n      setCommentInput = _useState2[1];\n\n  var _useState3 = useState({\n    open: false,\n    storyId: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newComment = _useState4[0],\n      setNewComment = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      storyIDs = _useState6[0],\n      setStoryIDs = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      stories = _useState8[0],\n      setStories = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      onLoad = _useState10[0],\n      setOnLoad = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      sorted = _useState12[0],\n      setSorted = _useState12[1];\n\n  useEffect(function () {\n    if (auth.isLoaded && auth.newStory) {\n      console.log('AUTH IS LOADED');\n      auth.updateLoaded(auth.user, false, false);\n      getStories();\n      setSorted(false);\n    }\n\n    if (!onLoad && auth.user) {\n      setOnLoad(true);\n      console.log('RESET');\n      var storyStorage = [];\n      var storyIDList = {};\n      auth.user.info.authored_stories.map(function (story, index) {\n        storyIDList[story._id] = false;\n        storyStorage.push(story);\n      });\n      storyStorage.sort(function (a, b) {\n        return new Date(b.time) - new Date(a.time);\n      });\n      setStoryIDs(storyIDList);\n      setSorted(true);\n      setStories(storyStorage);\n    }\n\n    if (newComment.open) {\n      console.log('NEW COMMENT');\n      setNewComment({\n        open: false,\n        storyId: ''\n      });\n      var storyStorage = [];\n      var storyIDList = {};\n      stories.map(function (story, index) {\n        if (story._id === newComment.storyId) {\n          storyStorage.push(story);\n          storyIDList[story._id] = true;\n        } else {\n          storyIDList[story._id] = false;\n          storyStorage.push(story);\n        }\n      });\n      storyStorage.sort(function (a, b) {\n        return new Date(b.time) - new Date(a.time);\n      });\n      setStoryIDs(storyIDList);\n      setSorted(true);\n      setStories(storyStorage);\n    }\n  });\n\n  function getStories() {\n    fetch('/api/social/friendStories', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: auth.user.info\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      var storyStorage = result;\n      var storyIDList = {};\n      auth.user.info.authored_stories.map(function (story, index) {\n        storyIDList[story._id] = false;\n        storyStorage.push(story);\n      });\n      storyStorage.sort(function (a, b) {\n        return new Date(b.time) - new Date(a.time);\n      });\n      console.log(storyStorage);\n      setStories(storyStorage);\n      setSorted(true);\n      setStoryIDs(storyIDList);\n    });\n  }\n\n  function handleDelete(id) {\n    console.log(id);\n    fetch('/api/social/deleteStory', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: id\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      console.log(user); // auth.updateAuth(user);\n    });\n  }\n\n  function handleCommentInput(e) {\n    var value = e.target.value;\n    setCommentInput(value);\n  }\n\n  function handleCommentSubmit(id, username) {\n    var time = GetMoment();\n    var data = {\n      time: time,\n      id: id,\n      userId: auth.user._id,\n      comment: commentInput\n    };\n    var newStories = stories;\n    newStories.map(function (item, index) {\n      if (item._id === id) {\n        newStories[index].comments.push({\n          authored_by: {\n            info: '5d126d136f6f1085c8df8b81',\n            username: username\n          },\n          text: commentInput,\n          type: 'comment',\n          time: time\n        });\n      }\n    });\n    console.log(newStories);\n    setStories(newStories);\n    setNewComment({\n      open: true,\n      storyId: id\n    }); // console.log(data);\n    // fetch('/api/social/newComment', {\n    //     method: 'POST',\n    //     body: JSON.stringify({data}),\n    //     headers: {'Content-Type': 'application/json'}\n    // }).then(res => res.json())\n    // .then((user) => {\n    //     setCommentInput('');\n    //     auth.updateDidMount()\n    // });\n  }\n\n  ;\n\n  function renderTimeline() {\n    if (sorted && !auth.newStory) {\n      console.log('RENDER TIMELINE');\n      return stories.map(function (story, index) {\n        return React.createElement(Fragment, {\n          key: story._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(Paper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          className: classes.listItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, React.createElement(ListItemAvatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          alt: story._id,\n          src: \"/imgs/avatar.jpg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: \"\".concat(story.authored_by.username, \": \").concat(story.text),\n          secondary: React.createElement(Moment, {\n            date: story.time,\n            format: 'dddd h:mm a',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          onClick: function onClick() {\n            return expandComment(story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, storyIDs ? storyIDs[story._id] ? 'expand_less' : 'expand_more' : false)), React.createElement(IconButton, {\n          onClick: function onClick() {\n            return handleDelete(story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, \"delete_outline\"))), React.createElement(Collapse, {\n          className: classes.collapse,\n          in: storyIDs ? storyIDs[story._id] : false,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(List, {\n          disablePadding: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, renderComments(story.comments)), React.createElement(\"div\", {\n          className: classes.form,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          name: \"123\",\n          value: commentInput,\n          variant: \"outlined\",\n          label: \"Add a comment\",\n          onChange: handleCommentInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          onClick: function onClick() {\n            return handleCommentSubmit(story._id, story.authored_by.username);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, \"add_circle\"))))));\n      });\n    } else {\n      return React.createElement(CircularProgress, {\n        size: 100,\n        color: \"secondary\",\n        thickness: 2.6,\n        style: {\n          display: 'block',\n          margin: '40px auto 0px auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      });\n    }\n  }\n\n  function renderComments(comments) {\n    var commentList = [];\n\n    if (comments.length < 5) {\n      commentList = comments.slice(0, comments.length);\n    } else {\n      commentList = comments.slice(0, 5);\n    }\n\n    return commentList.map(function (comment, index) {\n      return React.createElement(Fragment, {\n        key: comment.time,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(ListItem, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: \"\".concat(comment.authored_by.username, \": \").concat(comment.text),\n        secondary: React.createElement(Moment, {\n          date: comment.time,\n          format: 'dddd h:mm a',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      })));\n    });\n  }\n\n  ;\n\n  function expandComment(id) {\n    var newCommentState = !storyIDs[id];\n    console.log(newCommentState);\n    setStoryIDs(_objectSpread({}, storyIDs, _defineProperty({}, id, newCommentState)));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, renderTimeline()));\n}\n\nexport default Timeline;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Social/ProfileShell/Timeline.js"],"names":["React","useContext","Fragment","useState","useEffect","AuthContext","Moment","makeStyles","Grid","Paper","TextField","Collapse","List","ListItem","ListItemText","ListItemAvatar","Divider","Typography","Avatar","Icon","IconButton","CircularProgress","GetMoment","useStyles","theme","root","breakpoints","down","width","listItem","marginTop","form","display","alignItems","marginBottom","Timeline","props","classes","auth","commentInput","setCommentInput","open","storyId","newComment","setNewComment","storyIDs","setStoryIDs","stories","setStories","onLoad","setOnLoad","sorted","setSorted","isLoaded","newStory","console","log","updateLoaded","user","getStories","storyStorage","storyIDList","info","authored_stories","map","story","index","_id","push","sort","a","b","Date","time","fetch","method","body","JSON","stringify","id","headers","then","res","json","result","handleDelete","handleCommentInput","e","value","target","handleCommentSubmit","username","data","userId","comment","newStories","item","comments","authored_by","text","type","renderTimeline","expandComment","collapse","renderComments","margin","commentList","length","slice","newCommentState"],"mappings":"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","sourcesContent":["import React, { useContext, Fragment, useState, useEffect } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport Moment from 'react-moment';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, TextField, Collapse, List, ListItem, ListItemText, ListItemAvatar, Divider, Typography, Avatar, Icon, IconButton, CircularProgress} from '@material-ui/core';\n\nimport GetMoment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.down('xs')]: {\n            width: '90%',\n        },\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        width: '80%',\n        margin: '0 auto'\n    },\n    listItem: {\n        marginTop: '20px',\n    },\n    form: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    Collapse: {\n        marginBottom: '20px',\n    },\n}));\n\nfunction Timeline(props) {\n\n    const classes = useStyles();\n    const auth = useContext(AuthContext);\n\n    const [commentInput, setCommentInput] = useState('');\n    const [newComment, setNewComment] = useState({open: false, storyId: ''});\n\n    const [storyIDs, setStoryIDs] = useState({});\n    const [stories, setStories] = useState('');\n    const [onLoad, setOnLoad] = useState(false);\n    const [sorted, setSorted] = useState(false);\n\n\n    useEffect(() => {\n        \n        if((auth.isLoaded)&&(auth.newStory)) {\n            console.log('AUTH IS LOADED')\n            auth.updateLoaded(auth.user, false, false);\n            getStories();\n            setSorted(false)\n        }\n\n        if((!onLoad) && (auth.user)){\n            setOnLoad(true)\n            console.log('RESET')\n            var storyStorage = [];\n            var storyIDList = {};\n            auth.user.info.authored_stories.map((story, index) => {\n                storyIDList[story._id] = false\n                storyStorage.push(story);\n            });\n            storyStorage.sort((a, b) => {\n                return new Date(b.time) - new Date(a.time);\n            })\n            setStoryIDs(storyIDList);\n            setSorted(true)\n            setStories(storyStorage);\n        }   \n\n        if(newComment.open) {\n            console.log('NEW COMMENT')\n            setNewComment({open: false, storyId: ''});\n            var storyStorage = [];\n            var storyIDList = {};\n            stories.map((story, index) => {\n                \n                if(story._id === newComment.storyId){\n                    storyStorage.push(story); \n                    storyIDList[story._id] = true\n                } else {\n                    storyIDList[story._id] = false\n                    storyStorage.push(story); \n                }\n                \n            });\n            storyStorage.sort((a, b) => {\n                return new Date(b.time) - new Date(a.time);\n            })\n            setStoryIDs(storyIDList);\n            setSorted(true)\n            setStories(storyStorage);\n        }\n    });\n\n    function getStories() {\n        fetch('/api/social/friendStories', {\n            method: 'POST',\n            body: JSON.stringify({id: auth.user.info}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((result) => {\n            var storyStorage = result;\n            var storyIDList = {};\n            auth.user.info.authored_stories.map((story, index) => {\n                storyIDList[story._id] = false\n                storyStorage.push(story);\n            });\n            storyStorage.sort((a, b) => {\n                return new Date(b.time) - new Date(a.time);\n            })\n            console.log(storyStorage);\n            setStories(storyStorage);\n            setSorted(true);\n            setStoryIDs(storyIDList);\n        })\n    }\n    \n    function handleDelete(id) {\n        console.log(id);\n        fetch('/api/social/deleteStory', {\n            method: 'POST',\n            body: JSON.stringify({id: id}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((user) => {\n            console.log(user);\n            // auth.updateAuth(user);\n        })\n    }\n\n    function handleCommentInput(e) {\n        const { value } = e.target;\n        setCommentInput(value);\n    }\n\n    function handleCommentSubmit(id, username) {\n        const time = GetMoment();\n        const data = {\n            time: time,\n            id: id,\n            userId: auth.user._id,\n            comment: commentInput,\n        };\n        var newStories = stories;\n        newStories.map((item, index) => {\n            \n            if(item._id === id) {\n                newStories[index].comments.push({\n                    authored_by: {info: '5d126d136f6f1085c8df8b81', username: username},\n                    text: commentInput,\n                    type: 'comment',\n                    time: time\n                });\n            }\n        })\n        console.log(newStories);\n        setStories(newStories);\n        setNewComment({open: true, storyId: id})\n        // console.log(data);\n        // fetch('/api/social/newComment', {\n        //     method: 'POST',\n        //     body: JSON.stringify({data}),\n        //     headers: {'Content-Type': 'application/json'}\n        // }).then(res => res.json())\n        // .then((user) => {\n        //     setCommentInput('');\n        //     auth.updateDidMount()\n        // });\n    };\n\n    function renderTimeline() {\n        if((sorted)&&(!auth.newStory)){\n            console.log('RENDER TIMELINE')\n        return (\n            stories.map((story, index) => (\n                <Fragment key={story._id}>\n                <Paper>\n                    <ListItem className={classes.listItem}>\n                        <ListItemAvatar><Avatar alt={story._id} src=\"/imgs/avatar.jpg\" /></ListItemAvatar>\n                        <ListItemText \n                            primary={`${story.authored_by.username}: ${story.text}`} \n                            secondary={\n                                <Moment date={story.time} format={'dddd h:mm a'} />\n                            }\n                        >\n                        </ListItemText>\n                        <IconButton onClick={() => expandComment(story._id)}>\n                            <Icon>{storyIDs ? storyIDs[story._id] ? 'expand_less' : 'expand_more' : false}</Icon>\n                        </IconButton>\n                        <IconButton onClick={() => handleDelete(story._id)}>\n                            <Icon>delete_outline</Icon>\n                        </IconButton>\n                    </ListItem>\n                    <Collapse className={classes.collapse} in={storyIDs ? storyIDs[story._id] : false} timeout=\"auto\" unmountOnExit>\n                        <List disablePadding>\n                            {renderComments(story.comments)}\n                        </List>\n                        <div className={classes.form}>\n                            <TextField\n                                name='123'\n                                value={commentInput}\n                                variant=\"outlined\"\n                                label=\"Add a comment\"\n                                onChange={handleCommentInput}\n                            >\n                            </TextField>\n                                <IconButton onClick={() => handleCommentSubmit(story._id, story.authored_by.username)}>\n                                    <Icon>add_circle</Icon>\n                                </IconButton>\n                        </div>\n                    </Collapse>\n                    </Paper>\n                </Fragment>\n            ))\n        );          \n        } else {return <CircularProgress size={100} color=\"secondary\" thickness={2.6} style={{display: 'block', margin: '40px auto 0px auto'}}  />}\n    }\n\n    function renderComments(comments) {\n        var commentList = [];\n        if(comments.length < 5){commentList = comments.slice(0, comments.length)}\n        else{commentList = comments.slice(0, 5)}\n        \n        return (\n            commentList.map((comment, index) => {\n                return (  \n                    <Fragment key={comment.time}>\n                        <Divider />\n                        <ListItem key={index}>\n                            <ListItemText primary={`${comment.authored_by.username}: ${comment.text}`} secondary={<Moment date={comment.time} format={'dddd h:mm a'} />} />\n                        </ListItem>\n                    </Fragment>\n                );\n            })\n        );\n    };\n\n    function expandComment(id) {\n        const newCommentState = !storyIDs[id];\n        console.log(newCommentState)\n        setStoryIDs({...storyIDs, [id]: newCommentState});\n    }\n\n    return (\n        <div>\n            <List className={classes.root}>\n                {renderTimeline()}\n            </List>\n        </div>\n    );\n}\n\nexport default Timeline;"]},"metadata":{},"sourceType":"module"}