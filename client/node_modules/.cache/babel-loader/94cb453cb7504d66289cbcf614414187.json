{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/pages/Home/home.js\";\nimport React, { useState, useEffect } from 'react';\nimport AppCard from '../../components/AppCard/Card';\nimport Drawer from '../../components/Navigation/Drawer';\nimport Grid from '../../components/AppCard/Grid';\nimport Weather from '../../components/Weather/Weather';\nimport './home.css';\nvar atmosphere = ['Mist', 'Smoke', 'Haze', 'Dust', 'Fog', 'Sand', 'Dust', 'Ash', 'Squall', 'Tornado'];\nvar rain = ['Rain', 'Drizzle'];\nvar styles = {\n  Clouds: {\n    Drawer: {\n      toolbar: 'rgb(219, 214, 57)',\n      barTitle: 'white'\n    }\n  },\n  Rain: {\n    Drawer: {\n      toolbar: 'rgb(54, 118, 170)',\n      barTitle: 'white'\n    }\n  },\n  Clear: {\n    Drawer: {\n      toolbar: 'rgb(37, 237, 217)',\n      barTitle: 'white'\n    }\n  },\n  ThunderStorm: {\n    Drawer: {\n      toolbar: 'rgb(219, 214, 57)',\n      barTitle: 'white'\n    }\n  },\n  Snow: {\n    toolbar: 'rgb(229, 229, 229)',\n    barTitle: 'black'\n  },\n  Atmosphere: {}\n};\n\nfunction Home() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mood = _React$useState2[0],\n      setMood = _React$useState2[1];\n\n  function grabWeather(weather) {\n    var newMood = weather.weather[0].main;\n\n    if (atmosphere.includes(newMood)) {\n      setMood(styles.Atmosphere);\n    } else if (rain.includes(newMood)) {\n      setMood(styles.Rain);\n    } else {\n      setMood(styles[newMood]);\n    }\n\n    console.log(styles[newMood].Drawer);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 colp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 colp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    mood: mood.Drawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 colp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 colp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Weather, {\n    grabWeather: grabWeather,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"// Footer\")));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/pages/Home/home.js"],"names":["React","useState","useEffect","AppCard","Drawer","Grid","Weather","atmosphere","rain","styles","Clouds","toolbar","barTitle","Rain","Clear","ThunderStorm","Snow","Atmosphere","Home","mood","setMood","grabWeather","weather","newMood","main","includes","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AppCard from '../../components/AppCard/Card';\nimport Drawer from '../../components/Navigation/Drawer';\n\nimport Grid from '../../components/AppCard/Grid';\nimport Weather from '../../components/Weather/Weather';\n\nimport './home.css';\n\nconst atmosphere = ['Mist', 'Smoke', 'Haze', 'Dust', 'Fog', 'Sand', 'Dust', 'Ash', 'Squall', 'Tornado']\nconst rain = ['Rain', 'Drizzle']\n\nconst styles = {\n    Clouds: {\n        Drawer: {\n            toolbar: 'rgb(219, 214, 57)',\n            barTitle: 'white',\n        }\n    },\n    Rain: {\n        Drawer: {\n            toolbar: 'rgb(54, 118, 170)',\n            barTitle: 'white',\n        }\n    },\n    Clear: {\n        Drawer: {\n            toolbar: 'rgb(37, 237, 217)',\n            barTitle: 'white',\n        }\n    },\n    ThunderStorm: {\n        Drawer: {\n            toolbar: 'rgb(219, 214, 57)',\n            barTitle: 'white',\n        }\n    },\n    Snow: {\n        toolbar: 'rgb(229, 229, 229)',\n        barTitle: 'black',\n    },\n    Atmosphere: {\n\n    },\n}\n\nfunction Home() {\n\n    const [mood, setMood] = React.useState('');\n\n    function grabWeather(weather) {\n        const newMood = weather.weather[0].main\n        if(atmosphere.includes(newMood)){setMood(styles.Atmosphere)}\n        else if(rain.includes(newMood)){setMood(styles.Rain)}\n        else {setMood(styles[newMood])}\n        console.log(styles[newMood].Drawer);   \n    }\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-12 colp\">\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12 colp\">\n                    <Drawer mood={mood.Drawer} />\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12 colp\">\n                    <Grid />\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12 colp\">\n                    <Weather grabWeather={grabWeather} />\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    // Footer\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}