{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Weather/Search.js\";\nimport React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport Select from 'react-select';\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Icon from '@material-ui/core/Icon';\nimport PropTypes from 'prop-types';\nimport jssPluginPropsSort from 'jss-plugin-props-sort';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      height: 250,\n      width: '70%',\n      margin: '20px auto',\n      color: 'white'\n    },\n    label: {\n      color: 'white'\n    },\n    input: {\n      display: 'flex',\n      padding: 0,\n      height: 'auto',\n      fontColor: 'white !important'\n    },\n    valueContainer: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      flex: 1,\n      alignItems: 'center',\n      overflow: 'hidden',\n      borderBottom: '1px solid white',\n      color: 'white !important'\n    },\n    chip: {\n      margin: theme.spacing(0.5, 0.25),\n      color: 'white'\n    },\n    chipFocused: {\n      backgroundColor: emphasize(theme.palette.type === 'light' ? theme.palette.grey[900] : theme.palette.grey[100], 0.08)\n    },\n    noOptionsMessage: {\n      padding: theme.spacing(1, 2)\n    },\n    singleValue: {\n      fontSize: 16,\n      color: 'white'\n    },\n    placeholder: {\n      position: 'absolute',\n      left: 2,\n      bottom: 6,\n      fontSize: 16,\n      color: 'white'\n    },\n    paper: {\n      position: 'absolute',\n      zIndex: 1,\n      marginTop: theme.spacing(1),\n      left: 0,\n      right: 0\n    },\n    divider: {\n      height: theme.spacing(2)\n    }\n  };\n});\n\nfunction NoOptionsMessage(props) {\n  return React.createElement(Typography, Object.assign({\n    color: \"textSecondary\",\n    className: props.selectProps.classes.noOptionsMessage\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), props.children);\n}\n\nNoOptionsMessage.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction inputComponent(_ref) {\n  var inputRef = _ref.inputRef,\n      props = _objectWithoutProperties(_ref, [\"inputRef\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    ref: inputRef,\n    name: props.name,\n    value: props.value\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }));\n}\n\ninputComponent.propTypes = {\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\n\nfunction Control(props) {\n  var children = props.children,\n      innerProps = props.innerProps,\n      innerRef = props.innerRef,\n      _props$selectProps = props.selectProps,\n      classes = _props$selectProps.classes,\n      TextFieldProps = _props$selectProps.TextFieldProps;\n  return React.createElement(TextField, Object.assign({\n    fullWidth: true,\n    style: {\n      color: 'white'\n    },\n    InputProps: {\n      inputComponent: inputComponent,\n      inputProps: _objectSpread({\n        onChange: props.selectProps.onChange,\n        className: classes.input,\n        ref: innerRef,\n        children: children\n      }, innerProps)\n    }\n  }, TextFieldProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }));\n}\n\nControl.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction Option(props) {\n  return React.createElement(MenuItem, Object.assign({\n    ref: props.innerRef,\n    selected: props.isFocused,\n    component: \"div\",\n    style: {\n      fontWeight: props.isSelected ? 500 : 400\n    }\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), props.children);\n}\n\nOption.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  isFocused: PropTypes.bool,\n  isSelected: PropTypes.bool\n};\n\nfunction Placeholder(props) {\n  return React.createElement(Typography, Object.assign({\n    color: \"textSecondary\",\n    className: props.selectProps.classes.placeholder\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), props.children);\n}\n\nPlaceholder.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction SingleValue(props) {\n  return React.createElement(Typography, Object.assign({\n    className: props.selectProps.classes.singleValue\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), props.children);\n}\n\nSingleValue.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction ValueContainer(props) {\n  return React.createElement(\"div\", {\n    className: props.selectProps.classes.valueContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, props.children);\n}\n\nValueContainer.propTypes = {\n  children: PropTypes.node,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction Menu(props) {\n  return React.createElement(Paper, Object.assign({\n    square: true,\n    className: props.selectProps.classes.paper\n  }, props.innerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }), props.children);\n}\n\nMenu.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object\n};\nvar components = {\n  Control: Control,\n  Menu: Menu,\n  NoOptionsMessage: NoOptionsMessage,\n  Option: Option,\n  Placeholder: Placeholder,\n  // SingleValue,\n  ValueContainer: ValueContainer\n};\nvar suggestions = [];\nvar states = [{\n  label: 'Alabama'\n}, {\n  label: 'Alaska'\n}, {\n  label: 'Arizona'\n}, {\n  label: 'Arkansas'\n}, {\n  label: 'California'\n}, {\n  label: 'Colorado'\n}, {\n  label: 'Connecticut'\n}, {\n  label: 'Delaware'\n}, {\n  label: 'Florida'\n}, {\n  label: 'Georgia'\n}, {\n  label: 'Hawaii'\n}, {\n  label: 'Idaho'\n}, {\n  label: 'Illinois'\n}, {\n  label: 'Indiana'\n}, {\n  label: 'Iowa'\n}, {\n  label: 'Kansas'\n}, {\n  label: 'Louisiana'\n}, {\n  label: 'Maine'\n}, {\n  label: 'Maryland'\n}, {\n  label: 'Massachusetts'\n}, {\n  label: 'Michigan'\n}, {\n  label: 'Minnesota'\n}, {\n  label: 'Mississippi'\n}, {\n  label: 'Missouri'\n}, {\n  label: 'Montana'\n}, {\n  label: 'Nebraska'\n}, {\n  label: 'Nevada'\n}, {\n  label: 'New Hampshire'\n}, {\n  label: 'New Jersey'\n}, {\n  label: 'New Mexico'\n}, {\n  label: 'New York'\n}, {\n  label: 'North Carolina'\n}, {\n  label: 'North Dakota'\n}, {\n  label: 'Ohio'\n}, {\n  label: 'Oklahoma'\n}, {\n  label: 'Oregon'\n}, {\n  label: 'Pennsylvania'\n}, {\n  label: 'Rhode Island'\n}, {\n  label: 'South Carolina'\n}, {\n  label: 'South Dakota'\n}, {\n  label: 'Tennesee'\n}, {\n  label: 'Texas'\n}, {\n  label: 'Utah'\n}, {\n  label: 'Vermont'\n}, {\n  label: 'Virginia'\n}, {\n  label: 'Washington'\n}, {\n  label: 'West Virginia'\n}, {\n  label: 'Wisconsin'\n}, {\n  label: 'Wyoming'\n}];\nexport default function IntegrationReactSelect() {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedState = _React$useState2[0],\n      setSelectedState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      cities = _React$useState4[0],\n      setCities = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isLoaded = _React$useState6[0],\n      setIsLoaded = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      sentRequest = _React$useState8[0],\n      setSentRequest = _React$useState8[1];\n\n  useEffect(function () {\n    if (!sentRequest) {\n      setSentRequest(true);\n      fetch('/api/cities/onLoad').then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        console.log(result);\n        setCities(result);\n        setIsLoaded(true);\n      });\n    }\n\n    if (isLoaded) {\n      console.log('isloaded');\n      setIsLoaded(false);\n      suggestions = cities.map(function (suggestion) {\n        return {\n          value: suggestion.name,\n          label: suggestion.name\n        };\n      });\n    }\n  });\n\n  function handleInputChange(event) {\n    var _event$target = event.target,\n        value = _event$target.value,\n        name = _event$target.name;\n    console.log('city', value); // fetch('/api/cities/search', {\n    //   method: 'POST',\n    //   body: JSON.stringify({data: value}),\n    //   headers: {'Content-Type': 'application/json'}\n    // })\n    // .then(res => res.json())\n    // .then((result) => {console.log(result); setIsLoaded(true); setCities(result)})\n  }\n\n  function handleStateInputChange(value) {\n    if (value) {\n      console.log(value);\n    } else {// const { value } = event.target\n      // setSelectedState(value);console.log(value);\n    }\n\n    console.log('STATE');\n  }\n\n  function populateSuggestions() {\n    return;\n  }\n\n  var selectStyles = {\n    input: function input(base) {\n      return _objectSpread({}, base, {\n        color: 'white',\n        '& input': {\n          font: 'inherit'\n        }\n      });\n    }\n  };\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  }, React.createElement(NoSsr, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358\n    },\n    __self: this\n  }, React.createElement(Select, {\n    classes: classes,\n    styles: selectStyles,\n    inputId: \"react-select-single\",\n    TextFieldProps: {\n      label: 'City',\n      InputLabelProps: {\n        htmlFor: 'react-select-single',\n        shrink: true\n      },\n      placeholder: 'Search for a city'\n    },\n    options: cities ? cities.map(function (suggestion) {\n      return {\n        value: suggestion.name,\n        label: suggestion.name\n      };\n    }) : console.log('not yet'),\n    value: cities,\n    onChange: handleInputChange,\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }), React.createElement(Select, {\n    classes: classes,\n    styles: selectStyles,\n    inputId: \"react-select-single\",\n    TextFieldProps: {\n      label: 'State',\n      InputLabelProps: {\n        htmlFor: 'react-select-single',\n        shrink: true\n      },\n      placeholder: 'Search for a city'\n    },\n    options: states.map(function (suggestion) {\n      return {\n        value: suggestion.label,\n        label: suggestion.label\n      };\n    }),\n    components: components,\n    value: selectedState,\n    onChange: handleStateInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Weather/Search.js"],"names":["React","useEffect","clsx","Select","emphasize","makeStyles","useTheme","Typography","NoSsr","TextField","Paper","Chip","MenuItem","Icon","PropTypes","jssPluginPropsSort","useStyles","theme","root","flexGrow","height","width","margin","color","label","input","display","padding","fontColor","valueContainer","flexWrap","flex","alignItems","overflow","borderBottom","chip","spacing","chipFocused","backgroundColor","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","paper","zIndex","marginTop","right","divider","NoOptionsMessage","props","selectProps","classes","innerProps","children","propTypes","node","object","isRequired","inputComponent","inputRef","name","value","oneOfType","func","Control","innerRef","TextFieldProps","inputProps","onChange","className","ref","Option","isFocused","fontWeight","isSelected","bool","Placeholder","SingleValue","ValueContainer","Menu","components","suggestions","states","IntegrationReactSelect","useState","selectedState","setSelectedState","cities","setCities","isLoaded","setIsLoaded","sentRequest","setSentRequest","fetch","then","res","json","result","console","log","map","suggestion","handleInputChange","event","target","handleStateInputChange","populateSuggestions","selectStyles","base","font","InputLabelProps","htmlFor","shrink"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport Select from 'react-select';\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Icon from '@material-ui/core/Icon';\nimport PropTypes from 'prop-types';\nimport jssPluginPropsSort from 'jss-plugin-props-sort';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    width: '70%',\n    margin: '20px auto',\n    color: 'white'\n  },\n  label: {\n    color: 'white',\n  },\n  input: {\n    display: 'flex',\n    padding: 0,\n    height: 'auto',\n    fontColor: 'white !important'\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n    overflow: 'hidden',\n    borderBottom: '1px solid white',\n    color: 'white !important'\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25),\n    color: 'white'\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === 'light' ? theme.palette.grey[900] : theme.palette.grey[100],\n      0.08,\n    ),\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2),\n  },\n  singleValue: {\n    fontSize: 16,\n    color: 'white'\n  },\n  placeholder: {\n    position: 'absolute',\n    left: 2,\n    bottom: 6,\n    fontSize: 16,\n    color: 'white'\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  divider: {\n    height: theme.spacing(2),\n  },\n}));\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nNoOptionsMessage.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired,\n};\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} name={props.name} value={props.value} {...props} />;\n}\n\ninputComponent.propTypes = {\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n};\n\nfunction Control(props) {\n  const {\n    children,\n    innerProps,\n    innerRef,\n    selectProps: { classes, TextFieldProps },\n  } = props;\n\n  return (\n    <TextField\n      fullWidth\n      style={{\n        color: 'white',\n      }}\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          onChange: props.selectProps.onChange,\n          className: classes.input,\n          ref: innerRef,\n          children,\n          ...innerProps,\n        },\n      }}\n      {...TextFieldProps}\n    />\n  );\n}\n\nControl.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  selectProps: PropTypes.object.isRequired,\n};\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      ref={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400,\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nOption.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  isFocused: PropTypes.bool,\n  isSelected: PropTypes.bool,\n};\n\nfunction Placeholder(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.placeholder}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nPlaceholder.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired,\n};\n\nfunction SingleValue(props) {\n  return (\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\n      {props.children}\n    </Typography>\n  );\n}\n\nSingleValue.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired,\n};\n\n\nfunction ValueContainer(props) {\n\n\n  return <div className={props.selectProps.classes.valueContainer} >{props.children}</div>;\n}\n\nValueContainer.propTypes = {\n  children: PropTypes.node,\n  selectProps: PropTypes.object.isRequired,\n};\n\n\nfunction Menu(props) {\n  return (\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n      {props.children}\n    </Paper>\n  );\n}\n\nMenu.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object,\n};\n\nconst components = {\n  Control,\n  Menu,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  // SingleValue,\n  ValueContainer,\n};\n\nvar suggestions = [];\n\nconst states = [\n  {label: 'Alabama'},\n  {label: 'Alaska'},\n  {label: 'Arizona'},\n  {label: 'Arkansas'},\n  {label: 'California'},\n  {label: 'Colorado'},\n  {label: 'Connecticut'},\n  {label: 'Delaware'},\n  {label: 'Florida'},\n  {label: 'Georgia'},\n  {label: 'Hawaii'},\n  {label: 'Idaho'},\n  {label: 'Illinois'},\n  {label: 'Indiana'},\n  {label: 'Iowa'},\n  {label: 'Kansas'},\n  {label: 'Louisiana'},\n  {label: 'Maine'},\n  {label: 'Maryland'},\n  {label: 'Massachusetts'},\n  {label: 'Michigan'},\n  {label: 'Minnesota'},\n  {label: 'Mississippi'},\n  {label: 'Missouri'},\n  {label: 'Montana'},\n  {label: 'Nebraska'},\n  {label: 'Nevada'},\n  {label: 'New Hampshire'},\n  {label: 'New Jersey'},\n  {label: 'New Mexico'},\n  {label: 'New York'},\n  {label: 'North Carolina'},\n  {label: 'North Dakota'},\n  {label: 'Ohio'},\n  {label: 'Oklahoma'},\n  {label: 'Oregon'},\n  {label: 'Pennsylvania'},\n  {label: 'Rhode Island'},\n  {label: 'South Carolina'},\n  {label: 'South Dakota'},\n  {label: 'Tennesee'},\n  {label: 'Texas'},\n  {label: 'Utah'},\n  {label: 'Vermont'},\n  {label: 'Virginia'},\n  {label: 'Washington'},\n  {label: 'West Virginia'},\n  {label: 'Wisconsin'},\n  {label: 'Wyoming'}\n];\n\nexport default function IntegrationReactSelect() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [selectedState, setSelectedState] = React.useState(null);\n  const [cities, setCities] = React.useState(null);\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const [sentRequest, setSentRequest] = React.useState(false);\n\n  useEffect(() => {\n    if(!sentRequest){\n      setSentRequest(true);\n      fetch('/api/cities/onLoad')\n      .then(res => res.json())\n      .then((result) => {console.log(result); setCities(result); setIsLoaded(true);})\n    }\n    if(isLoaded) {\n      console.log('isloaded')\n      setIsLoaded(false);\n      suggestions = cities.map(suggestion => ({\n        value: suggestion.name,\n        label: suggestion.name,\n    }))\n    }\n  })\n\n  function handleInputChange(event) {\n    const { value, name } = event.target\n    console.log('city', value);\n    \n      // fetch('/api/cities/search', {\n      //   method: 'POST',\n      //   body: JSON.stringify({data: value}),\n      //   headers: {'Content-Type': 'application/json'}\n      // })\n      // .then(res => res.json())\n      // .then((result) => {console.log(result); setIsLoaded(true); setCities(result)})\n\n  }\n\n  function handleStateInputChange(value) {\n    if(value){\n      console.log(value)\n    } else {\n\n      // const { value } = event.target\n      // setSelectedState(value);console.log(value);\n    }\n    console.log('STATE'); \n  }\n\n\n\n  function populateSuggestions() {\n    return \n  }\n\n\n  const selectStyles = {\n    input: base => ({\n      ...base,\n      color: 'white',\n      '& input': {\n        font: 'inherit',\n      },\n    }),\n  };\n\n  return (\n    <div className={classes.root}>\n      <NoSsr>\n        <Select\n          classes={classes}\n          styles={selectStyles}\n          inputId=\"react-select-single\"\n          TextFieldProps={{\n            label: 'City',\n            InputLabelProps: {\n              htmlFor: 'react-select-single',\n              shrink: true,\n            },\n            placeholder: 'Search for a city',\n          }}\n          options={cities ? cities.map(suggestion => ({\n            value: suggestion.name,\n            label: suggestion.name,\n          })) : console.log('not yet')}\n          value={cities}\n          onChange={handleInputChange}\n          components={components}\n        />\n        <div className={classes.divider} />\n        <Select\n          classes={classes}\n          styles={selectStyles}\n          inputId=\"react-select-single\"\n          TextFieldProps={{\n            label: 'State',\n            InputLabelProps: {\n              htmlFor: 'react-select-single',\n              shrink: true,\n            },\n            placeholder: 'Search for a city',\n          }}\n          options={states.map(suggestion => ({\n            value: suggestion.label,\n            label: suggestion.label,\n          }))}\n          components={components}\n          value={selectedState}  \n          onChange={handleStateInputChange}\n        />\n      </NoSsr>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}