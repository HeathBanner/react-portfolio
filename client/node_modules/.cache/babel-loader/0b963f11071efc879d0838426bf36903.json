{"ast":null,"code":"// import React from 'react';\n// import clsx from 'clsx';\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\n// import Drawer from '@material-ui/core/Drawer';\n// import CssBaseline from '@material-ui/core/CssBaseline';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import List from '@material-ui/core/List';\n// import Typography from '@material-ui/core/Typography';\n// import Divider from '@material-ui/core/Divider';\n// import IconButton from '@material-ui/core/IconButton';\n// import Icon from '@material-ui/core/Icon';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import Jumbotron from '../../components/Jumbotron/Jumbotron';\n// import Moment from 'react-moment';\n// import FormatDate from 'moment';\n// const drawerWidth = 240;\n// export default function PersistentDrawerLeft(props) {\n//   const useStyles = makeStyles(theme => ({\n//     root: {\n//       display: 'flex',\n//     },\n//     appBar: {\n//       transition: theme.transitions.create(['margin', 'width'], {\n//         easing: theme.transitions.easing.sharp,\n//         duration: theme.transitions.duration.leavingScreen,\n//       }),\n//     },\n//     appBarShift: {\n//       width: `calc(100% - ${drawerWidth}px)`,\n//       marginLeft: drawerWidth,\n//       transition: theme.transitions.create(['margin', 'width'], {\n//         easing: theme.transitions.easing.easeOut,\n//         duration: theme.transitions.duration.enteringScreen,\n//       }),\n//     },\n//     toolBar: {\n//       display: 'flex',\n//       alignItems: 'center',\n//       flexWrap: 'nowrap',\n//       // justifyContent: 'center',\n//       // display: 'block',\n//       // textAlign: 'center',\n//       background: props.mood ? `${props.mood.toolbar}` : 'rgb(196, 196, 196)',\n//     },\n//     menuButton: {\n//         position: 'absolute',\n//         left: '3%',\n//         marginRight: theme.spacing(2),\n//         color: props.mood ? `${props.mood.menuButton}` : 'white',\n//     },\n//     barTitle: {\n//       position: 'absolute',\n//       top: '50%',\n//       left: '50%',\n//       transform: 'translate(-50%, -50%)',\n//       display: 'inline-block',\n//       color: props.mood ? `${props.mood.barTitle}` : 'white'\n//     },\n//     hide: {\n//       display: 'none',\n//     },\n//     drawer: {\n//       width: drawerWidth,\n//       flexShrink: 0,\n//     },\n//     drawerPaper: {\n//       width: drawerWidth,\n//     },\n//     drawerHeader: {\n//       display: 'flex',\n//       alignItems: 'center',\n//       padding: '0 8px',\n//       ...theme.mixins.toolbar,\n//       justifyContent: 'flex-end',\n//     },\n//     content: {\n//       flexGrow: 1,\n//       padding: theme.spacing(3),\n//       transition: theme.transitions.create('margin', {\n//         easing: theme.transitions.easing.sharp,\n//         duration: theme.transitions.duration.leavingScreen,\n//       }),\n//       marginLeft: -drawerWidth,\n//     },\n//     contentShift: {\n//       transition: theme.transitions.create('margin', {\n//         easing: theme.transitions.easing.easeOut,\n//         duration: theme.transitions.duration.enteringScreen,\n//       }),\n//       marginLeft: 0,\n//     },\n//     moment: {\n//       position: 'absolute',\n//       right: '3%',\n//       marginRight: theme.spacing(2),\n//       display: 'flex',\n//       alignItems: 'center',\n//     },\n//     clock: {\n//       marginRight: '5px'\n//     }\n//   }));\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [open, setOpen] = React.useState(false);\n//   function handleDrawerOpen() {\n//     setOpen(true);\n//   }\n//   function handleDrawerClose() {\n//     setOpen(false);\n//   }\n//   function getTime() {\n//     date = FormatDate()\n//     console.log(date)\n//   }\n//   var date = ''\n//   setInterval(getTime, 30000);\n//   console.log(date)\n//   return (\n//     <div>\n//       <div className={classes.root}>\n//         <CssBaseline />\n//         <AppBar\n//           position=\"fixed\"\n//           className={clsx(classes.appBar, {\n//             [classes.appBarShift]: open,\n//           })}\n//         >\n//           <Toolbar className={classes.toolBar}>\n//             <IconButton\n//               color=\"inherit\"\n//               aria-label=\"Open drawer\"\n//               onClick={handleDrawerOpen}\n//               edge=\"start\"\n//               className={clsx(classes.menuButton, open && classes.hide)}\n//             >\n//               <Icon>menu</Icon>\n//             </IconButton>\n//             <Typography className={classes.barTitle} variant=\"h6\" noWrap>\n//               Heath Banner\n//             </Typography>\n//             <div className={classes.moment}>\n//               <Icon className={classes.clock}>access_time</Icon>\n//               <Moment interval={30000} date={date} format={'dddd h:mm a'} />\n//             </div>\n//           </Toolbar>\n//         </AppBar>\n//         <Drawer\n//           className={classes.drawer}\n//           variant=\"persistent\"\n//           anchor=\"left\"\n//           open={open}\n//           classes={{\n//             paper: classes.drawerPaper,\n//           }}\n//         >\n//           <div className={classes.drawerHeader}>\n//             <IconButton onClick={handleDrawerClose}>\n//               {theme.direction === 'ltr' ? <Icon>chevron_left</Icon> : <Icon>cheveron_right</Icon>}\n//             </IconButton>\n//           </div>\n//           <Divider />\n//           <List>\n//             {['Inbox', 'Starred', 'Send email'].map((text, index) => (\n//               <ListItem button key={text}>\n//                 <ListItemIcon>{index % 2 === 0 ? <Icon>inbox</Icon> : <Icon>mail</Icon>}</ListItemIcon>\n//                 <ListItemText primary={text} />\n//               </ListItem>\n//             ))}\n//           </List>\n//           <Divider />\n//           </Drawer>\n//       </div>\n//     <Jumbotron />\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Navigation/Drawer.js"],"names":[],"mappingssourcesContent":["// import React from 'react';\n// import clsx from 'clsx';\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\n// import Drawer from '@material-ui/core/Drawer';\n// import CssBaseline from '@material-ui/core/CssBaseline';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import List from '@material-ui/core/List';\n// import Typography from '@material-ui/core/Typography';\n// import Divider from '@material-ui/core/Divider';\n// import IconButton from '@material-ui/core/IconButton';\n// import Icon from '@material-ui/core/Icon';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import Jumbotron from '../../components/Jumbotron/Jumbotron';\n// import Moment from 'react-moment';\n// import FormatDate from 'moment';\n\n// const drawerWidth = 240;\n\n\n// export default function PersistentDrawerLeft(props) {\n//   const useStyles = makeStyles(theme => ({\n//     root: {\n//       display: 'flex',\n//     },\n//     appBar: {\n//       transition: theme.transitions.create(['margin', 'width'], {\n//         easing: theme.transitions.easing.sharp,\n//         duration: theme.transitions.duration.leavingScreen,\n//       }),\n//     },\n//     appBarShift: {\n//       width: `calc(100% - ${drawerWidth}px)`,\n//       marginLeft: drawerWidth,\n//       transition: theme.transitions.create(['margin', 'width'], {\n//         easing: theme.transitions.easing.easeOut,\n//         duration: theme.transitions.duration.enteringScreen,\n//       }),\n//     },\n//     toolBar: {\n//       display: 'flex',\n//       alignItems: 'center',\n//       flexWrap: 'nowrap',\n//       // justifyContent: 'center',\n//       // display: 'block',\n//       // textAlign: 'center',\n//       background: props.mood ? `${props.mood.toolbar}` : 'rgb(196, 196, 196)',\n//     },\n//     menuButton: {\n//         position: 'absolute',\n//         left: '3%',\n//         marginRight: theme.spacing(2),\n//         color: props.mood ? `${props.mood.menuButton}` : 'white',\n//     },\n//     barTitle: {\n//       position: 'absolute',\n//       top: '50%',\n//       left: '50%',\n//       transform: 'translate(-50%, -50%)',\n//       display: 'inline-block',\n//       color: props.mood ? `${props.mood.barTitle}` : 'white'\n//     },\n//     hide: {\n//       display: 'none',\n//     },\n//     drawer: {\n//       width: drawerWidth,\n//       flexShrink: 0,\n//     },\n//     drawerPaper: {\n//       width: drawerWidth,\n//     },\n//     drawerHeader: {\n//       display: 'flex',\n//       alignItems: 'center',\n//       padding: '0 8px',\n//       ...theme.mixins.toolbar,\n//       justifyContent: 'flex-end',\n//     },\n//     content: {\n//       flexGrow: 1,\n//       padding: theme.spacing(3),\n//       transition: theme.transitions.create('margin', {\n//         easing: theme.transitions.easing.sharp,\n//         duration: theme.transitions.duration.leavingScreen,\n//       }),\n//       marginLeft: -drawerWidth,\n//     },\n//     contentShift: {\n//       transition: theme.transitions.create('margin', {\n//         easing: theme.transitions.easing.easeOut,\n//         duration: theme.transitions.duration.enteringScreen,\n//       }),\n//       marginLeft: 0,\n//     },\n//     moment: {\n//       position: 'absolute',\n//       right: '3%',\n//       marginRight: theme.spacing(2),\n//       display: 'flex',\n//       alignItems: 'center',\n//     },\n//     clock: {\n//       marginRight: '5px'\n//     }\n//   }));\n  \n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [open, setOpen] = React.useState(false);\n\n//   function handleDrawerOpen() {\n//     setOpen(true);\n//   }\n\n//   function handleDrawerClose() {\n//     setOpen(false);\n//   }\n\n//   function getTime() {\n//     date = FormatDate()\n//     console.log(date)\n//   }\n//   var date = ''\n//   setInterval(getTime, 30000);\n//   console.log(date)\n\n//   return (\n//     <div>\n//       <div className={classes.root}>\n//         <CssBaseline />\n//         <AppBar\n//           position=\"fixed\"\n//           className={clsx(classes.appBar, {\n//             [classes.appBarShift]: open,\n//           })}\n//         >\n//           <Toolbar className={classes.toolBar}>\n//             <IconButton\n//               color=\"inherit\"\n//               aria-label=\"Open drawer\"\n//               onClick={handleDrawerOpen}\n//               edge=\"start\"\n//               className={clsx(classes.menuButton, open && classes.hide)}\n//             >\n//               <Icon>menu</Icon>\n//             </IconButton>\n//             <Typography className={classes.barTitle} variant=\"h6\" noWrap>\n//               Heath Banner\n//             </Typography>\n//             <div className={classes.moment}>\n//               <Icon className={classes.clock}>access_time</Icon>\n//               <Moment interval={30000} date={date} format={'dddd h:mm a'} />\n//             </div>\n//           </Toolbar>\n//         </AppBar>\n//         <Drawer\n//           className={classes.drawer}\n//           variant=\"persistent\"\n//           anchor=\"left\"\n//           open={open}\n//           classes={{\n//             paper: classes.drawerPaper,\n//           }}\n//         >\n//           <div className={classes.drawerHeader}>\n//             <IconButton onClick={handleDrawerClose}>\n//               {theme.direction === 'ltr' ? <Icon>chevron_left</Icon> : <Icon>cheveron_right</Icon>}\n//             </IconButton>\n//           </div>\n//           <Divider />\n//           <List>\n//             {['Inbox', 'Starred', 'Send email'].map((text, index) => (\n//               <ListItem button key={text}>\n//                 <ListItemIcon>{index % 2 === 0 ? <Icon>inbox</Icon> : <Icon>mail</Icon>}</ListItemIcon>\n//                 <ListItemText primary={text} />\n//               </ListItem>\n//             ))}\n//           </List>\n//           <Divider />\n//           </Drawer>\n//       </div>\n    \n//     <Jumbotron />\n//     </div>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}