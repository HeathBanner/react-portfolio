{"ast":null,"code":"var _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Social/Photos.js\";\nimport React, { Fragment } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, GridList, GridListTile, GridListTileBar, IconButton, Icon } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      backgroundColor: theme.palette.background.paper\n    },\n    header: {\n      margin: '20px 0px',\n      textAlign: 'center'\n    },\n    gridList: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      overflow: 'hidden',\n      width: '80%',\n      margin: '0 auto !important'\n    },\n    tile: {\n      width: 800\n    },\n    titleBar: {\n      background: 'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' + 'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n    },\n    icon: {\n      color: 'white'\n    },\n    sorry: {}\n  };\n});\n\nvar Photos = function Photos(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n  var xs = useMediaQuery(theme.breakpoints.down('xs'));\n  var sm = useMediaQuery(theme.breakpoints.down('sm'));\n  var md = useMediaQuery(theme.breakpoints.down('md'));\n  var mdUp = useMediaQuery(theme.breakpoints.up('md'));\n\n  var gridHeight = function gridHeight() {\n    if (xs) {\n      return 120;\n    }\n\n    if (sm) {\n      return 240;\n    }\n\n    if (md) {\n      return 300;\n    }\n\n    if (mdUp) {\n      return 300;\n    }\n  };\n\n  var gridCols = function gridCols() {\n    if (xs) {\n      return 2;\n    }\n\n    if (sm) {\n      return 2;\n    }\n\n    if (md) {\n      return 2;\n    }\n\n    if (mdUp) {\n      return 2;\n    }\n  };\n\n  var renderPhotos = function renderPhotos() {\n    if (props.info.gallery.length >= 1) {\n      return props.info.gallery.map(function (photo, index) {\n        return React.createElement(GridListTile, {\n          cols: 1,\n          key: index,\n          className: classes.tile,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: photo.img,\n          alt: photo.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }), React.createElement(GridListTileBar, {\n          title: photo.title,\n          titlePosition: \"top\",\n          actionIcon: React.createElement(IconButton, {\n            className: classes.icon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, \"star_border\")),\n          actionPosition: \"left\",\n          className: classes.titleBar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }));\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: classes.sorry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Sorry, no photos to show\"), React.createElement(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"\\xAF|_(\\u30C4)_/\\xAF\"));\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    color: \"textSecondary\",\n    className: classes.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Gallery\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cols: gridCols(),\n    cellHeight: gridHeight(),\n    spacing: 12,\n    className: classes.gridList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, renderPhotos())));\n};\n\nexport default Photos;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Social/Photos.js"],"names":["React","Fragment","makeStyles","useTheme","useMediaQuery","Grid","Typography","GridList","GridListTile","GridListTileBar","IconButton","Icon","useStyles","theme","root","backgroundColor","palette","background","paper","header","margin","textAlign","gridList","display","flexWrap","justifyContent","overflow","width","tile","titleBar","icon","color","sorry","Photos","props","classes","xs","breakpoints","down","sm","md","mdUp","up","gridHeight","gridCols","renderPhotos","info","gallery","length","map","photo","index","img","title"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, GridList, GridListTile, GridListTileBar, IconButton, Icon } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper, \n    },\n    header: {\n        margin: '20px 0px',\n        textAlign: 'center',\n    },\n    gridList: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        overflow: 'hidden',\n        width: '80%',\n        margin: '0 auto !important',\n    },\n    tile: {\n        width: 800\n    },\n    titleBar: {\n        background: \n        'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n        'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    icon: {\n        color: 'white',\n    },\n    sorry: {  \n    },\n}));\n\nconst Photos = (props) => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    \n    const xs = useMediaQuery(theme.breakpoints.down('xs'));\n    const sm = useMediaQuery(theme.breakpoints.down('sm'));\n    const md = useMediaQuery(theme.breakpoints.down('md'));\n    const mdUp = useMediaQuery(theme.breakpoints.up('md'));\n\n    const gridHeight = () => {\n        if(xs) {return 120}\n        if(sm) {return 240}\n        if(md) {return 300}\n        if(mdUp) {return 300}\n    }\n\n    const gridCols = () => {\n        if(xs) {return 2}\n        if(sm) {return 2}\n        if(md) {return 2}\n        if(mdUp) {return 2}\n    }\n\n    const renderPhotos = () => {\n\n        if(props.info.gallery.length >= 1) {\n\n            return (\n\n                props.info.gallery.map((photo, index) => {\n\n                    return (\n                        <GridListTile cols={1} key={index} className={classes.tile}>\n                            \n                            <img src={photo.img} alt={photo.title} />\n                            \n                            <GridListTileBar \n                                title={photo.title}\n                                titlePosition=\"top\"\n                                actionIcon={\n                                    <IconButton className={classes.icon}>\n                                        <Icon>star_border</Icon>\n                                    </IconButton>\n                                }\n                                actionPosition=\"left\"\n                                className={classes.titleBar}\n                            />\n                        </GridListTile>\n                    );\n                })\n            );\n        } \n        else {\n            return (\n\n                <div className={classes.sorry}>\n\n                    <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\" >\n                        Sorry, no photos to show\n                    </Typography>\n\n                    <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\" >\n                        {`¯|_(ツ)_/¯`}\n                    </Typography>\n\n                </div>\n            );\n        }\n    };\n\n    return (\n        <Fragment>\n\n            <Grid item xs={12}>\n\n                <Typography variant=\"h3\" color=\"textSecondary\" className={classes.header}>\n                    Gallery\n                </Typography>\n\n            </Grid>\n\n            <Grid item xs={12}>\n\n                <GridList cols={gridCols()} cellHeight={gridHeight()} spacing={12} className={classes.gridList}>\n                    \n                    {renderPhotos()}\n                \n                </GridList>\n\n            </Grid>\n\n        </Fragment>\n    );\n};\n\nexport default Photos;"]},"metadata":{},"sourceType":"module"}