{"ast":null,"code":"import _defineProperty from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Weather/WeatherModule.js\";\nimport React, { useContext } from 'react';\nimport { AppContext } from '../../../context/AuthContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Typography, Divider } from '@material-ui/core';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport FormatDate from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  var _moduleBox;\n\n  return {\n    moduleContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    moduleBox: (_moduleBox = {}, _defineProperty(_moduleBox, theme.breakpoints.down('md'), {\n      width: '85%'\n    }), _defineProperty(_moduleBox, \"width\", '70%'), _defineProperty(_moduleBox, \"color\", 'white'), _defineProperty(_moduleBox, \"backgroundColor\", 'rgb(0, 0, 0, 0.1)'), _defineProperty(_moduleBox, \"display\", 'flex'), _defineProperty(_moduleBox, \"justifyContent\", 'center'), _defineProperty(_moduleBox, \"alignItems\", 'center'), _defineProperty(_moduleBox, \"alignContent\", 'center'), _defineProperty(_moduleBox, \"flexWrap\", 'wrap'), _moduleBox),\n    weatherBoxes: {\n      width: '33.3%',\n      height: 300,\n      padding: 20,\n      borderRadius: 0,\n      color: 'rgb(255, 255, 255)',\n      backgroundColor: 'rgb(0, 0, 0, 0.1)',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center',\n      flexWrap: 'wrap'\n    },\n    boxHeader: {\n      textTransform: 'capitalize',\n      width: '100%'\n    }\n  };\n});\n\nvar WeatherModule = function WeatherModule(props) {\n  var classes = useStyles();\n  var holder = useContext(AppContext);\n\n  var getMomentVariant = function getMomentVariant() {\n    switch (true) {\n      case holder.sm:\n        return 'h5';\n\n      case holder.md:\n        return 'h4';\n\n      default:\n        return 'h3';\n    }\n  };\n\n  return React.createElement(Grid, {\n    className: classes.moduleContainer,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.moduleBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      width: '100%',\n      padding: '20px 0px 10px 0px'\n    },\n    variant: holder.sm ? 'h2' : 'h1',\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, props.city), React.createElement(Divider, {\n    style: {\n      width: '70%',\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), props.forecast.map(function (weather) {\n    return React.createElement(Paper, {\n      className: classes.weatherBoxes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: {\n        width: '100%'\n      },\n      variant: getMomentVariant(),\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Moment, {\n      className: classes.day,\n      date: FormatDate(weather.dt_txt),\n      format: \"dddd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      style: {\n        width: '70%',\n        borderTop: '1px solid rgba(0,0,0,.1)',\n        margin: '10px 0px 20px 0px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.boxHeader,\n      variant: holder.md ? 'h5' : 'h4',\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, weather.weather[0].description), React.createElement(\"img\", {\n      src: \"https://openweathermap.org/img/w/\".concat(weather.weather[0].icon, \".png\"),\n      alt: \"Weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      style: {\n        width: '100%'\n      },\n      variant: holder.md ? 'h6' : 'h5',\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"High: \", \"\".concat(Math.round(weather.main.temp_max)), \"\\u2109\"), React.createElement(Typography, {\n      style: {\n        width: '100%'\n      },\n      variant: holder.md ? 'h6' : 'h5',\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Low: \", \"\".concat(Math.round(weather.main.temp_min)), \"\\u2109\"));\n  })));\n};\n\nexport default WeatherModule;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Weather/WeatherModule.js"],"names":["React","useContext","AppContext","makeStyles","Grid","Paper","Typography","Divider","Moment","FormatDate","useStyles","theme","moduleContainer","display","justifyContent","alignItems","moduleBox","breakpoints","down","width","weatherBoxes","height","padding","borderRadius","color","backgroundColor","alignContent","flexWrap","boxHeader","textTransform","WeatherModule","props","classes","holder","getMomentVariant","sm","md","city","marginBottom","forecast","map","weather","day","dt_txt","borderTop","margin","description","icon","Math","round","main","temp_max","temp_min"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\n\nimport { AppContext } from '../../../context/AuthContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Typography, Divider } from '@material-ui/core';\n\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport FormatDate from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    moduleContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    moduleBox: {\n        [theme.breakpoints.down('md')]: {\n            width: '85%',\n        },\n        width: '70%',\n        color: 'white',\n        backgroundColor: 'rgb(0, 0, 0, 0.1)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n    },\n    weatherBoxes: {\n        width: '33.3%',\n        height: 300,\n        padding: 20,\n        borderRadius: 0,\n        color: 'rgb(255, 255, 255)',\n        backgroundColor: 'rgb(0, 0, 0, 0.1)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n    },\n    boxHeader: {\n        textTransform: 'capitalize',\n        width: '100%'\n    },\n}));\n\n\nconst WeatherModule = (props) => {\n    \n    const classes = useStyles();\n    const holder = useContext(AppContext);\n\n    const getMomentVariant = () => {\n        switch (true) {\n            case holder.sm:\n                return 'h5';\n            case holder.md:\n                return 'h4';\n            default:\n                return 'h3'\n        }\n    };\n\n    return (\n        <Grid className={classes.moduleContainer} item xs={12}>\n\n            <Paper className={classes.moduleBox}>\n\n                <Typography style={{ width: '100%', padding: '20px 0px 10px 0px' }} variant={holder.sm ? 'h2' : 'h1'} align=\"center\">\n                    {props.city}\n                </Typography>\n\n                <Divider style={{ width: '70%', marginBottom: 20 }} />\n\n                {\n                    props.forecast.map((weather) => (\n\n                        <Paper className={classes.weatherBoxes}>\n\n                            <Typography style={{ width: '100%' }} variant={getMomentVariant()} align=\"center\">\n                                <Moment className={classes.day} date={FormatDate(weather.dt_txt)} format=\"dddd\" />\n                            </Typography>\n\n                            <Divider style={{ width: '70%', borderTop: '1px solid rgba(0,0,0,.1)', margin: '10px 0px 20px 0px'}} />\n\n                            <Typography className={classes.boxHeader} variant={holder.md ? 'h5' : 'h4'} align=\"center\">\n                                {weather.weather[0].description}\n                            </Typography>\n\n                            <img\n                                src={`https://openweathermap.org/img/w/${weather.weather[0].icon}.png`}\n                                alt=\"Weather\"\n                            />\n\n                            <Typography style={{ width: '100%' }} variant={holder.md ? 'h6' : 'h5'} align=\"center\">\n                                High: {`${Math.round(weather.main.temp_max)}`}&#8457;\n                            </Typography>\n\n                            <Typography style={{ width: '100%' }} variant={holder.md ? 'h6' : 'h5'} align=\"center\">\n                                Low: {`${Math.round(weather.main.temp_min)}`}&#8457;\n                            </Typography>\n\n                        </Paper>\n\n                    ))\n                }                \n\n            </Paper>\n\n        </Grid>\n    );\n}\n\nexport default WeatherModule;\n"]},"metadata":{},"sourceType":"module"}