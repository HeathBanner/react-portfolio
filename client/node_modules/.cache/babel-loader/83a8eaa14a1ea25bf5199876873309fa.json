{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _readOnlyError from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/context/Story.js\";\nimport React from 'react';\nimport io from 'socket.io-client';\nexport var CTX = React.createContext();\nvar initState = {\n  chats: []\n};\n\nfunction reducer(state, action) {\n  var _ref, _ref2;\n\n  var _action$payload$msg = action.payload.msg,\n      from = _action$payload$msg.from,\n      msg = _action$payload$msg.msg,\n      to = _action$payload$msg.to;\n  console.log(from, msg, to);\n\n  switch (action.type) {\n    case 'RECIEVE_MESSAGE':\n      return _objectSpread({}, state, {\n        chats: [].concat(_toConsumableArray(state.chats), [(_ref = (_readOnlyError(\"to\"), {\n          from: from,\n          msg: msg\n        }), _ref2 = _slicedToArray(_ref, 1), to = _ref2[0], _ref)])\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar socket;\n\nfunction sendChatAction(value) {\n  socket.emit('chat message', value);\n}\n\nfunction Store(props) {\n  var _React$useReducer = React.useReducer(reducer, initState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      chats = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  if (props.username) {\n    socket.emit('new user', props.username);\n  }\n\n  if (!socket) {\n    socket = io(':3001');\n    socket.on('chat message', function (res) {\n      console.log(res);\n      dispatch({\n        type: 'RECIEVE_MESSAGE',\n        payload: res\n      });\n    });\n  }\n\n  var user = props.username ? props.username.username : 'Anon';\n  return React.createElement(CTX.Provider, {\n    value: {\n      chats: chats,\n      sendChatAction: sendChatAction,\n      user: user\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.children);\n}\n\nexport default Store;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/context/Story.js"],"names":["React","io","CTX","createContext","initState","chats","reducer","state","action","payload","msg","from","to","console","log","type","socket","sendChatAction","value","emit","Store","props","useReducer","dispatch","username","on","res","user","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAQ,IAAMC,GAAG,GAAGF,KAAK,CAACG,aAAN,EAAZ;AAER,IAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE;AADO,CAAlB;;AAIA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAAA;;AAAA,4BACFA,MAAM,CAACC,OAAP,CAAeC,GADb;AAAA,MACpBC,IADoB,uBACpBA,IADoB;AAAA,MACdD,GADc,uBACdA,GADc;AAAA,MACTE,EADS,uBACTA,EADS;AAG5BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBD,GAAlB,EAAuBE,EAAvB;;AACA,UAAOJ,MAAM,CAACO,IAAd;AACI,SAAK,iBAAL;AACI,+BACOR,KADP;AAEIF,QAAAA,KAAK,+BAAOE,KAAK,CAACF,KAAb,mCAA2B;AAACM,UAAAA,IAAI,EAAJA,IAAD;AAAOD,UAAAA,GAAG,EAAHA;AAAP,SAA3B,oCAAqBE,EAArB;AAFT;;AAIJ;AACI,aAAOL,KAAP;AAPR;AASH;;AACD,IAAIS,MAAJ;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3BF,EAAAA,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BD,KAA5B;AACH;;AAED,SAASE,KAAT,CAAeC,KAAf,EAAsB;AAAA,0BAEQrB,KAAK,CAACsB,UAAN,CAAiBhB,OAAjB,EAA0BF,SAA1B,CAFR;AAAA;AAAA,MAEXC,KAFW;AAAA,MAEJkB,QAFI;;AAIlB,MAAGF,KAAK,CAACG,QAAT,EAAmB;AACfR,IAAAA,MAAM,CAACG,IAAP,CAAY,UAAZ,EAAwBE,KAAK,CAACG,QAA9B;AACH;;AAED,MAAI,CAACR,MAAL,EAAa;AACTA,IAAAA,MAAM,GAAGf,EAAE,CAAC,OAAD,CAAX;AAEAe,IAAAA,MAAM,CAACS,EAAP,CAAU,cAAV,EAA0B,UAASC,GAAT,EAAc;AACpCb,MAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACAH,MAAAA,QAAQ,CAAC;AAACR,QAAAA,IAAI,EAAE,iBAAP;AAA0BN,QAAAA,OAAO,EAAEiB;AAAnC,OAAD,CAAR;AACH,KAHD;AAIH;;AAED,MAAMC,IAAI,GAAGN,KAAK,CAACG,QAAN,GAAiBH,KAAK,CAACG,QAAN,CAAeA,QAAhC,GAA2C,MAAxD;AAEA,SACI,oBAAC,GAAD,CAAK,QAAL;AAAc,IAAA,KAAK,EAAE;AAACnB,MAAAA,KAAK,EAALA,KAAD;AAAQY,MAAAA,cAAc,EAAdA,cAAR;AAAwBU,MAAAA,IAAI,EAAJA;AAAxB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACO,QADX,CADJ;AAKH;;AAED,eAAeR,KAAf","sourcesContent":["import React from 'react';\nimport io from 'socket.io-client';\n\nexport  const CTX = React.createContext();\n\nconst initState = {\n    chats: [],\n}\n\nfunction reducer(state, action) {\n    const { from, msg, to } = action.payload.msg;\n\n    console.log(from, msg, to);\n    switch(action.type) {\n        case 'RECIEVE_MESSAGE':\n            return {\n                ...state,\n                chats: [ ...state.chats, [to] = {from, msg}]\n            }\n        default:\n            return state\n    }\n}\nlet socket;\n\nfunction sendChatAction(value) {\n    socket.emit('chat message', value)\n}\n\nfunction Store(props) {\n\n    const [chats, dispatch] = React.useReducer(reducer, initState);\n    \n    if(props.username) {\n        socket.emit('new user', props.username)\n    }\n\n    if (!socket) {\n        socket = io(':3001');\n\n        socket.on('chat message', function(res) {\n            console.log(res)\n            dispatch({type: 'RECIEVE_MESSAGE', payload: res});\n        })\n    }\n\n    const user = props.username ? props.username.username : 'Anon';\n\n    return (\n        <CTX.Provider value={{chats, sendChatAction, user}}>\n            {props.children}\n        </CTX.Provider>\n    )\n}\n\nexport default Store"]},"metadata":{},"sourceType":"module"}