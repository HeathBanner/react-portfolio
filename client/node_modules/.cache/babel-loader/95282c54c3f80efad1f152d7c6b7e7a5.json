{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Register/RegisterForm.js\";\nimport React, { Fragment } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\nimport { InputLabel } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      marginTop: '40px',\n      color: 'black !important',\n      width: '60% !important',\n      flexWrap: 'wrap',\n      flexDirection: 'column'\n    },\n    label: {\n      color: 'black !important'\n    },\n    postStory: {\n      marginTop: '50px'\n    },\n    form: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      flexDirection: 'row'\n    }\n  };\n});\n\nfunction RegisterForm() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      username = _React$useState2[0],\n      setUsername = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      email = _React$useState4[0],\n      setEmail = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      password = _React$useState6[0],\n      setPassword = _React$useState6[1];\n\n  var classes = useStyles();\n\n  function handleInputChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n\n    if (name === 'username') {\n      setUsername(value);\n    }\n\n    ;\n\n    if (name === 'email') {\n      setEmail(value);\n    }\n\n    ;\n\n    if (name === 'password') {\n      setPassword(value);\n    }\n\n    ;\n  }\n\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    console.log(username, email, password);\n    fetch('/api/users/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        username: username,\n        email: email,\n        password: password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      console.log(result);\n    });\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleOnSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.root,\n    multiline: true,\n    fullWidth: false,\n    rowsMax: \"8\",\n    label: \"Username\",\n    name: \"username\",\n    value: username,\n    onChange: handleInputChange,\n    InputLabelProps: {\n      className: classes.label\n    },\n    inputProps: {\n      className: classes.label\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.root,\n    type: \"email\",\n    multiline: true,\n    fullWidth: false,\n    rowsMax: \"8\",\n    label: \"Email\",\n    name: \"email\",\n    required: true,\n    value: email,\n    onChange: handleInputChange,\n    InputLabelProps: {\n      className: classes.label\n    },\n    inputProps: {\n      className: classes.label,\n      type: 'email'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Input, {\n    className: classes.label,\n    name: \"password\",\n    value: password,\n    type: \"password\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(TextField, {\n    className: classes.root,\n    multiline: true,\n    fullWidth: false,\n    rowsMax: \"8\",\n    label: \"Password\",\n    name: \"password\",\n    value: password,\n    type: \"password\",\n    onChange: handleInputChange,\n    InputLabelProps: {\n      className: classes.label\n    },\n    inputProps: {\n      type: \"password\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Fab, {\n    size: \"small\",\n    className: classes.postStory,\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"add\"))));\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Register/RegisterForm.js"],"names":["React","Fragment","TextField","FormControl","Paper","makeStyles","IconButton","Icon","Fab","InputLabel","useStyles","theme","root","marginTop","color","width","flexWrap","flexDirection","label","postStory","form","display","RegisterForm","useState","username","setUsername","email","setEmail","password","setPassword","classes","handleInputChange","e","target","name","value","handleOnSubmit","preventDefault","console","log","fetch","method","body","JSON","stringify","headers","then","res","json","result","className","type"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\nimport { InputLabel } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: '40px',\n        color: 'black !important',\n        width: '60% !important',\n        flexWrap: 'wrap',\n        flexDirection: 'column',\n    },\n    label: {\n        color: 'black !important',\n    },\n    postStory: {\n        marginTop: '50px',\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flexDirection: 'row',\n    }\n}))\n\n\nfunction RegisterForm() {\n\n    const [username, setUsername] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n\n    const classes = useStyles();\n\n    function handleInputChange(e) {\n        const { name, value } = e.target;\n        if(name === 'username'){setUsername(value)};\n        if(name === 'email'){setEmail(value)};\n        if(name === 'password'){setPassword(value)};\n    }\n\n    function handleOnSubmit(e) {\n        e.preventDefault();\n        console.log(username, email, password)\n        fetch('/api/users/register', {\n            method: 'POST',\n            body: JSON.stringify({username: username, email: email, password: password}),\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then(res => res.json())\n        .then((result) => {console.log(result)});\n    }\n\n    return (\n        <Fragment>\n            <form className={classes.form} onSubmit={handleOnSubmit}>\n                <TextField\n                        className={classes.root}\n                        multiline\n                        fullWidth={false}\n                        rowsMax=\"8\"\n                        label=\"Username\"\n                        name=\"username\"\n                        value={username}\n                        onChange={handleInputChange}\n                        InputLabelProps={{className: classes.label}}\n                        inputProps={{className: classes.label}}\n                    />\n                    <TextField\n                        className={classes.root}\n                        type=\"email\"\n                        multiline\n                        fullWidth={false}\n                        rowsMax=\"8\"\n                        label=\"Email\"\n                        name=\"email\"\n                        required\n                        value={email}\n                        onChange={handleInputChange}\n                        InputLabelProps={{className: classes.label}}\n                        inputProps={{className: classes.label, type: 'email'}}\n                    />\n                    <FormControl>\n                        <InputLabel className={classes.label}>Password</InputLabel>\n                        <Input \n                            className={classes.label}\n                            name='password'\n                            value={password}\n                            type=\"password\"\n                            onChange={handleInputChange}\n                        />\n                    </FormControl>\n                    <TextField\n                        className={classes.root}\n                        multiline\n                        fullWidth={false}\n                        rowsMax=\"8\"\n                        label=\"Password\"\n                        name='password'\n                        value={password}\n                        type=\"password\"\n                        onChange={handleInputChange}\n                        InputLabelProps={{className: classes.label}}\n                        inputProps={{ type: \"password\"}}\n                    />\n                        <Fab \n                            size=\"small\" \n                            className={classes.postStory} \n                            color=\"primary\"\n                            type=\"submit\"\n                        >\n                            \n                            <Icon>add</Icon>\n                        </Fab>\n                \n            </form>\n        </Fragment>\n    );\n}\n\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}