{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/MtnDream/Editor/LGToolbar.js\";\nimport React, { useContext, useState } from 'react';\nimport TextSize from './Tools/TextSize';\nimport Font from './Tools/Font';\nimport Styling from './Tools/Styling';\nimport Justify from './Tools/Justify';\nimport Margin from './Tools/Margin';\nimport { EditorContext } from '../../../../context/EditorContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green, amber } from '@material-ui/core/colors';\nimport { Grid, Icon, Fab, Button, Snackbar, SnackbarContent, Typography } from '@material-ui/core';\nvar months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nvar useStyles = makeStyles(function (theme) {\n  var _editorTools, _saveContainer;\n\n  return {\n    container: {\n      padding: 20,\n      background: '#ffffff',\n      position: 'fixed',\n      zIndex: 2,\n      boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)'\n    },\n    editorTools: (_editorTools = {}, _defineProperty(_editorTools, theme.breakpoints.down('md'), {\n      marginTop: 20\n    }), _defineProperty(_editorTools, \"display\", 'flex'), _defineProperty(_editorTools, \"justifyContent\", 'center'), _defineProperty(_editorTools, \"alignItems\", 'center'), _editorTools),\n    input: {\n      width: '80%'\n    },\n    saveContainer: (_saveContainer = {}, _defineProperty(_saveContainer, theme.breakpoints.down('md'), {\n      justifyContent: 'center'\n    }), _defineProperty(_saveContainer, \"display\", 'flex'), _defineProperty(_saveContainer, \"justifyContent\", 'flex-start'), _defineProperty(_saveContainer, \"alignItems\", 'center'), _saveContainer),\n    save: {\n      position: 'relative',\n      backgroundColor: 'rgb(0, 0, 0, 0.2)',\n      transition: 'all 0.4s ease',\n      '&:hover': {\n        transform: 'scale(1.03)',\n        backgroundColor: 'rgb(0, 0, 0, 0.05)'\n      }\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    warning: {\n      backgroundColor: amber[700]\n    },\n    success: {\n      backgroundColor: green[600]\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n});\n\nvar Toolbar = function Toolbar() {\n  var classes = useStyles();\n  var edit = useContext(EditorContext); // These will toggle the notification components\n\n  var _useState = useState({\n    open: false,\n    message: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState({\n    open: false,\n    message: 'Article saved!'\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      success = _useState4[0],\n      setSuccess = _useState4[1];\n\n  var _useState5 = useState({\n    open: false,\n    messsage: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      warning = _useState6[0],\n      setWarning = _useState6[1];\n\n  var closeError = function closeError() {\n    setError({\n      open: false,\n      message: ''\n    });\n  };\n\n  var closeSuccess = function closeSuccess() {\n    setSuccess({\n      open: false,\n      message: 'Article Saved!'\n    });\n  };\n\n  var closeWarning = function closeWarning() {\n    setWarning({\n      open: false,\n      message: ''\n    });\n  }; // This function will check if the required parameters are passing\n  // before passing anything to the database\n\n\n  var preSubmit = function preSubmit() {\n    switch (true) {\n      case !edit.title.text:\n        setWarning({\n          open: true,\n          message: 'Title is required!'\n        });\n        break;\n\n      case !edit.description.text:\n        setWarning({\n          open: true,\n          message: 'Description is required!'\n        });\n        break;\n\n      case !edit.readLength.text:\n        setWarning({\n          open: true,\n          message: 'Read Length is required!'\n        });\n        break;\n\n      case !edit.jumbotron.src:\n        setWarning({\n          open: true,\n          message: 'Jumbotron is required!'\n        });\n        break;\n\n      case !edit.body[0].text:\n        setWarning({\n          open: true,\n          message: 'A body section is required!'\n        });\n        break;\n\n      case edit.title.isPublished:\n        handleChanges();\n        break;\n\n      case !edit.title.isPublished:\n        handleSubmit();\n        break;\n\n      default:\n        setError({\n          open: true,\n          message: 'Something went wrong :('\n        });\n        break;\n    }\n  }; // If the preSubmit function passes with no errors or warnings it will\n  // then log the current date and store it within the database\n\n\n  var handleSubmit = function handleSubmit() {\n    var now = new Date();\n    var date = {\n      parsedDate: \"\".concat(months[now.getMonth()], \" \").concat(now.getDate()),\n      epoch: now.getTime()\n    };\n    var data = {\n      title: edit.title,\n      description: edit.description,\n      readLength: edit.readLength,\n      jumbotron: edit.jumbotron,\n      body: edit.body,\n      date: date\n    };\n    fetch('/api/editors/newArticle', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      if (result.error) {\n        return setError({\n          open: true,\n          message: result.error\n        });\n      }\n\n      setSuccess({\n        open: true,\n        message: 'Article published!'\n      });\n      edit.setPublished();\n    }).catch(function (error) {\n      setError({\n        open: true,\n        message: error\n      });\n    });\n  }; // If the user has already published the article, this function will then\n  // update the article within the database\n\n\n  var handleChanges = function handleChanges() {\n    var data = {\n      title: edit.title,\n      description: edit.description,\n      readLength: edit.readLength,\n      jumbotron: edit.jumbotron,\n      body: edit.body\n    };\n    fetch('/api/editors/saveChanges', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      if (result.error) {\n        return setError({\n          open: true,\n          message: result.error\n        });\n      }\n\n      setSuccess({\n        open: true,\n        message: 'Article Saved!'\n      });\n    }).catch(function (error) {\n      setError({\n        open: true,\n        message: error\n      });\n    });\n  };\n\n  return React.createElement(Grid, {\n    className: classes.container,\n    justify: \"center\",\n    alignItems: \"center\",\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, edit.title.isPublished ? React.createElement(Fab, {\n    className: classes.save,\n    onClick: preSubmit,\n    variant: \"extended\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"save\"), React.createElement(Typography, {\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"Save\")) : React.createElement(Fab, {\n    className: classes.save,\n    onClick: preSubmit,\n    variant: \"extended\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"save\"), React.createElement(Typography, {\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Publish\")), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: error.open,\n    autoHideDuration: 6000,\n    onClose: closeError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: classes.error,\n    message: React.createElement(Typography, {\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"error\"), error.message),\n    action: React.createElement(Button, {\n      onClick: closeError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"close\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: success.open,\n    autoHideDuration: 6000,\n    onClose: closeSuccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: classes.success,\n    message: React.createElement(Typography, {\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"check_circle\"), success.message),\n    action: React.createElement(Button, {\n      onClick: closeSuccess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"close\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: warning.open,\n    autoHideDuration: 6000,\n    onClose: closeWarning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: classes.warning,\n    message: React.createElement(Typography, {\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"check_circle\"), warning.message),\n    action: React.createElement(Button, {\n      onClick: closeWarning,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"close\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    className: classes.editorTools,\n    item: true,\n    xs: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(TextSize, {\n    margin: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }), React.createElement(Font, {\n    margin: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }), React.createElement(Styling, {\n    margin: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }), React.createElement(Justify, {\n    margin: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }), React.createElement(Margin, {\n    margin: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  })));\n};\n\nexport default Toolbar;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/MtnDream/Editor/LGToolbar.js"],"names":["React","useContext","useState","TextSize","Font","Styling","Justify","Margin","EditorContext","makeStyles","green","amber","Grid","Icon","Fab","Button","Snackbar","SnackbarContent","Typography","months","useStyles","theme","container","padding","background","position","zIndex","boxShadow","editorTools","breakpoints","down","marginTop","input","width","saveContainer","justifyContent","save","backgroundColor","transition","transform","error","palette","dark","warning","success","message","display","alignItems","Toolbar","classes","edit","open","setError","setSuccess","messsage","setWarning","closeError","closeSuccess","closeWarning","preSubmit","title","text","description","readLength","jumbotron","src","body","isPublished","handleChanges","handleSubmit","now","Date","date","parsedDate","getMonth","getDate","epoch","getTime","data","fetch","method","JSON","stringify","headers","then","res","json","result","setPublished","catch","marginLeft","vertical","horizontal","marginRight"],"mappings":"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","sourcesContent":["import React, {\n    useContext,\n    useState,\n} from 'react';\n\nimport TextSize from './Tools/TextSize';\nimport Font from './Tools/Font';\nimport Styling from './Tools/Styling';\nimport Justify from './Tools/Justify';\nimport Margin from './Tools/Margin';\n\nimport { EditorContext } from '../../../../context/EditorContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green, amber } from '@material-ui/core/colors';\nimport { Grid,\n    Icon,\n    Fab,\n    Button,\n    Snackbar,\n    SnackbarContent,\n    Typography,\n} from '@material-ui/core';\n\nconst months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: 20,\n        background: '#ffffff',\n        position: 'fixed',\n        zIndex: 2,\n        boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)',\n    },\n    editorTools: {\n        [theme.breakpoints.down('md')]: {\n            marginTop: 20,\n        },\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    input: {\n        width: '80%'\n    },\n    saveContainer: {\n        [theme.breakpoints.down('md')]: {\n            justifyContent: 'center',\n        },\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    save: {\n        position: 'relative',\n        backgroundColor: 'rgb(0, 0, 0, 0.2)',\n        transition: 'all 0.4s ease',\n        '&:hover': {\n            transform: 'scale(1.03)',\n            backgroundColor: 'rgb(0, 0, 0, 0.05)',\n        },\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    success: {\n        backgroundColor: green[600],\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\nconst Toolbar = () => {\n\n    const classes = useStyles();\n    const edit = useContext(EditorContext);\n\n    // These will toggle the notification components\n    const [error, setError] = useState({\n        open: false,\n        message: '',\n    });\n    const [success, setSuccess] = useState({\n        open: false,\n        message: 'Article saved!'\n    });\n    const [warning, setWarning] = useState({\n        open: false,\n        messsage: '',\n    });\n\n    const closeError = () => { setError({ open: false, message: '' }); };\n    const closeSuccess = () => { setSuccess({ open: false, message: 'Article Saved!' }); };\n    const closeWarning = () => { setWarning({ open: false, message: '' }); };\n\n    // This function will check if the required parameters are passing\n    // before passing anything to the database\n    const preSubmit = () => {\n        switch (true) {\n            case !edit.title.text:\n                setWarning({ open: true, message: 'Title is required!' });\n                break;\n            case !edit.description.text:\n                setWarning({ open: true, message: 'Description is required!' });\n                break;\n            case !edit.readLength.text:\n                setWarning({ open: true, message: 'Read Length is required!' });\n                break;\n            case !edit.jumbotron.src:\n                setWarning({ open: true, message: 'Jumbotron is required!' });\n                break;\n            case !edit.body[0].text:\n                setWarning({ open: true, message: 'A body section is required!' });\n                break;\n            case edit.title.isPublished:\n                handleChanges();\n                break;\n            case !edit.title.isPublished:\n                handleSubmit();\n                break;\n            default:\n                setError({ open: true, message: 'Something went wrong :(' });\n                break;\n        }\n    };\n\n    // If the preSubmit function passes with no errors or warnings it will\n    // then log the current date and store it within the database\n    const handleSubmit = () => {\n        const now = new Date();\n        const date = {\n            parsedDate: `${months[now.getMonth()]} ${now.getDate()}`,\n            epoch: now.getTime(),\n        };\n        const data = {\n            title: edit.title,\n            description: edit.description,\n            readLength: edit.readLength,\n            jumbotron: edit.jumbotron,\n            body: edit.body,\n            date,\n        };\n        fetch('/api/editors/newArticle',{\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                if (result.error) {\n                    return setError({ open: true, message: result.error });\n                }\n                setSuccess({ open: true, message: 'Article published!' });\n                edit.setPublished();\n            })\n            .catch((error) => { setError({ open: true, message: error }); });\n    };\n\n    // If the user has already published the article, this function will then\n    // update the article within the database\n    const handleChanges = () => {\n        const data = {\n            title: edit.title,\n            description: edit.description,\n            readLength: edit.readLength,\n            jumbotron: edit.jumbotron,\n            body: edit.body,\n        };\n        fetch('/api/editors/saveChanges', {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                if (result.error) {\n                    return setError({ open: true, message: result.error });\n                }\n                setSuccess({ open: true, message: 'Article Saved!' });\n            })\n            .catch((error) => { setError({ open: true, message: error }); });\n    };\n\n    return (\n        <Grid\n            className={classes.container}\n            justify=\"center\"\n            alignItems=\"center\"\n            container\n        >\n\n            <Grid item xs={1}>\n\n                {\n                    edit.title.isPublished\n                        ?\n                    <Fab className={classes.save} onClick={preSubmit} variant=\"extended\">\n                        <Icon>save</Icon>\n                        <Typography style={{ marginLeft: 10 }}>\n                            Save\n                        </Typography>\n                    </Fab>\n                        :\n                    <Fab className={classes.save} onClick={preSubmit} variant=\"extended\">\n                        <Icon>save</Icon>\n                        <Typography style={{ marginLeft: 10 }}>\n                            Publish\n                        </Typography>\n                    </Fab>\n                }\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={error.open}\n                    autoHideDuration={6000}\n                    onClose={closeError}\n                >\n                    <SnackbarContent\n                        className={classes.error}\n                        message={\n                            <Typography className={classes.message}>\n\n                                <Icon style={{ marginRight: 10 }}>\n                                    error\n                                </Icon>\n\n                                {error.message}\n\n                            </Typography>\n                        }\n                        action={\n                            <Button onClick={closeError}>\n                                <Icon>close</Icon>\n                            </Button>\n                        }\n                    />\n                </Snackbar>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={success.open}\n                    autoHideDuration={6000}\n                    onClose={closeSuccess}\n                >\n                    <SnackbarContent\n                        className={classes.success}\n                        message={\n                            <Typography className={classes.message}>\n\n                                <Icon style={{ marginRight: 10 }}>\n                                    check_circle\n                                </Icon>\n\n                                {success.message}\n                                \n                            </Typography>\n                        }\n                        action={\n                            <Button onClick={closeSuccess}>\n                                <Icon>close</Icon>\n                            </Button>\n                        }\n                    />\n                </Snackbar>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={warning.open}\n                    autoHideDuration={6000}\n                    onClose={closeWarning}\n                >\n                    <SnackbarContent\n                        className={classes.warning}\n                        message={\n                            <Typography className={classes.message}>\n\n                                <Icon style={{ marginRight: 10 }}>\n                                    check_circle\n                                </Icon>\n\n                                {warning.message}\n                                \n                            </Typography>\n                        }\n                        action={\n                            <Button onClick={closeWarning}>\n                                <Icon>close</Icon>\n                            </Button>\n                        }\n                    />\n                </Snackbar>\n\n            </Grid>\n            <Grid className={classes.editorTools} item xs={11}>\n\n                <TextSize margin={10} />\n                \n                <Font margin={10} />\n\n                <Styling margin={10} />\n\n                <Justify margin={10} />\n\n                <Margin margin={10} />\n\n            </Grid>\n\n        </Grid>\n    );\n};\n\nexport default Toolbar;\n"]},"metadata":{},"sourceType":"module"}