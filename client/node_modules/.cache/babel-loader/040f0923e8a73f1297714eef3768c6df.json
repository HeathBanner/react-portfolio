{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Contact/ContactForm.js\";\nimport React, { useState, Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Button, Snackbar, SnackbarContent, IconButton, Icon, Typography, Divider } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  var _paper, _header;\n\n  return {\n    paper: (_paper = {}, _defineProperty(_paper, theme.breakpoints.down('lg'), {\n      width: '60%',\n      padding: '20px 40px'\n    }), _defineProperty(_paper, theme.breakpoints.down('md'), {\n      width: '60%',\n      padding: '20px 40px'\n    }), _defineProperty(_paper, theme.breakpoints.down('sm'), {\n      width: '60%',\n      padding: '20px 40px'\n    }), _defineProperty(_paper, theme.breakpoints.down('xs'), {\n      width: '80%',\n      padding: '20px 20px'\n    }), _defineProperty(_paper, \"width\", '60%'), _defineProperty(_paper, \"padding\", '20px 40px'), _defineProperty(_paper, \"display\", 'flex'), _defineProperty(_paper, \"justifyContent\", 'center'), _defineProperty(_paper, \"alignItems\", 'center'), _defineProperty(_paper, \"alignContent\", 'center'), _defineProperty(_paper, \"flexWrap\", 'wrap'), _paper),\n    header: (_header = {}, _defineProperty(_header, theme.breakpoints.down('lg'), {\n      fontSize: '3.2rem'\n    }), _defineProperty(_header, theme.breakpoints.down('md'), {\n      fontSize: '3rem'\n    }), _defineProperty(_header, theme.breakpoints.down('sm'), {\n      fontSize: '2.7rem'\n    }), _defineProperty(_header, theme.breakpoints.down('xs'), {\n      fontSize: '2.3rem'\n    }), _defineProperty(_header, \"width\", '100%'), _header),\n    textFields: {\n      marginTop: '20px',\n      width: '80%'\n    },\n    button: {\n      padding: '10px',\n      marginTop: '20px'\n    },\n    snackbar: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    icon: {\n      marginRight: '10px'\n    },\n    label: {\n      '&$focused': {\n        color: '#c13bff !important'\n      }\n    },\n    outlinedInput: {\n      '&$focused $notchedOutline': {\n        borderColor: '#f50057 !important'\n      },\n      '&:hover $notchedOutline': {\n        borderColor: '#f50057 !important'\n      }\n    },\n    focused: {},\n    hover: {},\n    notchedOutline: {}\n  };\n});\n\nvar ContactForm = function ContactForm() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      open = _useState10[0],\n      setOpen = _useState10[1];\n\n  var classes = useStyles();\n\n  var handleSubmit = function handleSubmit() {\n    var data = {\n      name: name,\n      email: email,\n      phone: phone,\n      message: message\n    };\n    fetch('/api/contact/newContact', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (response) {\n      setOpen(true);\n      setName('');\n      setEmail('');\n      setPhone('');\n      setMessage('');\n    });\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.header,\n    align: \"center\",\n    color: \"primary\",\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Contact Me\"), React.createElement(Divider, {\n    style: {\n      width: '70%',\n      borderTop: '1px solid rgba(0,0,0,.1)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Your Name\",\n    name: \"Name\",\n    required: true,\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    className: classes.textFields,\n    InputLabelProps: {\n      classes: {\n        root: classes.label,\n        focused: classes.focused\n      }\n    },\n    InputProps: {\n      classes: {\n        root: classes.outlinedInput,\n        focused: classes.focused,\n        hover: classes.hover,\n        notchedOutline: classes.notchedOutline\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Your Email\",\n    name: \"Email\",\n    type: \"email\",\n    required: true,\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    className: classes.textFields,\n    InputLabelProps: {\n      classes: {\n        root: classes.label,\n        focused: classes.focused\n      }\n    },\n    InputProps: {\n      classes: {\n        root: classes.outlinedInput,\n        focused: classes.focused,\n        hover: classes.hover,\n        notchedOutline: classes.notchedOutline\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Your Phone Number\",\n    name: \"Phone\",\n    required: true,\n    value: phone,\n    onChange: function onChange(e) {\n      return setPhone(e.target.value);\n    },\n    className: classes.textFields,\n    InputLabelProps: {\n      classes: {\n        root: classes.label,\n        focused: classes.focused\n      }\n    },\n    InputProps: {\n      classes: {\n        root: classes.outlinedInput,\n        focused: classes.focused,\n        hover: classes.hover,\n        notchedOutline: classes.notchedOutline\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Message\",\n    name: \"Message\",\n    required: true,\n    value: message,\n    onChange: function onChange(e) {\n      return setMessage(e.target.value);\n    },\n    className: classes.textFields,\n    InputLabelProps: {\n      classes: {\n        root: classes.label,\n        focused: classes.focused\n      }\n    },\n    InputProps: {\n      classes: {\n        root: classes.outlinedInput,\n        focused: classes.focused,\n        hover: classes.hover,\n        notchedOutline: classes.notchedOutline\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleSubmit,\n    className: classes.button,\n    fullWidth: true,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Send\"), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    message: React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"check\"), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Your contact information has been saved!\")),\n    action: React.createElement(IconButton, {\n      onClick: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"close\")),\n    classes: {\n      message: classes.snackbar\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  })));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Contact/ContactForm.js"],"names":["React","useState","Fragment","makeStyles","Paper","TextField","Button","Snackbar","SnackbarContent","IconButton","Icon","Typography","Divider","useStyles","theme","paper","breakpoints","down","width","padding","header","fontSize","textFields","marginTop","button","snackbar","display","justifyContent","alignItems","icon","marginRight","label","color","outlinedInput","borderColor","focused","hover","notchedOutline","ContactForm","name","setName","email","setEmail","phone","setPhone","message","setMessage","open","setOpen","classes","handleSubmit","data","fetch","method","body","JSON","stringify","headers","then","res","json","response","handleClose","borderTop","e","target","value","root","vertical","horizontal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6CC,eAA7C,EAA8DC,UAA9D,EAA0EC,IAA1E,EAAgFC,UAAhF,EAA4FC,OAA5F,QAA2G,mBAA3G;AAEA,IAAMC,SAAS,GAAGV,UAAU,CAAC,UAAAW,KAAK;AAAA;;AAAA,SAAK;AACnCC,IAAAA,KAAK,wCACAD,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CADA,EAC+B;AAC5BC,MAAAA,KAAK,EAAE,KADqB;AAE5BC,MAAAA,OAAO,EAAE;AAFmB,KAD/B,2BAKAL,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CALA,EAK+B;AAC5BC,MAAAA,KAAK,EAAE,KADqB;AAE5BC,MAAAA,OAAO,EAAE;AAFmB,KAL/B,2BASAL,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CATA,EAS+B;AAC5BC,MAAAA,KAAK,EAAE,KADqB;AAE5BC,MAAAA,OAAO,EAAE;AAFmB,KAT/B,2BAaAL,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAbA,EAa+B;AAC5BC,MAAAA,KAAK,EAAE,KADqB;AAE5BC,MAAAA,OAAO,EAAE;AAFmB,KAb/B,oCAiBM,KAjBN,sCAkBQ,WAlBR,sCAmBQ,MAnBR,6CAoBe,QApBf,yCAqBW,QArBX,2CAsBa,QAtBb,uCAuBS,MAvBT,UAD8B;AA0BnCC,IAAAA,MAAM,0CACDN,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CADC,EAC8B;AAC5BI,MAAAA,QAAQ,EAAE;AADkB,KAD9B,4BAIDP,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAJC,EAI8B;AAC5BI,MAAAA,QAAQ,EAAE;AADkB,KAJ9B,4BAODP,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAPC,EAO8B;AAC5BI,MAAAA,QAAQ,EAAE;AADkB,KAP9B,4BAUDP,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAVC,EAU8B;AAC5BI,MAAAA,QAAQ,EAAE;AADkB,KAV9B,qCAaK,MAbL,WA1B6B;AAyCnCC,IAAAA,UAAU,EAAE;AACRC,MAAAA,SAAS,EAAE,MADH;AAERL,MAAAA,KAAK,EAAE;AAFC,KAzCuB;AA6CnCM,IAAAA,MAAM,EAAE;AACJL,MAAAA,OAAO,EAAE,MADL;AAEJI,MAAAA,SAAS,EAAE;AAFP,KA7C2B;AAiDnCE,IAAAA,QAAQ,EAAE;AACNC,MAAAA,OAAO,EAAE,MADH;AAENC,MAAAA,cAAc,EAAE,QAFV;AAGNC,MAAAA,UAAU,EAAE;AAHN,KAjDyB;AAsDnCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE;AADX,KAtD6B;AAyDnCC,IAAAA,KAAK,EAAE;AACH,mBAAa;AACTC,QAAAA,KAAK,EAAE;AADE;AADV,KAzD4B;AA8DnCC,IAAAA,aAAa,EAAE;AACX,mCAA6B;AACzBC,QAAAA,WAAW,EAAE;AADY,OADlB;AAIX,iCAA2B;AACvBA,QAAAA,WAAW,EAAE;AADU;AAJhB,KA9DoB;AAsEnCC,IAAAA,OAAO,EAAE,EAtE0B;AAuEnCC,IAAAA,KAAK,EAAE,EAvE4B;AAwEnCC,IAAAA,cAAc,EAAE;AAxEmB,GAAL;AAAA,CAAN,CAA5B;;AA2EA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBAEErC,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,MAEfsC,IAFe;AAAA,MAETC,OAFS;;AAAA,mBAGIvC,QAAQ,CAAC,EAAD,CAHZ;AAAA;AAAA,MAGfwC,KAHe;AAAA,MAGRC,QAHQ;;AAAA,mBAIIzC,QAAQ,CAAC,EAAD,CAJZ;AAAA;AAAA,MAIf0C,KAJe;AAAA,MAIRC,QAJQ;;AAAA,mBAKQ3C,QAAQ,CAAC,EAAD,CALhB;AAAA;AAAA,MAKf4C,OALe;AAAA,MAKNC,UALM;;AAAA,mBAME7C,QAAQ,CAAC,KAAD,CANV;AAAA;AAAA,MAMf8C,IANe;AAAA,MAMTC,OANS;;AAQtB,MAAMC,OAAO,GAAGpC,SAAS,EAAzB;;AAEA,MAAMqC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAMC,IAAI,GAAG;AACTZ,MAAAA,IAAI,EAAJA,IADS;AAETE,MAAAA,KAAK,EAALA,KAFS;AAGTE,MAAAA,KAAK,EAALA,KAHS;AAITE,MAAAA,OAAO,EAAPA;AAJS,KAAb;AAMAO,IAAAA,KAAK,CAAC,yBAAD,EAA4B;AAC7BC,MAAAA,MAAM,EAAE,MADqB;AAE7BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFuB;AAG7BM,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHoB,KAA5B,CAAL,CAKKC,IALL,CAKU,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KALb,EAMKF,IANL,CAMU,UAACG,QAAD,EAAc;AAChBb,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAR,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH,KAZL;AAaH,GApBD;;AAsBA,MAAMgB,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBd,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,SACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEC,OAAO,CAAClC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEkC,OAAO,CAAC7B,MAA/B;AAAuC,IAAA,KAAK,EAAC,QAA7C;AAAsD,IAAA,KAAK,EAAC,SAA5D;AAAsE,IAAA,OAAO,EAAC,IAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAMI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEF,MAAAA,KAAK,EAAE,KAAT;AAAgB6C,MAAAA,SAAS,EAAE;AAA3B,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAQQ,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAC,WAFV;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,KAAK,EAAExB,IALX;AAMI,IAAA,QAAQ,EAAE,kBAACyB,CAAD;AAAA,aAAOxB,OAAO,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA,KANd;AAOI,IAAA,SAAS,EAAEjB,OAAO,CAAC3B,UAPvB;AAQI,IAAA,eAAe,EAAE;AACb2B,MAAAA,OAAO,EAAE;AACLkB,QAAAA,IAAI,EAAElB,OAAO,CAAClB,KADT;AAELI,QAAAA,OAAO,EAAEc,OAAO,CAACd;AAFZ;AADI,KARrB;AAcI,IAAA,UAAU,EAAE;AACRc,MAAAA,OAAO,EAAE;AACLkB,QAAAA,IAAI,EAAElB,OAAO,CAAChB,aADT;AAELE,QAAAA,OAAO,EAAEc,OAAO,CAACd,OAFZ;AAGLC,QAAAA,KAAK,EAAEa,OAAO,CAACb,KAHV;AAILC,QAAAA,cAAc,EAAEY,OAAO,CAACZ;AAJnB;AADD,KAdhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARR,EAgCQ,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAC,YAFV;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,IAAI,EAAC,OAJT;AAKI,IAAA,QAAQ,MALZ;AAMI,IAAA,KAAK,EAAEI,KANX;AAOI,IAAA,QAAQ,EAAE,kBAACuB,CAAD;AAAA,aAAOtB,QAAQ,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AAAA,KAPd;AAQI,IAAA,SAAS,EAAEjB,OAAO,CAAC3B,UARvB;AASI,IAAA,eAAe,EAAE;AACb2B,MAAAA,OAAO,EAAE;AACLkB,QAAAA,IAAI,EAAElB,OAAO,CAAClB,KADT;AAELI,QAAAA,OAAO,EAAEc,OAAO,CAACd;AAFZ;AADI,KATrB;AAeI,IAAA,UAAU,EAAE;AACRc,MAAAA,OAAO,EAAE;AACLkB,QAAAA,IAAI,EAAElB,OAAO,CAAChB,aADT;AAELE,QAAAA,OAAO,EAAEc,OAAO,CAACd,OAFZ;AAGLC,QAAAA,KAAK,EAAEa,OAAO,CAACb,KAHV;AAILC,QAAAA,cAAc,EAAEY,OAAO,CAACZ;AAJnB;AADD,KAfhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCR,EAyDQ,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAC,mBAFV;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,KAAK,EAAEM,KALX;AAMI,IAAA,QAAQ,EAAE,kBAACqB,CAAD;AAAA,aAAOpB,QAAQ,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AAAA,KANd;AAOI,IAAA,SAAS,EAAEjB,OAAO,CAAC3B,UAPvB;AAQI,IAAA,eAAe,EAAE;AACb2B,MAAAA,OAAO,EAAE;AACLkB,QAAAA,IAAI,EAAElB,OAAO,CAAClB,KADT;AAELI,QAAAA,OAAO,EAAEc,OAAO,CAACd;AAFZ;AADI,KARrB;AAcI,IAAA,UAAU,EAAE;AACRc,MAAAA,OAAO,EAAE;AACTkB,QAAAA,IAAI,EAAElB,OAAO,CAAChB,aADL;AAETE,QAAAA,OAAO,EAAEc,OAAO,CAACd,OAFR;AAGTC,QAAAA,KAAK,EAAEa,OAAO,CAACb,KAHN;AAITC,QAAAA,cAAc,EAAEY,OAAO,CAACZ;AAJf;AADD,KAdhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzDR,EAiFQ,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,IAAI,EAAC,SAHT;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,KAAK,EAAEQ,OALX;AAMI,IAAA,QAAQ,EAAE,kBAACmB,CAAD;AAAA,aAAOlB,UAAU,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AAAA,KANd;AAOI,IAAA,SAAS,EAAEjB,OAAO,CAAC3B,UAPvB;AAQI,IAAA,eAAe,EAAE;AACb2B,MAAAA,OAAO,EAAE;AACLkB,QAAAA,IAAI,EAAElB,OAAO,CAAClB,KADT;AAELI,QAAAA,OAAO,EAAEc,OAAO,CAACd;AAFZ;AADI,KARrB;AAcI,IAAA,UAAU,EAAE;AACRc,MAAAA,OAAO,EAAE;AACLkB,QAAAA,IAAI,EAAElB,OAAO,CAAChB,aADT;AAELE,QAAAA,OAAO,EAAEc,OAAO,CAACd,OAFZ;AAGLC,QAAAA,KAAK,EAAEa,OAAO,CAACb,KAHV;AAILC,QAAAA,cAAc,EAAEY,OAAO,CAACZ;AAJnB;AADD,KAdhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjFR,EAyGQ,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEa,YADb;AAEI,IAAA,SAAS,EAAED,OAAO,CAACzB,MAFvB;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,KAAK,EAAC,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzGR,EAkHI,oBAAC,QAAD;AACI,IAAA,YAAY,EAAE;AAAE4C,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,UAAU,EAAE;AAAlC,KADlB;AAEI,IAAA,IAAI,EAAEtB,IAFV;AAGI,IAAA,gBAAgB,EAAE,IAHtB;AAII,IAAA,OAAO,EAAEe,WAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,eAAD;AACI,IAAA,OAAO,EACH,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEb,OAAO,CAACpB,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAFJ,CAFR;AASI,IAAA,MAAM,EACF,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAEiC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAC9B,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CAVR;AAcI,IAAA,OAAO,EAAE;AAAEa,MAAAA,OAAO,EAAEI,OAAO,CAACxB;AAAnB,KAdb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAlHJ,CADJ;AA+IH,CAnLD;;AAqLA,eAAea,WAAf","sourcesContent":["import React, { useState, Fragment } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Button, Snackbar, SnackbarContent, IconButton, Icon, Typography, Divider } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        [theme.breakpoints.down('lg')]: {\n            width: '60%',\n            padding: '20px 40px',\n        },\n        [theme.breakpoints.down('md')]: {\n            width: '60%',\n            padding: '20px 40px',\n        },\n        [theme.breakpoints.down('sm')]: {\n            width: '60%',\n            padding: '20px 40px',\n        },\n        [theme.breakpoints.down('xs')]: {\n            width: '80%',\n            padding: '20px 20px',    \n        },\n        width: '60%',\n        padding: '20px 40px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n    },\n    header: {\n        [theme.breakpoints.down('lg')]: {\n            fontSize: '3.2rem',  \n        },\n        [theme.breakpoints.down('md')]: {\n            fontSize: '3rem',  \n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '2.7rem',  \n        },\n        [theme.breakpoints.down('xs')]: {\n            fontSize: '2.3rem',  \n        },\n        width: '100%',\n    },\n    textFields: {\n        marginTop: '20px',\n        width: '80%',\n    },\n    button: {\n        padding: '10px',\n        marginTop: '20px',\n    },\n    snackbar: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    icon: {\n        marginRight: '10px',\n    },\n    label: {\n        '&$focused': {\n            color: '#c13bff !important',\n        },\n    },\n    outlinedInput: {\n        '&$focused $notchedOutline': {\n            borderColor: '#f50057 !important',\n        },\n        '&:hover $notchedOutline': {\n            borderColor: '#f50057 !important',\n        }\n    },\n    focused: {},\n    hover: {},\n    notchedOutline: {},\n}))\n\nconst ContactForm = () => {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [phone, setPhone] = useState('');\n    const [message, setMessage] = useState('');\n    const [open, setOpen] = useState(false);\n \n    const classes = useStyles();\n\n    const handleSubmit = () => {\n        const data = {\n            name,\n            email,\n            phone,\n            message,\n        };\n        fetch('/api/contact/newContact', {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.json())\n            .then((response) => {\n                setOpen(true)\n                setName('');\n                setEmail('');\n                setPhone('');\n                setMessage('');\n            });\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <Paper className={classes.paper}>\n\n            <Typography className={classes.header} align=\"center\" color=\"primary\" variant=\"h2\">\n                Contact Me\n            </Typography>\n            \n            <Divider style={{ width: '70%', borderTop: '1px solid rgba(0,0,0,.1)' }} />\n\n                <TextField \n                    variant=\"outlined\"\n                    label=\"Your Name\"\n                    name=\"Name\"\n                    required\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    className={classes.textFields}\n                    InputLabelProps={{\n                        classes: {\n                            root: classes.label,\n                            focused: classes.focused\n                        }\n                    }}\n                    InputProps={{\n                        classes: {\n                            root: classes.outlinedInput,\n                            focused: classes.focused,\n                            hover: classes.hover,\n                            notchedOutline: classes.notchedOutline,\n                        }\n                    }}\n                />\n\n                <TextField \n                    variant=\"outlined\"\n                    label=\"Your Email\"\n                    name=\"Email\"\n                    type=\"email\"\n                    required\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    className={classes.textFields}\n                    InputLabelProps={{\n                        classes: {\n                            root: classes.label,\n                            focused: classes.focused\n                        }\n                    }}\n                    InputProps={{\n                        classes: {\n                            root: classes.outlinedInput,\n                            focused: classes.focused,\n                            hover: classes.hover,\n                            notchedOutline: classes.notchedOutline\n                        }\n                    }}\n                />\n\n                <TextField \n                    variant=\"outlined\"\n                    label=\"Your Phone Number\"\n                    name=\"Phone\"\n                    required\n                    value={phone}\n                    onChange={(e) => setPhone(e.target.value)}\n                    className={classes.textFields}\n                    InputLabelProps={{\n                        classes: {\n                            root: classes.label,\n                            focused: classes.focused\n                        }\n                    }}\n                    InputProps={{\n                        classes: {\n                        root: classes.outlinedInput,\n                        focused: classes.focused,\n                        hover: classes.hover,\n                        notchedOutline: classes.notchedOutline\n                        }\n                    }}\n                />\n\n                <TextField \n                    variant=\"outlined\"\n                    label=\"Message\"\n                    name=\"Message\"\n                    required\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    className={classes.textFields}\n                    InputLabelProps={{\n                        classes: {\n                            root: classes.label,\n                            focused: classes.focused\n                        }\n                    }}\n                    InputProps={{\n                        classes: {\n                            root: classes.outlinedInput,\n                            focused: classes.focused,\n                            hover: classes.hover,\n                            notchedOutline: classes.notchedOutline\n                        }\n                    }}\n                />\n\n                <Button\n                    onClick={handleSubmit}\n                    className={classes.button}\n                    fullWidth\n                    color='secondary'\n                >\n                    Send\n                </Button>\n\n            <Snackbar\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                open={open}\n                autoHideDuration={6000}\n                onClose={handleClose}\n            >\n\n                <SnackbarContent \n                    message={\n                        <Fragment>\n                            <Icon className={classes.icon}>check</Icon>\n                            <Typography>\n                                Your contact information has been saved!\n                            </Typography>\n                        </Fragment>\n                    }\n                    action={\n                        <IconButton onClick={handleClose}>\n                            <Icon style={{color: 'white'}}>close</Icon>\n                        </IconButton>\n                    }\n                    classes={{ message: classes.snackbar }}\n                />\n\n            </Snackbar>\n\n        </Paper>\n    );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}