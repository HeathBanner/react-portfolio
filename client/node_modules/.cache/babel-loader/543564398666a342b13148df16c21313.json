{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Weather/Weather.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppContext } from '../../../context/AuthContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport Search from './Search';\nimport WeatherModule from './WeatherModule';\nimport Description from './Description';\nimport weatherBG from './imgs/1x/weatherBGNew.png';\nvar useStyles = makeStyles(function (theme) {\n  var _weatherSection;\n\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      width: '100%',\n      marginTop: 180\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      transform: 'translateZ(0)'\n    },\n    weatherSection: (_weatherSection = {}, _defineProperty(_weatherSection, theme.breakpoints.up('md'), {\n      height: '160vh'\n    }), _defineProperty(_weatherSection, theme.breakpoints.up('sm'), {\n      height: '170vh'\n    }), _defineProperty(_weatherSection, theme.breakpoints.down('sm'), {\n      height: '160vh'\n    }), _defineProperty(_weatherSection, theme.breakpoints.down('xs'), {\n      height: '180vh'\n    }), _defineProperty(_weatherSection, \"backgroundImage\", \"url(\".concat(weatherBG, \")\")), _defineProperty(_weatherSection, \"backgroundSize\", 'cover'), _defineProperty(_weatherSection, \"height\", '160vh'), _defineProperty(_weatherSection, \"position\", 'relative'), _weatherSection),\n    concept: {\n      marginTop: '30px',\n      marginLeft: '80px'\n    }\n  };\n});\n\nfunction Weather(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      weather = _useState2[0],\n      setWeather = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      parsedForecast = _useState4[0],\n      setParsedForecast = _useState4[1];\n\n  var classes = useStyles();\n  var holder = useContext(AppContext);\n\n  var getVariant = function getVariant() {\n    switch (true) {\n      case holder.xs:\n        return 'h4';\n\n      case holder.sm:\n        return 'h3';\n\n      default:\n        return 'h1';\n    }\n  };\n\n  useEffect(function () {\n    fetch('https://api.openweathermap.org/data/2.5/forecast?lat=35.227085&lon=-80.843124&units=imperial&APPID=4216d1350fe31af9bf5100bb34fa72e2').then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setWeather(result);\n    });\n  }, []);\n  useEffect(function () {\n    if (!weather) {\n      return;\n    }\n\n    var dt = '';\n    var filteredResult = weather.list.filter(function (object) {\n      if (dt === '') {\n        dt = object.dt_txt.split(' ');\n        dt = dt[0];\n        return true;\n      }\n\n      var sample = object.dt_txt.split(' ');\n\n      if (dt !== sample[0]) {\n        dt = sample[0];\n        return true;\n      }\n    });\n    setParsedForecast(filteredResult);\n    props.grabWeather(filteredResult[0]);\n  }, [weather]);\n\n  function updateModule(coords) {\n    setParsedForecast('');\n    fetch(\"https://api.openweathermap.org/data/2.5/forecast?lat=\".concat(coords[0].coord.lat, \"&lon=\").concat(coords[0].coord.lon, \"&units=imperial&APPID=4216d1350fe31af9bf5100bb34fa72e2\")).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setWeather(result);\n    });\n  }\n\n  ;\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.weatherSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.concept,\n    align: \"center\",\n    color: \"primary\",\n    variant: getVariant(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Weather Concept\")), parsedForecast ? React.createElement(WeatherModule, {\n    forecast: parsedForecast,\n    city: weather.city.name,\n    country: weather.city.country,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }) : '', React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Search, {\n    updateModule: updateModule,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }));\n}\n\n;\nexport default Weather;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Weather/Weather.js"],"names":["React","useEffect","useState","useContext","AppContext","makeStyles","Grid","Typography","Search","WeatherModule","Description","weatherBG","useStyles","theme","root","display","flexWrap","justifyContent","overflow","width","marginTop","gridList","transform","weatherSection","breakpoints","up","height","down","concept","marginLeft","Weather","props","weather","setWeather","parsedForecast","setParsedForecast","classes","holder","getVariant","xs","sm","fetch","then","res","json","result","dt","filteredResult","list","filter","object","dt_txt","split","sample","grabWeather","updateModule","coords","coord","lat","lon","city","name","country"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\n\nimport { AppContext } from '../../../context/AuthContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport Search from './Search';\nimport WeatherModule from './WeatherModule';\nimport Description from './Description';\n\nimport weatherBG from './imgs/1x/weatherBGNew.png'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      width: '100%',\n      marginTop: 180\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      transform: 'translateZ(0)',\n    },\n    weatherSection: {\n        [theme.breakpoints.up('md')]: {\n            height: '160vh',\n        },\n        [theme.breakpoints.up('sm')]: {\n            height: '170vh',\n        },\n        [theme.breakpoints.down('sm')]: {\n            height: '160vh',\n        },\n        [theme.breakpoints.down('xs')]: {\n            height: '180vh',\n        },\n        backgroundImage: `url(${weatherBG})`,\n        backgroundSize: 'cover',\n        height: '160vh',\n        position: 'relative'\n    },\n    concept: {\n        marginTop: '30px',\n        marginLeft: '80px',\n    },\n}));\n  \nfunction Weather(props) {\n\n    const [weather, setWeather] = useState('');\n    const [parsedForecast, setParsedForecast] = useState('');\n\n    const classes = useStyles();\n    const holder = useContext(AppContext);\n\n    const getVariant = () => {\n        switch (true) {\n            case holder.xs:\n                return 'h4';\n            case holder.sm:\n                return 'h3';\n            default:\n                return 'h1';\n        }\n    };\n\n    useEffect(() => {\n        fetch('https://api.openweathermap.org/data/2.5/forecast?lat=35.227085&lon=-80.843124&units=imperial&APPID=4216d1350fe31af9bf5100bb34fa72e2')\n            .then(res => res.json())\n            .then((result) => { \n                setWeather(result);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (!weather) { return }\n        let dt = '';\n        const filteredResult = weather.list.filter((object) => {\n            if(dt === '') {\n                dt = object.dt_txt.split(' ');\n                dt = dt[0];\n                return true;\n            }\n            const sample = object.dt_txt.split(' ')\n            if (dt !== sample[0]) {\n                dt = sample[0];\n                return true;\n            }\n        })\n        setParsedForecast(filteredResult);\n        props.grabWeather(filteredResult[0]);\n    }, [weather]);\n\n    function updateModule(coords) {\n        setParsedForecast('');\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${coords[0].coord.lat}&lon=${coords[0].coord.lon}&units=imperial&APPID=4216d1350fe31af9bf5100bb34fa72e2`)\n            .then(res => res.json())\n            .then((result) => {\n                setWeather(result); \n            });\n    };\n\n    return (\n        <Grid container className={classes.weatherSection}>\n\n            <Grid item xs={12}>\n\n                <Typography className={classes.concept} align=\"center\" color=\"primary\" variant={getVariant()}>\n                    Weather Concept\n                </Typography>\n\n            </Grid>\n                    \n            {\n                parsedForecast ?\n\n                <WeatherModule \n                    forecast={parsedForecast}\n                    city={weather.city.name}\n                    country={weather.city.country}\n                />\n                    : \n                ''\n            }\n\n            <Grid item xs={12}>\n\n                <Search updateModule={updateModule} />\n\n            </Grid>\n\n            <Description />\n\n        </Grid>\n    );\n};\n \nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}