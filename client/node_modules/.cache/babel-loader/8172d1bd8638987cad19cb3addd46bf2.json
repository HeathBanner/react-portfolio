{"ast":null,"code":"import _objectSpread from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Home/FriendSideBar.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GridList, GridListTile, GridListTileBar, ListSubheader, IconButton, Icon, Typography } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      // overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      width: '100%',\n      // height: 450,\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      // overflow: 'hidden',\n      // backgroundColor: theme.palette.background.paper,\n      margin: '0 auto'\n    },\n    subheader: {\n      textAlign: 'center',\n      margin: '20px 0px'\n    },\n    tile: {\n      marginRight: '10px',\n      width: '100%'\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)'\n    }\n  };\n});\n\nfunction Friends(props) {\n  var classes = useStyles();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      friends = _useState2[0],\n      setFriends = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loaded = _useState4[0],\n      setLoaded = _useState4[1];\n\n  useEffect(function () {\n    if (!loaded && props.user) {\n      console.log(props.user._id);\n      fetch('/api/social/getFriends', {\n        method: 'POST',\n        body: JSON.stringify({\n          id: props.user._id\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        console.log(result);\n        setFriends(_objectSpread({}, result));\n        setLoaded(true);\n      });\n    }\n\n    ;\n  });\n\n  function renderFriends() {\n    if (loaded) {\n      console.log(friends); // return (\n      //     friends.map((friend, index) => {\n      //         return (\n      //             <GridListTile cols={1}  className={classes.tile} key={friend._id} >\n      //                 <img src={friend.skyline} />\n      //                 <GridListTileBar \n      //                     title={friend.username}\n      //                     actionIcon={\n      //                         <IconButton className={classes.icon}>\n      //                             <Icon>exit_to_app</Icon>\n      //                         </IconButton>\n      //                     }\n      //                 />\n      //             </GridListTile>\n      //         )\n      //     })  \n      // );\n    } else {\n      return React.createElement(Typography, {\n        variant: \"h3\",\n        align: \"center\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Sorry, no photos \", \"\\xAF|_(\\u30C4)_/\\xAF\");\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cellHeight: 180,\n    col: 2.5,\n    className: classes.gridList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(GridListTile, {\n    key: \"Subheader\",\n    cols: 2,\n    style: {\n      height: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(ListSubheader, {\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.subheader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Friends\"))), renderFriends()));\n}\n\nexport default Friends;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Home/FriendSideBar.js"],"names":["React","Fragment","useState","useEffect","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","Icon","Typography","useStyles","theme","root","display","flexWrap","justifyContent","backgroundColor","palette","background","paper","gridList","width","margin","subheader","textAlign","tile","marginRight","icon","color","Friends","props","classes","friends","setFriends","loaded","setLoaded","user","console","log","_id","fetch","method","body","JSON","stringify","id","headers","then","res","json","result","renderFriends","height"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GridList, GridListTile, GridListTileBar, ListSubheader, IconButton, Icon, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        // overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        width: '100%',\n        // height: 450,\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        // overflow: 'hidden',\n        // backgroundColor: theme.palette.background.paper,\n        margin: '0 auto',\n    },\n    subheader: {\n        textAlign: 'center',\n        margin: '20px 0px',\n    },\n    tile: {\n        marginRight: '10px',\n        width: '100%',\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n}));\n\nfunction Friends(props) {\n\n    const classes = useStyles();\n\n    const [friends, setFriends] = useState({});\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        if((!loaded) && (props.user)) {\n            console.log(props.user._id)\n            fetch('/api/social/getFriends', {\n                method: 'POST',\n                body: JSON.stringify({id: props.user ._id}),\n                headers: {'Content-Type': 'application/json'}\n            }).then(res => res.json())\n            .then((result) => {\n                console.log(result);\n                setFriends({...result})\n                setLoaded(true);\n            });\n        };\n    });\n\n    function renderFriends() {\n        \n        if(loaded){\n            console.log(friends)\n            // return (\n            //     friends.map((friend, index) => {\n            //         return (\n            //             <GridListTile cols={1}  className={classes.tile} key={friend._id} >\n            //                 <img src={friend.skyline} />\n            //                 <GridListTileBar \n            //                     title={friend.username}\n            //                     actionIcon={\n            //                         <IconButton className={classes.icon}>\n            //                             <Icon>exit_to_app</Icon>\n            //                         </IconButton>\n            //                     }\n            //                 />\n            //             </GridListTile>\n            //         )\n            //     })  \n            // );\n        } else {\n            return (\n                <Typography variant=\"h3\" align=\"center\" color=\"textSecondary\" >\n                    Sorry, no photos {`¯|_(ツ)_/¯`}\n                </Typography>\n            );\n        }\n    }\n\n    return (\n        <div className=\"col-12\">\n                <GridList cellHeight={180} col={2.5} className={classes.gridList}>\n                    <GridListTile key=\"Subheader\" cols={2} style={{height: 'auto'}}>\n                        <ListSubheader component=\"div\">\n                            <Typography variant=\"h4\" className={classes.subheader}>Friends</Typography>\n                        </ListSubheader>\n                    </GridListTile>\n                    {renderFriends()}\n                </GridList>\n        </div>\n    );\n}\n\nexport default Friends;"]},"metadata":{},"sourceType":"module"}