{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Social/Story.js\";\nimport React, { Fragment, useContext, useState } from 'react';\nimport { AppContext } from '../../../context/AuthContext';\nimport { TextField, Icon, Fab } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Moment from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      color: 'black !important'\n    },\n    postStory: {\n      marginLeft: '10px',\n      backgroundColor: 'rgb(255, 145, 71)'\n    },\n    form: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '80%',\n      margin: '20px auto'\n    },\n    textField: {\n      width: '80%',\n      fontSize: '1.5rem'\n    },\n    underline: {\n      '&:before': {\n        borderBottom: '1px solid rgb(129, 0, 206) !important'\n      },\n      '&:after': {\n        borderBottom: '2px solid rgb(255, 145, 71) !important'\n      },\n      '&:hover:before': {\n        borderBottom: '2px solid rgb(129, 0, 206) !important'\n      }\n    },\n    label: {\n      fontSize: '1.5rem',\n      '&.Mui-focused': {\n        color: 'rgb(255, 145, 71)'\n      }\n    },\n    helperText: {\n      fontSize: '1.5rem'\n    }\n  };\n});\n\nvar Story = function Story() {\n  var classes = useStyles();\n  var holder = useContext(AppContext);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      story = _useState2[0],\n      setStory = _useState2[1];\n\n  var handleInputChange = function handleInputChange(e) {\n    var value = e.target.value;\n    setStory(value);\n  };\n\n  var handleStoryPost = function handleStoryPost() {\n    var userId = holder.auth._id;\n    var infoId = holder.auth.info._id;\n    var time = Moment();\n    fetch('/api/social/newStory', {\n      method: 'POST',\n      body: JSON.stringify({\n        userId: userId,\n        infoId: infoId,\n        story: story,\n        time: time\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      setStory('');\n      holder.getNewStory();\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textField,\n    FormHelperTextProps: {\n      className: classes.helperText\n    },\n    InputProps: {\n      classes: {\n        underline: classes.underline\n      }\n    },\n    InputLabelProps: {\n      className: classes.label\n    },\n    multiline: true,\n    fullWidth: false,\n    rowsMax: \"8\",\n    label: \"Story\",\n    helperText: \"Story here...\",\n    name: \"setStory\",\n    value: story,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Fab, {\n    className: classes.postStory,\n    onClick: handleStoryPost,\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"create\"))));\n};\n\nexport default Story;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Social/Story.js"],"names":["React","Fragment","useContext","useState","AppContext","TextField","Icon","Fab","makeStyles","Moment","useStyles","theme","root","color","postStory","marginLeft","backgroundColor","form","display","alignItems","justifyContent","width","margin","textField","fontSize","underline","borderBottom","label","helperText","Story","classes","holder","story","setStory","handleInputChange","e","value","target","handleStoryPost","userId","auth","_id","infoId","info","time","fetch","method","body","JSON","stringify","headers","then","res","json","user","getNewStory","className"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useState } from 'react';\n\nimport { AppContext } from '../../../context/AuthContext';\n\nimport { TextField, Icon, Fab } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        color: 'black !important',\n    },\n    postStory: {\n        marginLeft: '10px',\n        backgroundColor: 'rgb(255, 145, 71)'\n    },\n    form: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '80%',\n        margin: '20px auto',\n    },\n    textField: {\n        width: '80%',\n        fontSize: '1.5rem',\n    },\n    underline: {\n        '&:before': {\n            borderBottom: '1px solid rgb(129, 0, 206) !important',\n        },\n        '&:after': {\n            borderBottom: '2px solid rgb(255, 145, 71) !important',\n        },\n        '&:hover:before': {\n            borderBottom: '2px solid rgb(129, 0, 206) !important',\n        },\n    },\n    label: {\n        fontSize: '1.5rem',\n        '&.Mui-focused': {\n            color: 'rgb(255, 145, 71)'\n        },\n    },\n    helperText: {\n        fontSize: '1.5rem',\n    },\n}));\n\nconst Story = () => {\n    \n    const classes = useStyles();\n    const holder = useContext(AppContext);\n    \n    const [story, setStory] = useState('');\n\n    const handleInputChange = (e) => {\n        const { value } = e.target;\n        setStory(value);\n    };\n\n    const handleStoryPost = () => {\n        const userId = holder.auth._id;\n        const infoId = holder.auth.info._id;\n        const time = Moment();\n        fetch('/api/social/newStory', {\n            method: 'POST',\n            body: JSON.stringify({ userId, infoId, story, time }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.json())\n            .then((user) => {\n                setStory('');\n                holder.getNewStory();\n            });\n    };\n\n    return (\n        <Fragment>\n\n            <div className={classes.form}>\n\n                <TextField\n                    className={classes.textField}\n                    FormHelperTextProps={{ className: classes.helperText }}\n                    InputProps={{ classes: {\n                        underline: classes.underline,\n                         \n                        }\n                    }}\n                    InputLabelProps={{ className: classes.label }}\n                    multiline\n                    fullWidth={false}\n                    rowsMax=\"8\"\n                    label=\"Story\"\n                    helperText=\"Story here...\"\n                    name=\"setStory\"\n                    value={story}\n                    onChange={handleInputChange}\n                />\n\n                <Fab\n                    className={classes.postStory}\n                    onClick={handleStoryPost}\n                    size=\"small\"\n                    color=\"primary\"\n                >\n                    <Icon>create</Icon>\n                </Fab>\n            \n            </div>\n\n        </Fragment>\n    );\n};\n\nexport default Story;\n"]},"metadata":{},"sourceType":"module"}