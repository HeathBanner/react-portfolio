{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Social/ProfileShell/Story.js\";\nimport React, { Fragment, useContext } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\nimport Moment from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      // marginTop: '40px',\n      color: 'black !important' // width: '60% !important',\n      // flexWrap: 'wrap',\n      // flexDirection: 'column',\n\n    },\n    postStory: {\n      marginLeft: '10px',\n      backgroundColor: 'rgb(255, 145, 71)'\n    },\n    form: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '80%',\n      margin: '20px auto'\n    },\n    underline: {\n      '&:before': {\n        borderBottom: '1px solid rgb(129, 0, 206) !important'\n      },\n      '&:after': {\n        borderBottom: '2px solid rgb(255, 145, 71) !important'\n      },\n      '&:hover:before': {\n        borderBottom: '2px solid rgb(129, 0, 206) !important'\n      }\n    },\n    label: {\n      '&.Mui-focused': {\n        color: 'rgb(255, 145, 71)'\n      }\n    }\n  };\n});\n\nfunction Story() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      story = _React$useState2[0],\n      setStory = _React$useState2[1];\n\n  var classes = useStyles();\n  var auth = useContext(AuthContext);\n\n  function handleInputChange(e) {\n    var value = e.target.value;\n    setStory(value);\n  }\n\n  function handleStoryPost(e) {\n    e.preventDefault();\n    var userId = auth.user._id;\n    var infoId = auth.user.info._id;\n    var time = Moment();\n    fetch('/api/social/newStory', {\n      method: 'POST',\n      body: JSON.stringify({\n        userId: userId,\n        infoId: infoId,\n        story: story,\n        time: time\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      setStory('');\n      auth.updateDidMount();\n    });\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleStoryPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(TextField // className={classes.root}\n  , {\n    InputProps: {\n      classes: {\n        underline: classes.underline\n      }\n    },\n    InputLabelProps: {\n      className: classes.label\n    },\n    multiline: true,\n    fullWidth: false,\n    rowsMax: \"8\",\n    label: \"Story\",\n    helperText: \"Story here...\",\n    name: \"setStory\",\n    value: story,\n    onChange: handleInputChange // InputLabelProps={{className: classes.label}}\n    // inputProps={{className: classes.label}}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(Fab, {\n    type: \"submit\",\n    size: \"small\",\n    className: classes.postStory,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"create\"))));\n}\n\nexport default Story;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Social/ProfileShell/Story.js"],"names":["React","Fragment","useContext","AuthContext","TextField","FormControl","makeStyles","Icon","Fab","Moment","useStyles","theme","root","color","postStory","marginLeft","backgroundColor","form","display","alignItems","justifyContent","width","margin","underline","borderBottom","label","Story","useState","story","setStory","classes","auth","handleInputChange","e","value","target","handleStoryPost","preventDefault","userId","user","_id","infoId","info","time","fetch","method","body","JSON","stringify","headers","then","res","json","updateDidMount","className"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport AuthContext from '../../../context/AuthContext';\n\n\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\n\nimport Moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        // marginTop: '40px',\n        color: 'black !important',\n        // width: '60% !important',\n        // flexWrap: 'wrap',\n        // flexDirection: 'column',\n    },\n    postStory: {\n        marginLeft: '10px',\n        backgroundColor: 'rgb(255, 145, 71)'\n    },\n    form: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '80%',\n        margin: '20px auto',\n    },\n    underline: {\n        '&:before': {\n            borderBottom: '1px solid rgb(129, 0, 206) !important',\n        },\n        '&:after': {\n            borderBottom: '2px solid rgb(255, 145, 71) !important',\n        },\n        '&:hover:before': {\n            borderBottom: '2px solid rgb(129, 0, 206) !important',\n        },\n    },\n    label: {\n        '&.Mui-focused': {\n            color: 'rgb(255, 145, 71)'\n        },\n    },\n}))\n\n\nfunction Story() {\n    \n    const [story, setStory] = React.useState('')\n\n    const classes = useStyles();\n    const auth = useContext(AuthContext)\n\n    function handleInputChange(e) {\n        const { value } = e.target\n        setStory(value)\n    }\n\n    function handleStoryPost(e) {\n        e.preventDefault();\n        const userId = auth.user._id;\n        const infoId = auth.user.info._id;\n        const time = Moment();\n        fetch('/api/social/newStory', {\n            method: 'POST',\n            body: JSON.stringify({userId: userId, infoId: infoId,story: story, time: time}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((user) => {\n            setStory('');\n            auth.updateDidMount()\n        })\n    }\n\n    return (\n        <Fragment>\n            <form className={classes.form} onSubmit={handleStoryPost}>\n                    <TextField\n                        // className={classes.root}\n                        InputProps={{classes:{underline: classes.underline}}}\n                        InputLabelProps={{className: classes.label}}\n                        multiline\n                        fullWidth={false}\n                        rowsMax=\"8\"\n                        label=\"Story\"\n                        helperText=\"Story here...\"\n                        name=\"setStory\"\n                        value={story}\n                        onChange={handleInputChange}\n                        // InputLabelProps={{className: classes.label}}\n                        // inputProps={{className: classes.label}}\n                    />\n                    <Fab type=\"submit\" size=\"small\" className={classes.postStory} color=\"primary\"><Icon>create</Icon></Fab>\n            </form>\n        </Fragment>\n    );\n}\n\nexport default Story;"]},"metadata":{},"sourceType":"module"}