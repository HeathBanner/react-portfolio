{"ast":null,"code":"import _defineProperty from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/AppCard/Grid.js\";\nimport React from 'react';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { useMediaQuery, GridList, GridListTile } from '@material-ui/core';\nimport Card from './Card';\nvar useStyles = makeStyles(function (theme) {\n  var _root;\n\n  return {\n    root: (_root = {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden'\n    }, _defineProperty(_root, theme.breakpoints.down('md'), {\n      paddingLeft: '100px'\n    }), _defineProperty(_root, theme.breakpoints.down('lg'), {\n      paddingLeft: '100px'\n    }), _defineProperty(_root, theme.breakpoints.down('sm'), {\n      paddingLeft: '80px'\n    }), _defineProperty(_root, theme.breakpoints.down('xs'), {\n      paddingLeft: '0px'\n    }), _root),\n    gridList: {\n      flexWrap: 'nowrap',\n      transform: 'translateZ(0)'\n    },\n    tile: {// width: '400px !important',\n    },\n    title: {\n      color: theme.palette.primary.light\n    },\n    titleBar: {\n      background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n    }\n  };\n});\nvar apps = [{\n  title: 'Future Scaper',\n  description: 'This app uses the USDA database to help our users form better and more precise landscaping projects.',\n  image: '/imgs/logo.png',\n  website: 'https://futurescaper.herokuapp.com/',\n  repo: 'https://github.com/HeathBanner/FutureScaper'\n}, {\n  title: 'Scraper Boy',\n  description: \"Scraper Boy currently pulls articles from CNN's US and World sections and stores it with in the database. User are then allowed to comment or favorite each article.\",\n  image: '/imgs/logo.png',\n  website: 'https://scrapeyboi.herokuapp.com/',\n  repo: 'https://github.com/HeathBanner/Scraper'\n}, {\n  title: 'Roam',\n  description: 'ROAM is a travel app where the user can login and navigate around the world to different travel destinations.',\n  image: '/imgs/logo.png',\n  website: 'https://snappytravelapp.herokuapp.com/',\n  repo: 'https://github.com/Pawhurr/Roam'\n}];\nexport default function SingleLineGridList() {\n  var classes = useStyles();\n  var theme = useTheme();\n  var xs = useMediaQuery(theme.breakpoints.down('xs'));\n  var sm = useMediaQuery(theme.breakpoints.down('sm'));\n  var md = useMediaQuery(theme.breakpoints.down('md'));\n  var mdUp = useMediaQuery(theme.breakpoints.up('md'));\n\n  var gridHeight = function gridHeight() {\n    if (xs) {\n      return 310;\n    }\n\n    if (sm) {\n      return 330;\n    }\n\n    if (md) {\n      return 350;\n    }\n\n    if (mdUp) {\n      return 350;\n    }\n  };\n\n  var gridCols = function gridCols() {\n    if (xs) {\n      return 1;\n    }\n\n    if (sm) {\n      return 2;\n    }\n\n    if (md) {\n      return 2;\n    }\n\n    if (mdUp) {\n      return 2;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cellHeight: gridHeight(),\n    spacing: 8,\n    className: classes.gridList,\n    cols: gridCols(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, apps.map(function (app, index) {\n    return React.createElement(GridListTile, {\n      classes: {\n        tile: classes.tile\n      },\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Card, {\n      app: app,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  })));\n}","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/AppCard/Grid.js"],"names":["React","useTheme","makeStyles","useMediaQuery","GridList","GridListTile","Card","useStyles","theme","root","display","flexWrap","justifyContent","overflow","breakpoints","down","paddingLeft","gridList","transform","tile","title","color","palette","primary","light","titleBar","background","apps","description","image","website","repo","SingleLineGridList","classes","xs","sm","md","mdUp","up","gridHeight","gridCols","map","app","index"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { useMediaQuery, GridList, GridListTile } from '@material-ui/core';\n\nimport Card from './Card';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    [theme.breakpoints.down('md')]: {\n      paddingLeft: '100px',\n    },\n    [theme.breakpoints.down('lg')]: {\n      paddingLeft: '100px',\n    },\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: '80px',\n    },\n    [theme.breakpoints.down('xs')]: {\n      paddingLeft: '0px',\n    }\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    transform: 'translateZ(0)'\n  },\n  tile: {\n    // width: '400px !important',\n  },  \n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n}));\n\nconst apps = [\n  {\n    title: 'Future Scaper',\n    description: 'This app uses the USDA database to help our users form better and more precise landscaping projects.',\n    image: '/imgs/logo.png',\n    website: 'https://futurescaper.herokuapp.com/',\n    repo: 'https://github.com/HeathBanner/FutureScaper'\n  },\n  {\n    title: 'Scraper Boy',\n    description: \"Scraper Boy currently pulls articles from CNN's US and World sections and stores it with in the database. User are then allowed to comment or favorite each article.\",\n    image: '/imgs/logo.png',\n    website: 'https://scrapeyboi.herokuapp.com/',\n    repo: 'https://github.com/HeathBanner/Scraper'\n  },\n  {\n    title: 'Roam',\n    description: 'ROAM is a travel app where the user can login and navigate around the world to different travel destinations.',\n    image: '/imgs/logo.png',\n    website: 'https://snappytravelapp.herokuapp.com/',\n    repo: 'https://github.com/Pawhurr/Roam'\n  }\n]\n\nexport default function SingleLineGridList() {\n  \n  const classes = useStyles();\n  const theme = useTheme();\n\n  const xs = useMediaQuery(theme.breakpoints.down('xs'));\n  const sm = useMediaQuery(theme.breakpoints.down('sm'));\n  const md = useMediaQuery(theme.breakpoints.down('md'));\n  const mdUp = useMediaQuery(theme.breakpoints.up('md'));\n\n  const gridHeight = () => {\n      if(xs) {return 310}\n      if(sm) {return 330}\n      if(md) {return 350}\n      if(mdUp) {return 350}\n  }\n\n  const gridCols = () => {\n    if(xs) {return 1}\n    if(sm) {return 2}\n    if(md) {return 2}\n    if(mdUp) {return 2}\n  }\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={gridHeight()} spacing={8} className={classes.gridList} cols={gridCols()}>\n\n        {\n          apps.map((app, index) => {\n          return (\n            <GridListTile classes={{tile: classes.tile}} key={index} >\n              <Card app={app} />\n            </GridListTile>\n          );\n        })\n        }\n\n      </GridList>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}