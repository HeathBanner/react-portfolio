{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Weather/Weather.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppContext } from '../../../context/AuthContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport Search from './Search';\nimport WeatherModule from './WeatherModule';\nimport Description from './Description';\nimport weatherBG from './imgs/1x/weatherBGNew.png';\nvar useStyles = makeStyles(function (theme) {\n  var _weatherSection, _headerContainer, _concept;\n\n  return {\n    weatherSection: (_weatherSection = {}, _defineProperty(_weatherSection, theme.breakpoints.up('md'), {\n      height: '160vh'\n    }), _defineProperty(_weatherSection, theme.breakpoints.up('sm'), {\n      height: '170vh'\n    }), _defineProperty(_weatherSection, theme.breakpoints.down('sm'), {\n      height: '160vh'\n    }), _defineProperty(_weatherSection, theme.breakpoints.down('xs'), {\n      height: '250vh'\n    }), _defineProperty(_weatherSection, \"backgroundImage\", \"url(\".concat(weatherBG, \")\")), _defineProperty(_weatherSection, \"backgroundSize\", 'cover'), _defineProperty(_weatherSection, \"height\", '160vh'), _defineProperty(_weatherSection, \"position\", 'relative'), _defineProperty(_weatherSection, \"display\", 'flex'), _defineProperty(_weatherSection, \"justifyContent\", 'center'), _defineProperty(_weatherSection, \"alignItems\", 'flex-start'), _defineProperty(_weatherSection, \"alignContent\", 'flex-start'), _defineProperty(_weatherSection, \"flexWrap\", 'wrap'), _weatherSection),\n    headerContainer: (_headerContainer = {}, _defineProperty(_headerContainer, theme.breakpoints.down('xs'), {\n      height: '40vh',\n      alignItems: 'center'\n    }), _defineProperty(_headerContainer, \"height\", '30vh'), _defineProperty(_headerContainer, \"display\", 'flex'), _defineProperty(_headerContainer, \"justifyContent\", 'center'), _defineProperty(_headerContainer, \"alignItems\", 'flex-start'), _headerContainer),\n    moduleContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      flexWrap: 'wrap'\n    },\n    concept: (_concept = {}, _defineProperty(_concept, theme.breakpoints.down('sm'), {\n      marginTop: 0,\n      marginLeft: 0\n    }), _defineProperty(_concept, \"marginTop\", 30), _defineProperty(_concept, \"marginLeft\", 80), _concept)\n  };\n});\n\nvar Weather = function Weather(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      weather = _useState2[0],\n      setWeather = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      parsedForecast = _useState4[0],\n      setParsedForecast = _useState4[1];\n\n  var classes = useStyles();\n  var holder = useContext(AppContext);\n\n  var getVariant = function getVariant() {\n    switch (true) {\n      case holder.xs:\n        return 'h4';\n\n      case holder.sm:\n        return 'h3';\n\n      default:\n        return 'h1';\n    }\n  };\n\n  useEffect(function () {\n    fetch('https://api.openweathermap.org/data/2.5/forecast?lat=35.227085&lon=-80.843124&units=imperial&APPID=4216d1350fe31af9bf5100bb34fa72e2').then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setWeather(result);\n    });\n  }, []);\n  useEffect(function () {\n    if (!weather) {\n      return;\n    }\n\n    var dt = '';\n    var filteredResult = weather.list.filter(function (object) {\n      if (dt === '') {\n        dt = object.dt_txt.split(' ');\n        dt = dt[0];\n        return true;\n      }\n\n      var sample = object.dt_txt.split(' ');\n\n      if (dt !== sample[0]) {\n        dt = sample[0];\n        return true;\n      }\n    });\n    setParsedForecast(filteredResult);\n    props.grabWeather(filteredResult[0]);\n  }, [weather]);\n\n  function updateModule(coords) {\n    setParsedForecast('');\n    fetch(\"https://api.openweathermap.org/data/2.5/forecast?lat=\".concat(coords[0].coord.lat, \"&lon=\").concat(coords[0].coord.lon, \"&units=imperial&APPID=4216d1350fe31af9bf5100bb34fa72e2\")).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setWeather(result);\n    });\n  }\n\n  ;\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.weatherSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.headerContainer,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.concept,\n    color: \"primary\",\n    variant: getVariant(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Weather Concept\"), React.createElement(Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    className: classes.moduleContainer,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, parsedForecast ? React.createElement(WeatherModule, {\n    forecast: parsedForecast,\n    city: weather.city.name,\n    country: weather.city.country,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }) : '', React.createElement(Search, {\n    updateModule: updateModule,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })));\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Weather/Weather.js"],"names":["React","useEffect","useState","useContext","AppContext","makeStyles","Grid","Typography","Search","WeatherModule","Description","weatherBG","useStyles","theme","weatherSection","breakpoints","up","height","down","headerContainer","alignItems","moduleContainer","display","justifyContent","flexWrap","concept","marginTop","marginLeft","Weather","props","weather","setWeather","parsedForecast","setParsedForecast","classes","holder","getVariant","xs","sm","fetch","then","res","json","result","dt","filteredResult","list","filter","object","dt_txt","split","sample","grabWeather","updateModule","coords","coord","lat","lon","city","name","country"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\n\nimport { AppContext } from '../../../context/AuthContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport Search from './Search';\nimport WeatherModule from './WeatherModule';\nimport Description from './Description';\n\nimport weatherBG from './imgs/1x/weatherBGNew.png'\n\nconst useStyles = makeStyles(theme => ({\n    weatherSection: {\n        [theme.breakpoints.up('md')]: {\n            height: '160vh',\n        },\n        [theme.breakpoints.up('sm')]: {\n            height: '170vh',\n        },\n        [theme.breakpoints.down('sm')]: {\n            height: '160vh',\n        },\n        [theme.breakpoints.down('xs')]: {\n            height: '250vh',\n        },\n        backgroundImage: `url(${weatherBG})`,\n        backgroundSize: 'cover',\n        height: '160vh',\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        flexWrap: 'wrap',\n    },\n    headerContainer: {\n        [theme.breakpoints.down('xs')]: {\n            height: '40vh',\n            alignItems: 'center',\n        },\n        height: '30vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n    },\n    moduleContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        flexWrap: 'wrap',\n    },\n    concept: {\n        [theme.breakpoints.down('sm')]: {\n            marginTop: 0,\n            marginLeft: 0,\n        },\n        marginTop: 30,\n        marginLeft: 80,\n    },\n}));\n  \nconst Weather = (props) => {\n\n    const [weather, setWeather] = useState('');\n    const [parsedForecast, setParsedForecast] = useState('');\n\n    const classes = useStyles();\n    const holder = useContext(AppContext);\n\n    const getVariant = () => {\n        switch (true) {\n            case holder.xs:\n                return 'h4';\n            case holder.sm:\n                return 'h3';\n            default:\n                return 'h1';\n        }\n    };\n\n    useEffect(() => {\n        fetch('https://api.openweathermap.org/data/2.5/forecast?lat=35.227085&lon=-80.843124&units=imperial&APPID=4216d1350fe31af9bf5100bb34fa72e2')\n            .then(res => res.json())\n            .then((result) => { \n                setWeather(result);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (!weather) { return }\n        let dt = '';\n        const filteredResult = weather.list.filter((object) => {\n            if(dt === '') {\n                dt = object.dt_txt.split(' ');\n                dt = dt[0];\n                return true;\n            }\n            const sample = object.dt_txt.split(' ')\n            if (dt !== sample[0]) {\n                dt = sample[0];\n                return true;\n            }\n        })\n        setParsedForecast(filteredResult);\n        props.grabWeather(filteredResult[0]);\n    }, [weather]);\n\n    function updateModule(coords) {\n        setParsedForecast('');\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${coords[0].coord.lat}&lon=${coords[0].coord.lon}&units=imperial&APPID=4216d1350fe31af9bf5100bb34fa72e2`)\n            .then(res => res.json())\n            .then((result) => {\n                setWeather(result); \n            });\n    };\n\n    return (\n        <Grid container className={classes.weatherSection}>\n\n            <Grid className={classes.headerContainer} item xs={12}>\n\n                <Typography className={classes.concept} color=\"primary\" variant={getVariant()}>\n                    Weather Concept\n                </Typography>\n\n                <Description />\n\n            </Grid>\n                    \n            <Grid className={classes.moduleContainer} item xs={12}>\n\n                {\n                    parsedForecast ?\n\n                    <WeatherModule \n                        forecast={parsedForecast}\n                        city={weather.city.name}\n                        country={weather.city.country}\n                    />\n                        : \n                    ''\n                }\n\n                <Search updateModule={updateModule} />\n            \n            </Grid>\n\n        </Grid>\n    );\n};\n \nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}