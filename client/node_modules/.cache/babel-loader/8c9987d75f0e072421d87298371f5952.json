{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Story/Story.js\";\nimport React, { Fragment, useContext } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      marginTop: '40px',\n      color: 'black !important',\n      // width: '60% !important',\n      flexWrap: 'wrap',\n      flexDirection: 'column'\n    },\n    label: {\n      color: 'black !important'\n    },\n    postStory: {\n      marginTop: '50px'\n    },\n    form: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      flexDirection: 'row'\n    }\n  };\n});\n\nfunction Story() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      story = _React$useState2[0],\n      setStory = _React$useState2[1];\n\n  var classes = useStyles();\n  var auth = useContext(AuthContext);\n\n  function handleInputChange(e) {\n    var value = e.target.value;\n    setStory(value);\n  }\n\n  function handleStoryPost(e) {\n    e.preventDefault();\n    console.log(story);\n    var username = auth.user.username;\n    console.log(username);\n    fetch('/api/social/newStory', {\n      method: 'POST',\n      body: JSON.stringify({\n        username: username,\n        story: story\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (response) {\n      console.log(response);\n    });\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleStoryPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.root,\n    multiline: true,\n    fullWidth: false,\n    rowsMax: \"8\",\n    label: \"Story\",\n    helperText: \"Story here...\",\n    name: \"setStory\",\n    value: story,\n    onChange: handleInputChange,\n    InputLabelProps: {\n      className: classes.label\n    },\n    inputProps: {\n      className: classes.label\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Fab, {\n    type: \"submit\",\n    size: \"small\",\n    className: classes.postStory,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"add\")))));\n}\n\nexport default Story;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Story/Story.js"],"names":["React","Fragment","useContext","AuthContext","TextField","FormControl","makeStyles","Icon","Fab","useStyles","theme","root","marginTop","color","flexWrap","flexDirection","label","postStory","form","display","Story","useState","story","setStory","classes","auth","handleInputChange","e","value","target","handleStoryPost","preventDefault","console","log","username","user","fetch","method","body","JSON","stringify","headers","then","res","json","response","className"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport AuthContext from '../../../context/AuthContext';\n\n\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: '40px',\n        color: 'black !important',\n        // width: '60% !important',\n        flexWrap: 'wrap',\n        flexDirection: 'column',\n    },\n    label: {\n        color: 'black !important',\n    },\n    postStory: {\n        marginTop: '50px',\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flexDirection: 'row',\n    }\n}))\n\n\nfunction Story() {\n    \n    const [story, setStory] = React.useState(null)\n\n    const classes = useStyles();\n    const auth = useContext(AuthContext)\n\n    function handleInputChange(e) {\n        const { value } = e.target\n        setStory(value)\n    }\n\n    function handleStoryPost(e) {\n        e.preventDefault();\n        console.log(story);\n        const username = auth.user.username;\n        console.log(username);\n        fetch('/api/social/newStory', {\n            method: 'POST',\n            body: JSON.stringify({username: username, story: story}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((response) => {\n            console.log(response);\n        })\n    }\n\n    return (\n        <Fragment>\n            <form onSubmit={handleStoryPost}>\n                <FormControl className={classes.form}>\n                    <TextField\n                        className={classes.root}\n                        multiline\n                        fullWidth={false}\n                        rowsMax=\"8\"\n                        label=\"Story\"\n                        helperText=\"Story here...\"\n                        name=\"setStory\"\n                        value={story}\n                        onChange={handleInputChange}\n                        InputLabelProps={{className: classes.label}}\n                        inputProps={{className: classes.label}}\n                    />\n                    <Fab type=\"submit\" size=\"small\" className={classes.postStory} color=\"primary\"><Icon>add</Icon></Fab>\n                </FormControl>\n            </form>\n        </Fragment>\n    );\n}\n\nexport default Story;"]},"metadata":{},"sourceType":"module"}