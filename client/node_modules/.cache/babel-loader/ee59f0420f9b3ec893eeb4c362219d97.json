{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Social/Story.js\";\nimport React, { Fragment, useContext, useState } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport { TextField, Icon, Fab } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Moment from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      color: 'black !important'\n    },\n    postStory: {\n      marginLeft: '10px',\n      backgroundColor: 'rgb(255, 145, 71)'\n    },\n    form: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '80%',\n      margin: '20px auto'\n    },\n    underline: {\n      '&:before': {\n        borderBottom: '1px solid rgb(129, 0, 206) !important'\n      },\n      '&:after': {\n        borderBottom: '2px solid rgb(255, 145, 71) !important'\n      },\n      '&:hover:before': {\n        borderBottom: '2px solid rgb(129, 0, 206) !important'\n      }\n    },\n    label: {\n      '&.Mui-focused': {\n        color: 'rgb(255, 145, 71)'\n      }\n    }\n  };\n});\n\nvar Story = function Story() {\n  var classes = useStyles();\n  var auth = useContext(AuthContext);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      story = _useState2[0],\n      setStory = _useState2[1];\n\n  var handleInputChange = function handleInputChange(e) {\n    var value = e.target.value;\n    setStory(value);\n  };\n\n  var handleStoryPost = function handleStoryPost(e) {\n    e.preventDefault();\n    var userId = auth.user._id;\n    var infoId = auth.user.info._id;\n    var time = Moment();\n    fetch('/api/social/newStory', {\n      method: 'POST',\n      body: JSON.stringify({\n        userId: userId,\n        infoId: infoId,\n        story: story,\n        time: time\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      setStory('');\n      auth.updateNewStory();\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleStoryPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    InputProps: {\n      classes: {\n        underline: classes.underline\n      }\n    },\n    InputLabelProps: {\n      className: classes.label\n    },\n    multiline: true,\n    fullWidth: false,\n    rowsMax: \"8\",\n    label: \"Story\",\n    helperText: \"Story here...\",\n    name: \"setStory\",\n    value: story,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Fab, {\n    type: \"submit\",\n    size: \"small\",\n    className: classes.postStory,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"create\"))));\n};\n\nexport default Story;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/Social/Story.js"],"names":["React","Fragment","useContext","useState","AuthContext","TextField","Icon","Fab","makeStyles","Moment","useStyles","theme","root","color","postStory","marginLeft","backgroundColor","form","display","alignItems","justifyContent","width","margin","underline","borderBottom","label","Story","classes","auth","story","setStory","handleInputChange","e","value","target","handleStoryPost","preventDefault","userId","user","_id","infoId","info","time","fetch","method","body","JSON","stringify","headers","then","res","json","updateNewStory","className"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useState } from 'react';\n\nimport AuthContext from '../../../context/AuthContext';\n\nimport { TextField, Icon, Fab } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        color: 'black !important',\n    },\n    postStory: {\n        marginLeft: '10px',\n        backgroundColor: 'rgb(255, 145, 71)'\n    },\n    form: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '80%',\n        margin: '20px auto',\n    },\n    underline: {\n        '&:before': {\n            borderBottom: '1px solid rgb(129, 0, 206) !important',\n        },\n        '&:after': {\n            borderBottom: '2px solid rgb(255, 145, 71) !important',\n        },\n        '&:hover:before': {\n            borderBottom: '2px solid rgb(129, 0, 206) !important',\n        },\n    },\n    label: {\n        '&.Mui-focused': {\n            color: 'rgb(255, 145, 71)'\n        },\n    },\n}));\n\nconst Story = () => {\n    \n    const classes = useStyles();\n    const auth = useContext(AuthContext);\n    \n    const [story, setStory] = useState('');\n\n    const handleInputChange = (e) => {\n        const { value } = e.target;\n        setStory(value);\n    };\n\n    const handleStoryPost = (e) => {\n        e.preventDefault();\n        const userId = auth.user._id;\n        const infoId = auth.user.info._id;\n        const time = Moment();\n\n        fetch('/api/social/newStory', {\n            method: 'POST',\n            body: JSON.stringify({ userId, infoId, story, time }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.json())\n            .then((user) => {\n                setStory('');\n                auth.updateNewStory();\n            });\n    };\n\n    return (\n        <Fragment>\n\n            <form className={classes.form} onSubmit={handleStoryPost}>\n\n                <TextField\n                    InputProps={{ classes: { underline: classes.underline } }}\n                    InputLabelProps={{ className: classes.label }}\n                    multiline\n                    fullWidth={false}\n                    rowsMax=\"8\"\n                    label=\"Story\"\n                    helperText=\"Story here...\"\n                    name=\"setStory\"\n                    value={story}\n                    onChange={handleInputChange}\n                />\n\n                <Fab type=\"submit\" size=\"small\" className={classes.postStory} color=\"primary\">\n                    <Icon>create</Icon>\n                </Fab>\n            \n            </form>\n\n        </Fragment>\n    );\n};\n\nexport default Story;"]},"metadata":{},"sourceType":"module"}