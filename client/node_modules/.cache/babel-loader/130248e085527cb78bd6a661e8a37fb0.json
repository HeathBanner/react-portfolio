{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/MtnDream/Blog/Article.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Avatar } from '@material-ui/core';\nimport Nav from '../Navigation/Nav';\nvar fontSizes = {\n  h1: '6rem',\n  h2: '3.75rem',\n  h3: '3rem',\n  h4: '2.125rem',\n  h5: '1.5rem',\n  h6: '1.25rem'\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      marginTop: 60,\n      marginBottom: 80,\n      padding: 40,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      flexWrap: 'wrap'\n    },\n    articlesContainer: {\n      paddingLeft: '20%',\n      paddingRight: 40\n    },\n    infoContainer: {\n      position: 'relative',\n      height: 60,\n      marginTop: 20,\n      paddingLeft: 80,\n      display: 'inline-flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      alignContent: 'center',\n      flexWrap: 'wrap',\n      flexBasis: 'auto'\n    },\n    avatar: {\n      height: 60,\n      width: 60,\n      position: 'absolute',\n      top: 0,\n      left: 0\n    },\n    readLength: {\n      color: 'rgba(0, 0, 0, 0.54)'\n    }\n  };\n});\n\nvar Article = function Article(_ref) {\n  var match = _ref.match;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      article = _useState2[0],\n      setArticle = _useState2[1];\n\n  useEffect(function () {\n    var title = match.params.title;\n    fetch('/api/blog/getArticle', {\n      method: 'POST',\n      body: JSON.stringify({\n        title: title\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setArticle(result);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  var classes = useStyles();\n\n  if (!article) {\n    return '';\n  }\n\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    style: {\n      height: 60\n    },\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    className: classes.container,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      fontSize: fontSizes[article.title.textStyle],\n      fontFamily: \"\".concat(article.title.font, \", Helvetica, Arial, sans-serif\"),\n      fontWeight: article.title.bold ? 'bold' : 'normal',\n      fontStyle: article.title.italic ? 'italic' : 'normal',\n      textDecoration: article.title.underline ? 'underline' : 'none',\n      textAlign: article.title.justify,\n      color: article.title.color,\n      backgroundColor: article.title.highlight ? '#ffff00' : 'none',\n      marginTop: parseInt(article.title.marginTop),\n      marginBottom: parseInt(article.title.marginBottom),\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, article.title.text), React.createElement(Typography, {\n    style: {\n      fontSize: fontSizes[article.description.textStyle],\n      fontFamily: \"\".concat(article.description.font, \", Helvetica, Arial, sans-serif\"),\n      textAlign: article.description.justify,\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, article.description.text), React.createElement(\"div\", {\n    className: classes.infoContainer,\n    style: {\n      width: article.readLength.justify === 'flex-start' ? '100%' : 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    src: \"https://media.licdn.com/dms/image/C4E03AQESXvxigX8NfQ/profile-displayphoto-shrink_800_800/0?e=1571875200&v=beta&t=jVs0jK8YKBHrOOcmnghTMtN9bhPfu7rH9MHADyTboBY\",\n    alt: \"Terri Banner Profile Photo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Terri Banner\")), React.createElement(Typography, {\n    className: classes.readLength,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Aug 21 \", \" \\u2022 \", \" \".concat(article.readLength.text, \" min read\"))), React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: article.jumbotron.justify\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      marginTop: article.jumbotron.marginTop,\n      marginBottom: article.jumbotron.marginBottom,\n      width: '50%'\n    },\n    src: article.jumbotron.src,\n    alt: article.title.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })), article.body.map(function (section, index) {\n    if (section.isText) {\n      return React.createElement(Typography, {\n        style: {\n          width: '100%',\n          fontSize: fontSizes[section.textStyle],\n          fontFamily: \"\".concat(section.font, \", Helvetica, Arial, sans-serif\"),\n          fontWeight: section.bold ? 'bold' : 'normal',\n          fontStyle: section.italic ? 'italic' : 'normal',\n          textDecoration: section.underline ? 'underline' : 'none',\n          textAlign: section.justify,\n          color: section.color,\n          backgroundColor: section.highlight ? '#ffff00' : 'none',\n          marginTop: parseInt(section.marginTop),\n          marginBottom: parseInt(section.marginBottom)\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, section.text);\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: section.justify\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: section.src,\n      alt: section.alt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }));\n  })));\n};\n\nexport default Article;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Showcase/MtnDream/Blog/Article.js"],"names":["React","useEffect","useState","Fragment","makeStyles","Grid","Typography","Avatar","Nav","fontSizes","h1","h2","h3","h4","h5","h6","useStyles","theme","container","marginTop","marginBottom","padding","display","justifyContent","alignItems","flexWrap","articlesContainer","paddingLeft","paddingRight","infoContainer","position","height","alignContent","flexBasis","avatar","width","top","left","readLength","color","Article","match","article","setArticle","title","params","fetch","method","body","JSON","stringify","headers","then","res","json","result","catch","error","console","log","classes","fontSize","textStyle","fontFamily","font","fontWeight","bold","fontStyle","italic","textDecoration","underline","textAlign","justify","backgroundColor","highlight","parseInt","text","description","jumbotron","src","map","section","index","isText","alt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Avatar } from '@material-ui/core';\n\nimport Nav from '../Navigation/Nav';\n\nconst fontSizes = {\n    h1: '6rem',\n    h2: '3.75rem',\n    h3: '3rem',\n    h4: '2.125rem',\n    h5: '1.5rem',\n    h6: '1.25rem',\n};\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        marginTop: 60,\n        marginBottom: 80,\n        padding: 40,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        flexWrap: 'wrap',\n    },\n    articlesContainer: {\n        paddingLeft: '20%',\n        paddingRight: 40,\n    },\n    infoContainer: {\n        position: 'relative',\n        height: 60,\n        marginTop: 20,\n        paddingLeft: 80,\n        display: 'inline-flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n        flexBasis: 'auto',\n    },\n    avatar: {\n        height: 60,\n        width: 60,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    readLength: {\n        color: 'rgba(0, 0, 0, 0.54)',\n    },\n}));\n\nconst Article = ({ match }) => {\n\n    const [article, setArticle] = useState('');\n\n    useEffect(() => {\n        const title = match.params.title;\n        fetch('/api/blog/getArticle', {\n            method: 'POST',\n            body: JSON.stringify({ title }),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                setArticle(result);\n            })\n            .catch((error) => { console.log(error); });\n    }, []);\n\n    const classes = useStyles();\n\n    if (!article) { return '' }\n    return (\n        <Grid container>\n            \n            <Grid style={{ height: 60 }} item xs={12}>\n\n                <Nav />\n\n            </Grid>\n            <Grid className={classes.container} item xs={12}>\n\n                <Typography\n                    style={{\n                        fontSize: fontSizes[article.title.textStyle],\n                        fontFamily: `${article.title.font}, Helvetica, Arial, sans-serif`,\n                        fontWeight: article.title.bold ? 'bold' : 'normal',\n                        fontStyle: article.title.italic ? 'italic' : 'normal',\n                        textDecoration: article.title.underline ? 'underline' : 'none',\n                        textAlign: article.title.justify,\n                        color: article.title.color,\n                        backgroundColor: article.title.highlight ? '#ffff00' : 'none',\n                        marginTop: parseInt(article.title.marginTop),\n                        marginBottom: parseInt(article.title.marginBottom),\n                        width: '100%',\n                    }}\n                >\n                    {article.title.text}\n                </Typography>\n\n                <Typography\n                    style={{\n                        fontSize: fontSizes[article.description.textStyle],\n                        fontFamily: `${article.description.font}, Helvetica, Arial, sans-serif`,\n                        textAlign: article.description.justify,\n                        width: '100%',\n                    }}                \n                >\n                    {article.description.text}\n                </Typography>\n\n                <div\n                    className={classes.infoContainer}\n                    style={{ width: article.readLength.justify === 'flex-start' ? '100%' : 'auto' }}\n                >\n\n                    <Avatar\n                        className={classes.avatar}\n                        src={`https://media.licdn.com/dms/image/C4E03AQESXvxigX8NfQ/profile-displayphoto-shrink_800_800/0?e=1571875200&v=beta&t=jVs0jK8YKBHrOOcmnghTMtN9bhPfu7rH9MHADyTboBY`}\n                        alt=\"Terri Banner Profile Photo\"\n                    />\n\n                    <div style={{ width: '100%' }}>\n                        <Typography>\n                            Terri Banner\n                        </Typography>\n                    </div>\n\n                    <Typography className={classes.readLength}>\n                        {`Aug 21 `} &#8226; {` ${article.readLength.text} min read`}\n                    </Typography>\n\n                </div>\n\n                <div\n                    style={{\n                        width: '100%',\n                        display: 'flex',\n                        justifyContent: article.jumbotron.justify,\n                    }}\n                >\n                    <img\n                        style={{\n                            marginTop: article.jumbotron.marginTop,\n                            marginBottom: article.jumbotron.marginBottom,\n                            width: '50%',\n                        }}\n                        src={article.jumbotron.src}\n                        alt={article.title.text}\n                    />\n                </div>\n\n                {\n                    article.body.map((section, index) => {\n                        if (section.isText) {\n                            return (\n                                <Typography\n                                    style={{\n                                        width: '100%',\n                                        fontSize: fontSizes[section.textStyle],\n                                        fontFamily: `${section.font}, Helvetica, Arial, sans-serif`,\n                                        fontWeight: section.bold ? 'bold' : 'normal',\n                                        fontStyle: section.italic ? 'italic' : 'normal',\n                                        textDecoration: section.underline ? 'underline' : 'none',\n                                        textAlign: section.justify,\n                                        color: section.color,\n                                        backgroundColor: section.highlight ? '#ffff00' : 'none',\n                                        marginTop: parseInt(section.marginTop),\n                                        marginBottom: parseInt(section.marginBottom),    \n                                    }}\n                                    key={index}\n                                >\n                                    {section.text}\n                                </Typography>\n                            );\n                        }\n                        return (\n                            <div\n                                style={{\n                                    width: '100%',\n                                    display: 'flex',\n                                    justifyContent: section.justify,\n                                }}\n                            >\n                                <img src={section.src} alt={section.alt} />\n                            </div>\n                        );\n                    })\n                }\n\n            </Grid>\n\n        </Grid>\n    );\n};\n\nexport default Article;\n"]},"metadata":{},"sourceType":"module"}