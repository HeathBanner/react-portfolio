{"ast":null,"code":"import _objectSpread from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Social/ProfileShell/Timeline.js\";\nimport React, { useContext, Fragment, useState, useEffect } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport Moment from 'react-moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, TextField, Collapse, List, ListItem, ListItemText, ListItemAvatar, Divider, Typography, Avatar, Icon, IconButton } from '@material-ui/core';\nimport GetMoment from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  var _root;\n\n  return {\n    root: (_root = {}, _defineProperty(_root, theme.breakpoints.down('xs'), {\n      width: '90%'\n    }), _defineProperty(_root, \"paddingTop\", '10px'), _defineProperty(_root, \"paddingBottom\", '10px'), _defineProperty(_root, \"width\", '80%'), _defineProperty(_root, \"margin\", '0 auto'), _root),\n    listItem: {\n      marginTop: '20px'\n    },\n    form: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    Collapse: {\n      marginBottom: '20px'\n    }\n  };\n});\n\nfunction Timeline(props) {\n  var classes = useStyles();\n  var auth = useContext(AuthContext);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      openComment = _useState2[0],\n      setOpenComment = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      commentInput = _useState4[0],\n      setCommentInput = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      storyIDs = _useState6[0],\n      setStoryIDs = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      stories = _useState8[0],\n      setStories = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      onLoad = _useState10[0],\n      setOnLoad = _useState10[1];\n\n  useEffect(function () {\n    if (auth.isLoaded && auth.newStory) {\n      console.log('AUTH IS LOADED');\n      console.log(auth);\n      getStories();\n      auth.updateLoaded(auth.user, false);\n      auth.updateNewStory(auth.user, false);\n    }\n\n    if (!onLoad && auth.user) {\n      setOnLoad(true);\n      console.log('RESET');\n      var storyStorage = [];\n      var storyIDList = {};\n      var test = [];\n      auth.user.info.authored_stories.map(function (story, index) {\n        storyIDList[story._id] = false;\n        storyStorage.push(story);\n      });\n      test = storyStorage.sort(function (a, b) {\n        return new Date(b.time) - new Date(a.time);\n      });\n      console.log(test);\n      setStoryIDs(storyIDList);\n      setStories(storyStorage);\n      setOnLoad(true);\n    }\n  });\n\n  function getStories() {\n    fetch('/api/social/friendStories', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: auth.user.info\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      var storyStorage = result;\n      var storyIDList = {};\n      auth.user.info.authored_stories.map(function (story, index) {\n        storyIDList[story._id] = false;\n        storyStorage.push(story);\n      });\n      storyStorage.sort(function (a, b) {\n        return new Date(b.time) - new Date(a.time);\n      });\n      console.log(storyStorage);\n      setStories(storyStorage);\n      setStoryIDs(storyIDList);\n    });\n  }\n\n  function handleDelete(id) {\n    console.log(id);\n    fetch('/api/social/deleteStory', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: id\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      console.log(user); // auth.updateAuth(user);\n    });\n  }\n\n  function handleCommentInput(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setCommentInput(value);\n  }\n\n  function handleCommentSubmit(e, id) {\n    e.preventDefault();\n    var time = GetMoment();\n    var data = {\n      time: time,\n      id: id,\n      userId: auth.user._id,\n      comment: commentInput\n    };\n    console.log(data);\n    fetch('/api/social/newComment', {\n      method: 'POST',\n      body: JSON.stringify({\n        data: data\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      setCommentInput('');\n      auth.updateDidMount();\n    });\n  }\n\n  ;\n\n  function renderTimeline() {\n    console.log(auth.user);\n\n    if (stories) {\n      return stories.map(function (story, index) {\n        return React.createElement(Fragment, {\n          key: story._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(Paper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          className: classes.listItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(ListItemAvatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          alt: story._id,\n          src: \"/imgs/avatar.jpg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: \"\".concat(story.authored_by.username, \": \").concat(story.text),\n          secondary: React.createElement(Moment, {\n            date: story.time,\n            format: 'dddd h:mm a',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          onClick: function onClick() {\n            return expandComment(story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, storyIDs ? storyIDs[story._id] ? 'expand_less' : 'expand_more' : false)), React.createElement(IconButton, {\n          onClick: function onClick() {\n            return handleDelete(story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, \"delete_outline\"))), React.createElement(Collapse, {\n          className: classes.collapse,\n          in: storyIDs ? storyIDs[story._id] : false,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(List, {\n          disablePadding: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, renderComments(story.comments)), React.createElement(\"form\", {\n          className: classes.form,\n          onSubmit: function onSubmit(e) {\n            return handleCommentSubmit(e, story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          name: \"123\",\n          value: commentInput,\n          variant: \"outlined\",\n          label: \"Add a comment\",\n          onChange: handleCommentInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, \"add_circle\"))))));\n      });\n    } else {\n      return '';\n    }\n  }\n\n  function renderComments(comments) {\n    var commentList = [];\n\n    if (comments.length < 5) {\n      commentList = comments.slice(0, comments.length);\n    } else {\n      commentList = comments.slice(0, 5);\n    }\n\n    return commentList.map(function (comment, index) {\n      return React.createElement(Fragment, {\n        key: comment.time,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(ListItem, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: \"\".concat(comment.authored_by.username, \": \").concat(comment.text),\n        secondary: React.createElement(Moment, {\n          date: comment.time,\n          format: 'dddd h:mm a',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })));\n    });\n  }\n\n  ;\n\n  function expandComment(id) {\n    var newCommentState = !storyIDs[id];\n    console.log(newCommentState);\n    setStoryIDs(_objectSpread({}, storyIDs, _defineProperty({}, id, newCommentState)));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, renderTimeline()));\n}\n\nexport default Timeline;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/react-portfolio/client/src/components/Social/ProfileShell/Timeline.js"],"names":["React","useContext","Fragment","useState","useEffect","AuthContext","Moment","makeStyles","Grid","Paper","TextField","Collapse","List","ListItem","ListItemText","ListItemAvatar","Divider","Typography","Avatar","Icon","IconButton","GetMoment","useStyles","theme","root","breakpoints","down","width","listItem","marginTop","form","display","alignItems","marginBottom","Timeline","props","classes","auth","openComment","setOpenComment","commentInput","setCommentInput","storyIDs","setStoryIDs","stories","setStories","onLoad","setOnLoad","isLoaded","newStory","console","log","getStories","updateLoaded","user","updateNewStory","storyStorage","storyIDList","test","info","authored_stories","map","story","index","_id","push","sort","a","b","Date","time","fetch","method","body","JSON","stringify","id","headers","then","res","json","result","handleDelete","handleCommentInput","e","target","name","value","handleCommentSubmit","preventDefault","data","userId","comment","updateDidMount","renderTimeline","authored_by","username","text","expandComment","collapse","renderComments","comments","commentList","length","slice","newCommentState"],"mappings":"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","sourcesContent":["import React, { useContext, Fragment, useState, useEffect } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport Moment from 'react-moment';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, TextField, Collapse, List, ListItem, ListItemText, ListItemAvatar, Divider, Typography, Avatar, Icon, IconButton} from '@material-ui/core';\n\nimport GetMoment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.down('xs')]: {\n            width: '90%',\n        },\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        width: '80%',\n        margin: '0 auto'\n    },\n    listItem: {\n        marginTop: '20px',\n    },\n    form: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    Collapse: {\n        marginBottom: '20px',\n    },\n}));\n\nfunction Timeline(props) {\n\n    const classes = useStyles();\n    const auth = useContext(AuthContext);\n\n    const [openComment, setOpenComment] = useState(true);\n    const [commentInput, setCommentInput] = useState('');\n\n    const [storyIDs, setStoryIDs] = useState({});\n    const [stories, setStories] = useState('')\n    const [onLoad, setOnLoad] = useState(false);\n\n\n    useEffect(() => {\n        \n        if((auth.isLoaded)&&(auth.newStory)) {\n            console.log('AUTH IS LOADED')\n            console.log(auth)\n            getStories();\n            auth.updateLoaded(auth.user, false);\n            auth.updateNewStory(auth.user, false);\n        }\n\n        if((!onLoad) && (auth.user)){\n            setOnLoad(true)\n            console.log('RESET')\n                var storyStorage = [];\n                var storyIDList = {};\n                var test = [];\n                auth.user.info.authored_stories.map((story, index) => {\n                    storyIDList[story._id] = false\n                    storyStorage.push(story);\n                });\n                test = storyStorage.sort((a, b) => {\n                    return new Date(b.time) - new Date(a.time);\n                })\n                console.log(test);\n            setStoryIDs(storyIDList);\n            setStories(storyStorage);\n            setOnLoad(true);\n        }   \n    });\n\n    function getStories() {\n        fetch('/api/social/friendStories', {\n            method: 'POST',\n            body: JSON.stringify({id: auth.user.info}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((result) => {\n            var storyStorage = result;\n            var storyIDList = {};\n            auth.user.info.authored_stories.map((story, index) => {\n                storyIDList[story._id] = false\n                storyStorage.push(story);\n            });\n            storyStorage.sort((a, b) => {\n                return new Date(b.time) - new Date(a.time);\n            })\n            console.log(storyStorage);\n            setStories(storyStorage);\n            setStoryIDs(storyIDList)\n        })\n    }\n    \n    function handleDelete(id) {\n        console.log(id);\n        fetch('/api/social/deleteStory', {\n            method: 'POST',\n            body: JSON.stringify({id: id}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((user) => {\n            console.log(user);\n            // auth.updateAuth(user);\n        })\n    }\n\n    function handleCommentInput(e) {\n        const { name, value } = e.target;\n        setCommentInput(value);\n    }\n\n    function handleCommentSubmit(e, id) {\n        e.preventDefault();\n        const time = GetMoment();\n        const data = {\n            time: time,\n            id: id,\n            userId: auth.user._id,\n            comment: commentInput,\n        };\n        console.log(data);\n        fetch('/api/social/newComment', {\n            method: 'POST',\n            body: JSON.stringify({data}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((user) => {\n            setCommentInput('');\n            auth.updateDidMount()\n        });\n    };\n\n    function renderTimeline() {\n        console.log(auth.user)\n        if(stories){\n            return (\n                stories.map((story, index) => (\n                    <Fragment key={story._id}>\n                    <Paper>\n                        <ListItem className={classes.listItem}>\n                            <ListItemAvatar><Avatar alt={story._id} src=\"/imgs/avatar.jpg\" /></ListItemAvatar>\n                            <ListItemText \n                                primary={`${story.authored_by.username}: ${story.text}`} \n                                secondary={\n                                    <Moment date={story.time} format={'dddd h:mm a'} />\n                                }\n                            >\n                            </ListItemText>\n                            <IconButton onClick={() => expandComment(story._id)}>\n                                <Icon>{storyIDs ? storyIDs[story._id] ? 'expand_less' : 'expand_more' : false}</Icon>\n                            </IconButton>\n                            <IconButton onClick={() => handleDelete(story._id)}>\n                                <Icon>delete_outline</Icon>\n                            </IconButton>\n                        </ListItem>\n                        <Collapse className={classes.collapse} in={storyIDs ? storyIDs[story._id] : false} timeout=\"auto\" unmountOnExit>\n                            <List disablePadding>\n                                {renderComments(story.comments)}\n                            </List>\n                            <form className={classes.form} onSubmit={(e) => handleCommentSubmit(e, story._id)}>\n                                <TextField\n                                    name='123'\n                                    value={commentInput}\n                                    variant=\"outlined\"\n                                    label=\"Add a comment\"\n                                    onChange={handleCommentInput}\n                                >\n                                </TextField>\n                                    <IconButton type=\"submit\">\n                                        <Icon>add_circle</Icon>\n                                    </IconButton>\n                            </form>\n                        </Collapse>\n                        </Paper>\n                    </Fragment>\n                ))\n            );\n        }else {return ''}\n    }\n\n    function renderComments(comments) {\n        var commentList = [];\n        if(comments.length < 5){commentList = comments.slice(0, comments.length)}\n        else{commentList = comments.slice(0, 5)}\n        \n        return (\n            commentList.map((comment, index) => {\n                return (  \n                    <Fragment key={comment.time}>\n                        <Divider />\n                        <ListItem key={index}>\n                            <ListItemText primary={`${comment.authored_by.username}: ${comment.text}`} secondary={<Moment date={comment.time} format={'dddd h:mm a'} />} />\n                        </ListItem>\n                    </Fragment>\n                );\n            })\n        );\n    };\n\n    function expandComment(id) {\n        const newCommentState = !storyIDs[id];\n        console.log(newCommentState)\n        setStoryIDs({...storyIDs, [id]: newCommentState});\n    }\n\n    return (\n        <div>\n            <List className={classes.root}>\n                {renderTimeline()}\n            </List>\n        </div>\n    );\n}\n\nexport default Timeline;"]},"metadata":{},"sourceType":"module"}