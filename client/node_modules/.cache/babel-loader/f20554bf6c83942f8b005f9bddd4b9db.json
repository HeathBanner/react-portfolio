{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Navigation/Drawer.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Jumbotron from '../../components/Jumbotron/Jumbotron';\nimport Moment from 'react-moment';\nimport FormatDate from 'moment';\nvar drawerWidth = 240;\nexport default function PersistentDrawerLeft(props) {\n  var useStyles = makeStyles(function (theme) {\n    var _toolBar;\n\n    return {\n      root: {\n        display: 'flex'\n      },\n      appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        })\n      },\n      appBarShift: {\n        width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen\n        })\n      },\n      toolBar: (_toolBar = {\n        display: 'flex',\n        alignItems: 'center',\n        flexWrap: 'nowrap'\n      }, _defineProperty(_toolBar, \"display\", 'block'), _defineProperty(_toolBar, \"textAlign\", 'center'), _defineProperty(_toolBar, \"background\", props.mood ? \"\".concat(props.mood.toolbar) : 'rgb(196, 196, 196)'), _toolBar),\n      menuButton: {\n        position: 'absolute',\n        left: '3%',\n        marginRight: theme.spacing(2),\n        color: props.mood ? \"\".concat(props.mood.menuButton) : 'white'\n      },\n      barTitle: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        display: 'inline-block',\n        color: props.mood ? \"\".concat(props.mood.barTitle) : 'white'\n      },\n      hide: {\n        display: 'none'\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0\n      },\n      drawerPaper: {\n        width: drawerWidth\n      },\n      drawerHeader: _objectSpread({\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px'\n      }, theme.mixins.toolbar, {\n        justifyContent: 'flex-end'\n      }),\n      content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        }),\n        marginLeft: -drawerWidth\n      },\n      contentShift: {\n        transition: theme.transitions.create('margin', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen\n        }),\n        marginLeft: 0\n      },\n      moment: {\n        float: 'right'\n      }\n    };\n  });\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  function getTime() {\n    date = FormatDate();\n    console.log(date);\n  }\n\n  var date = '';\n  setInterval(getTime, 1000);\n  console.log(date);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    position: \"fixed\",\n    className: clsx(classes.appBar, _defineProperty({}, classes.appBarShift, open)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    className: classes.toolBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"Open drawer\",\n    onClick: handleDrawerOpen,\n    edge: \"start\",\n    className: clsx(classes.menuButton, open && classes.hide),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"menu\")), React.createElement(Typography, {\n    className: classes.barTitle,\n    variant: \"h6\",\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Heath Banner\"), React.createElement(Moment, {\n    className: classes.moment,\n    interval: 1000,\n    date: date,\n    format: 'dddd h:mm:ss a',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }))), React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"persistent\",\n    anchor: \"left\",\n    open: open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleDrawerClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, theme.direction === 'ltr' ? React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"chevron_left\") : React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"cheveron_right\"))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, ['Inbox', 'Starred', 'Send email'].map(function (text, index) {\n    return React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"inbox\") : React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"mail\")), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }));\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }))), React.createElement(Jumbotron, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Navigation/Drawer.js"],"names":["React","clsx","makeStyles","useTheme","Drawer","CssBaseline","AppBar","Toolbar","List","Typography","Divider","IconButton","Icon","ListItem","ListItemIcon","ListItemText","Jumbotron","Moment","FormatDate","drawerWidth","PersistentDrawerLeft","props","useStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","toolBar","alignItems","flexWrap","mood","toolbar","menuButton","position","left","marginRight","spacing","color","barTitle","top","transform","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","justifyContent","content","flexGrow","contentShift","moment","float","classes","useState","open","setOpen","handleDrawerOpen","handleDrawerClose","getTime","date","console","log","setInterval","paper","direction","map","text","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Jumbotron from '../../components/Jumbotron/Jumbotron';\nimport Moment from 'react-moment';\nimport FormatDate from 'moment';\n\nconst drawerWidth = 240;\n\n\nexport default function PersistentDrawerLeft(props) {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    toolBar: {\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'nowrap',\n      // justifyContent: 'center',\n      display: 'block',\n      textAlign: 'center',\n      background: props.mood ? `${props.mood.toolbar}` : 'rgb(196, 196, 196)',\n    },\n    menuButton: {\n        position: 'absolute',\n        left: '3%',\n        marginRight: theme.spacing(2),\n        color: props.mood ? `${props.mood.menuButton}` : 'white',\n    },\n    barTitle: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      display: 'inline-block',\n      color: props.mood ? `${props.mood.barTitle}` : 'white'\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    moment: {\n      float: 'right',\n    }\n  }));\n  \n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  function getTime() {\n    date = FormatDate()\n    console.log(date)\n  }\n  var date = ''\n  setInterval(getTime, 1000);\n  console.log(date)\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar className={classes.toolBar}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <Icon>menu</Icon>\n            </IconButton>\n            <Typography className={classes.barTitle} variant=\"h6\" noWrap>\n              Heath Banner\n            </Typography>\n            <Moment className={classes.moment} interval={1000} date={date} format={'dddd h:mm:ss a'} />\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'ltr' ? <Icon>chevron_left</Icon> : <Icon>cheveron_right</Icon>}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {['Inbox', 'Starred', 'Send email'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <Icon>inbox</Icon> : <Icon>mail</Icon>}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          </Drawer>\n      </div>\n    \n    <Jumbotron />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}