{"ast":null,"code":"import _defineProperty from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Profile/Timeline.js\";\nimport React, { useContext, Fragment, useState } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport Moment from 'react-moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Collapse, List, ListItem, ListItemText, ListItemAvatar, Divider, Typography, Avatar, Icon, IconButton } from '@material-ui/core';\nimport GetMoment from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      paddingTop: '10px',\n      paddingBottom: '10px',\n      width: '80%',\n      margin: '0 auto'\n    },\n    listItem: {\n      marginTop: '20px'\n    },\n    form: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    Collapse: {\n      marginBottom: '20px'\n    }\n  };\n});\n\nfunction Timeline(props) {\n  var classes = useStyles();\n  var auth = useContext(AuthContext);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      openComment = _useState2[0],\n      setOpenComment = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      commentInput = _useState4[0],\n      setCommentInput = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      storyIDs = _useState6[0],\n      setStoryIDs = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      onLoad = _useState8[0],\n      setOnLoad = _useState8[1];\n\n  if (!onLoad && auth.user) {\n    var storyIDList = {};\n    auth.user.info.authored_stories.map(function (story, index) {\n      storyIDList[story._id] = false;\n    });\n    console.log(storyIDList);\n    setStoryIDs(storyIDList);\n    setOnLoad(true);\n  }\n\n  function handleDelete(id) {\n    console.log(id);\n    fetch('/api/social/deleteStory', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: id\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      console.log(user); // auth.updateAuth(user);\n    });\n  }\n\n  function handleCommentInput(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setCommentInput(value);\n  }\n\n  function handleCommentSubmit(e, id) {\n    e.preventDefault();\n    var username = auth.user.username;\n    var time = GetMoment();\n    console.log(id, commentInput);\n    fetch('api/social/newComment', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: id,\n        comment: commentInput,\n        username: username,\n        time: time\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      console.log(user);\n    });\n  }\n\n  ;\n\n  function renderTimeline() {\n    if (auth.user) {\n      return auth.user.info.authored_stories.map(function (story, index) {\n        return React.createElement(Fragment, {\n          key: story._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, console.log(story), React.createElement(Paper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          className: classes.listItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(ListItemAvatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          alt: story._id,\n          src: \"/imgs/avatar.jpg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: \"\".concat(story.username, \": \").concat(story.text),\n          secondary: React.createElement(Moment, {\n            date: story.time,\n            format: 'dddd h:mm a',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          onClick: function onClick() {\n            return expandComment(story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, storyIDs ? storyIDs[story._id] ? 'expand_less' : 'expand_more' : false)), React.createElement(IconButton, {\n          onClick: function onClick() {\n            return handleDelete(story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"delete_outline\"))), React.createElement(Collapse, {\n          className: classes.collapse,\n          in: storyIDs ? storyIDs[story._id] : false,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(List, {\n          disablePadding: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, console.log('?????')), React.createElement(\"form\", {\n          className: classes.form,\n          onSubmit: function onSubmit(e) {\n            return handleCommentSubmit(e, story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          name: \"123\",\n          value: commentInput,\n          variant: \"outlined\",\n          label: \"Add a comment\",\n          onChange: handleCommentInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"add_circle\"))))));\n      });\n    } else {\n      return '';\n    }\n  }\n\n  function renderComments(comments) {\n    var commentList = [];\n\n    if (comments.length < 5) {\n      commentList = comments.slice(0, comments.length);\n    } else {\n      commentList = comments.slice(0, 5);\n    }\n\n    return commentList.map(function (comment, index) {\n      console.log(comment.authored_by.username);\n      return React.createElement(ListItem, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: \"\".concat(comment.authored_by.username, \": \").concat(comment.text),\n        secondary: React.createElement(Moment, {\n          date: comment.time,\n          format: 'dddd h:mm a',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }));\n    });\n  }\n\n  ;\n\n  function expandComment(id) {\n    var newCommentState = !storyIDs[id];\n    console.log(newCommentState);\n    setStoryIDs(_objectSpread({}, storyIDs, _defineProperty({}, id, newCommentState)));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, renderTimeline()));\n}\n\nexport default Timeline;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Profile/Timeline.js"],"names":["React","useContext","Fragment","useState","AuthContext","Moment","makeStyles","Paper","TextField","Collapse","List","ListItem","ListItemText","ListItemAvatar","Divider","Typography","Avatar","Icon","IconButton","GetMoment","useStyles","theme","root","paddingTop","paddingBottom","width","margin","listItem","marginTop","form","display","alignItems","marginBottom","Timeline","props","classes","auth","openComment","setOpenComment","commentInput","setCommentInput","storyIDs","setStoryIDs","onLoad","setOnLoad","user","storyIDList","info","authored_stories","map","story","index","_id","console","log","handleDelete","id","fetch","method","body","JSON","stringify","headers","then","res","json","handleCommentInput","e","target","name","value","handleCommentSubmit","preventDefault","username","time","comment","renderTimeline","text","expandComment","collapse","renderComments","comments","commentList","length","slice","authored_by","newCommentState"],"mappings":"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","sourcesContent":["import React, { useContext, Fragment, useState } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport Moment from 'react-moment';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Collapse, List, ListItem, ListItemText, ListItemAvatar, Divider, Typography, Avatar, Icon, IconButton} from '@material-ui/core';\n\nimport GetMoment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        width: '80%',\n        margin: '0 auto'\n    },\n    listItem: {\n        marginTop: '20px',\n    },\n    form: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    Collapse: {\n        marginBottom: '20px',\n    },\n}));\n\nfunction Timeline(props) {\n\n    const classes = useStyles();\n    const auth = useContext(AuthContext);\n\n    const [openComment, setOpenComment] = useState(true);\n    const [commentInput, setCommentInput] = useState('');\n\n    const [storyIDs, setStoryIDs] = useState({});\n    const [onLoad, setOnLoad] = useState(false);\n\n    if((!onLoad) && (auth.user)){\n        var storyIDList = {};\n        auth.user.info.authored_stories.map((story, index) => {\n            storyIDList[story._id] = false\n        })\n        console.log(storyIDList)\n        setStoryIDs(storyIDList)\n        setOnLoad(true);\n    }\n\n    function handleDelete(id) {\n        console.log(id);\n        fetch('/api/social/deleteStory', {\n            method: 'POST',\n            body: JSON.stringify({id: id}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((user) => {\n            console.log(user);\n            // auth.updateAuth(user);\n        })\n    }\n\n    function handleCommentInput(e) {\n        const { name, value } = e.target;\n        setCommentInput(value);\n    }\n\n    function handleCommentSubmit(e, id) {\n        e.preventDefault();\n        const {username } = auth.user;\n        const time = GetMoment();\n        console.log(id, commentInput);\n        fetch('api/social/newComment', {\n            method: 'POST',\n            body: JSON.stringify({id: id, comment: commentInput, username: username, time: time}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((user) => {\n            console.log(user);\n        });\n    };\n\n    function renderTimeline() {\n        if(auth.user){\n            return (\n                auth.user.info.authored_stories.map((story, index) => (\n                    <Fragment key={story._id}>\n                    {console.log(story)}\n                    <Paper>\n                        <ListItem className={classes.listItem}>\n                            <ListItemAvatar><Avatar alt={story._id} src=\"/imgs/avatar.jpg\" /></ListItemAvatar>\n                            <ListItemText \n                                primary={`${story.username}: ${story.text}`} \n                                secondary={\n                                    <Moment date={story.time} format={'dddd h:mm a'} />\n                                }\n                            >\n                            </ListItemText>\n                            <IconButton onClick={() => expandComment(story._id)}>\n                                <Icon>{storyIDs ? storyIDs[story._id] ? 'expand_less' : 'expand_more' : false}</Icon>\n                            </IconButton>\n                            <IconButton onClick={() => handleDelete(story._id)}>\n                                <Icon>delete_outline</Icon>\n                            </IconButton>\n                        </ListItem>\n                        <Collapse className={classes.collapse} in={storyIDs ? storyIDs[story._id] : false} timeout=\"auto\" unmountOnExit>\n                            <List disablePadding>\n                                {console.log('?????')}\n                            </List>\n                            <form className={classes.form} onSubmit={(e) => handleCommentSubmit(e, story._id)}>\n                                <TextField\n                                name='123'\n                                value={commentInput}\n                                variant=\"outlined\"\n                                label=\"Add a comment\"\n                                onChange={handleCommentInput}\n                                >\n                                </TextField>\n                                    <IconButton type=\"submit\">\n                                        <Icon>add_circle</Icon>\n                                    </IconButton>\n                            </form>\n                        </Collapse>\n                        </Paper>\n                    </Fragment>\n                ))\n            );\n        }else {return ''}\n    }\n\n    function renderComments(comments) {\n        var commentList = [];\n        if(comments.length < 5){commentList = comments.slice(0, comments.length)}\n        else{commentList = comments.slice(0, 5)}\n        \n        return (\n            commentList.map((comment, index) => {\n                console.log(comment.authored_by.username);\n                return (  \n                    <ListItem key={index}>\n                        <ListItemText primary={`${comment.authored_by.username}: ${comment.text}`} secondary={<Moment date={comment.time} format={'dddd h:mm a'} />} />\n                    </ListItem>\n                );\n            })\n        );\n    };\n\n    function expandComment(id) {\n        const newCommentState = !storyIDs[id];\n        console.log(newCommentState)\n        setStoryIDs({...storyIDs, [id]: newCommentState});\n    }\n\n    return (\n        <div>\n            <List className={classes.root}>\n                {renderTimeline()}\n            </List>\n        </div>\n    );\n}\n\nexport default Timeline;"]},"metadata":{},"sourceType":"module"}