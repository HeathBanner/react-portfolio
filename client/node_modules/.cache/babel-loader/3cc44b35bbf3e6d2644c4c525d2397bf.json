{"ast":null,"code":"import _defineProperty from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Story/Timeline.js\";\nimport React, { useContext, Fragment, useState, useEffect } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport Moment from 'react-moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Collapse, List, ListItem, ListItemText, ListItemAvatar, Divider, Typography, Avatar, Icon, IconButton } from '@material-ui/core';\nimport GetMoment from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      paddingTop: '10px',\n      paddingBottom: '10px',\n      width: '80%',\n      margin: '0 auto'\n    },\n    listItem: {\n      marginTop: '20px' // backgroundColor: theme.palette.background.paper,\n\n    },\n    form: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    collapse: {\n      marginBottom: '20px' // backgroundColor: theme.palette.background.paper,\n\n    },\n    underline: {\n      '&:before': {\n        borderBottom: '1px solid rgb(129, 0, 206) !important'\n      },\n      '&:after': {\n        borderBottom: '2px solid rgb(255, 145, 71) !important'\n      },\n      '&:hover:before': {\n        borderBottom: '2px solid rgb(129, 0, 206) !important'\n      }\n    },\n    label: {\n      '&.Mui-focused': {\n        color: 'rgb(255, 145, 71)'\n      }\n    }\n  };\n});\n\nfunction Timeline() {\n  var classes = useStyles();\n  var auth = useContext(AuthContext);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      openComment = _useState2[0],\n      setOpenComment = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      commentInput = _useState4[0],\n      setCommentInput = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      storyIDs = _useState6[0],\n      setStoryIDs = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      friendStories = _useState8[0],\n      setFriendStories = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      onLoad = _useState10[0],\n      setOnLoad = _useState10[1];\n\n  function getStories() {\n    fetch('/api/social/friendStories', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: auth.user.info\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      var storyStorage = result;\n      var storyIDList = {};\n      auth.user.info.authored_stories.map(function (story, index) {\n        storyIDList[story._id] = false;\n        storyStorage.push(story);\n      });\n      storyStorage.sort(function (a, b) {\n        return new Date(a.time) - new Date(b.time);\n      });\n      setFriendStories(storyStorage);\n      setStoryIDs(storyIDList);\n    });\n  }\n\n  if (!onLoad && auth.user) {\n    var storyIDList = {};\n    auth.user.info.authored_stories.map(function (story, index) {\n      storyIDList[story._id] = false;\n    });\n    setStoryIDs(storyIDList);\n    setOnLoad(true);\n  }\n\n  function handleDelete(id) {\n    console.log(id);\n    fetch('/api/social/deleteStory', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: id\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {// auth.updateAuth(user);\n    });\n  }\n\n  function handleCommentInput(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setCommentInput(value);\n  }\n\n  function handleCommentSubmit(e, id) {\n    e.preventDefault();\n    var time = GetMoment();\n    var data = {\n      time: time,\n      id: id,\n      userId: auth.user._id,\n      comment: commentInput\n    };\n    console.log(id, commentInput);\n    fetch('api/social/newComment', {\n      method: 'POST',\n      body: JSON.stringify({\n        data: data\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      setCommentInput('');\n      auth.updateDidMount();\n    });\n  }\n\n  ;\n\n  function renderStories() {\n    if (friendStories) {\n      return friendStories.map(function (story, index) {\n        return React.createElement(Fragment, {\n          key: story._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(Paper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          className: classes.listItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(ListItemAvatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          alt: story._id,\n          src: \"/imgs/avatar.jpg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: story.text,\n          secondary: React.createElement(Moment, {\n            format: 'dddd h:mm a',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, story.time),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          onClick: function onClick() {\n            return expandComment(story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, storyIDs ? storyIDs[story._id] ? 'expand_less' : 'expand_more' : false)), React.createElement(IconButton, {\n          onClick: function onClick() {\n            return handleDelete(story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, \"delete_outline\"))), React.createElement(Collapse, {\n          className: classes.collapse,\n          in: storyIDs ? storyIDs[story._id] : false,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(List, {\n          disablePadding: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, renderComments(story.comments)), React.createElement(\"form\", {\n          className: classes.form,\n          onSubmit: function onSubmit(e) {\n            return handleCommentSubmit(e, story._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          name: \"123\",\n          value: commentInput,\n          variant: \"outlined\",\n          label: \"Add a comment\",\n          onChange: handleCommentInput,\n          InputProps: {\n            underline: classes.underline\n          },\n          InputLabelProps: {\n            className: classes.label\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, \"add_circle\"))))));\n      });\n    }\n  }\n\n  ;\n\n  function renderComments(comments) {\n    var commentList = [];\n\n    if (comments) {\n      if (comments.length < 5) {\n        commentList = comments.slice(0, comments.length);\n      } else {\n        commentList = comments.slice(0, 5);\n      }\n\n      commentList.sort(function (a, b) {\n        return new Date(a.time) - new Date(b.time);\n      });\n      return commentList.map(function (comment, index) {\n        return React.createElement(ListItem, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: \"\".concat(comment.authored_by.username, \": \").concat(comment.text),\n          secondary: React.createElement(Moment, {\n            date: comment.time,\n            format: 'dddd h:mm a',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }));\n      });\n    }\n  }\n\n  ;\n\n  function expandComment(id) {\n    var newCommentState = !storyIDs[id];\n    setStoryIDs(_objectSpread({}, storyIDs, _defineProperty({}, id, newCommentState)));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, auth.user ? renderStories() : ''));\n}\n\nexport default Timeline;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/components/Social/Story/Timeline.js"],"names":["React","useContext","Fragment","useState","useEffect","AuthContext","Moment","makeStyles","Paper","TextField","Collapse","List","ListItem","ListItemText","ListItemAvatar","Divider","Typography","Avatar","Icon","IconButton","GetMoment","useStyles","theme","root","paddingTop","paddingBottom","width","margin","listItem","marginTop","form","display","alignItems","collapse","marginBottom","underline","borderBottom","label","color","Timeline","classes","auth","openComment","setOpenComment","commentInput","setCommentInput","storyIDs","setStoryIDs","friendStories","setFriendStories","onLoad","setOnLoad","getStories","fetch","method","body","JSON","stringify","id","user","info","headers","then","res","json","result","storyStorage","storyIDList","authored_stories","map","story","index","_id","push","sort","a","b","Date","time","handleDelete","console","log","handleCommentInput","e","target","name","value","handleCommentSubmit","preventDefault","data","userId","comment","updateDidMount","renderStories","text","expandComment","renderComments","comments","className","commentList","length","slice","authored_by","username","newCommentState"],"mappings":"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","sourcesContent":["import React, { useContext, Fragment, useState, useEffect } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport Moment from 'react-moment';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Collapse, List, ListItem, ListItemText, ListItemAvatar, Divider, Typography, Avatar, Icon, IconButton} from '@material-ui/core';\n\nimport GetMoment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        width: '80%',\n        margin: '0 auto'\n    },\n    listItem: {\n        marginTop: '20px',\n        // backgroundColor: theme.palette.background.paper,\n    },\n    form: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    collapse: {\n        marginBottom: '20px',\n        // backgroundColor: theme.palette.background.paper,\n    },\n    underline: {\n        '&:before': {\n            borderBottom: '1px solid rgb(129, 0, 206) !important',\n            },\n        '&:after': {\n            borderBottom: '2px solid rgb(255, 145, 71) !important',\n        },\n        '&:hover:before': {\n            borderBottom: '2px solid rgb(129, 0, 206) !important',\n        }\n    },\n    label: {\n        '&.Mui-focused': {\n            color: 'rgb(255, 145, 71)'\n        }\n    },\n}));\n\nfunction Timeline() {\n\n    const classes = useStyles();\n    const auth = useContext(AuthContext);\n\n    const [openComment, setOpenComment] = useState(true);\n    const [commentInput, setCommentInput] = useState('');\n\n    const [storyIDs, setStoryIDs] = useState({});\n    const [friendStories, setFriendStories] = useState(false);\n    const [onLoad, setOnLoad] = useState(false);\n\n\n    function getStories() {\n        fetch('/api/social/friendStories', {\n            method: 'POST',\n            body: JSON.stringify({id: auth.user.info}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((result) => {\n            var storyStorage = result;\n            var storyIDList = {};\n            auth.user.info.authored_stories.map((story, index) => {\n                storyIDList[story._id] = false\n                storyStorage.push(story);\n            });\n            storyStorage.sort((a, b) => {\n                return new Date(a.time) - new Date(b.time);\n            })\n            setFriendStories(storyStorage);\n            setStoryIDs(storyIDList)\n        })\n    }\n\n    if((!onLoad) && (auth.user)){\n        var storyIDList = {};\n        auth.user.info.authored_stories.map((story, index) => {\n            storyIDList[story._id] = false\n        })\n        setStoryIDs(storyIDList)\n        setOnLoad(true);\n    }\n\n    function handleDelete(id) {\n        console.log(id);\n        fetch('/api/social/deleteStory', {\n            method: 'POST',\n            body: JSON.stringify({id: id}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((user) => {\n            // auth.updateAuth(user);\n        })\n    }\n\n    function handleCommentInput(e) {\n        const { name, value } = e.target;\n        setCommentInput(value);\n    }\n\n    function handleCommentSubmit(e, id) {\n        e.preventDefault();\n        const time = GetMoment();\n        const data = {\n            time: time,\n            id: id,\n            userId: auth.user._id,\n            comment: commentInput,\n        };\n        console.log(id, commentInput);\n        fetch('api/social/newComment', {\n            method: 'POST',\n            body: JSON.stringify({data}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((user) => {\n            setCommentInput('');\n            auth.updateDidMount()\n        });\n    };\n\n    function renderStories() {\n        if(friendStories) {\n            return (\n                friendStories.map((story, index) => {\n                    return (\n                        <Fragment key={story._id}>\n                            <Paper>\n                            <ListItem className={classes.listItem}>\n                                <ListItemAvatar><Avatar alt={story._id} src=\"/imgs/avatar.jpg\" /></ListItemAvatar>\n                                <ListItemText \n                                    primary={story.text} \n                                    secondary={\n                                        <Moment format={'dddd h:mm a'}>{story.time}</Moment>\n                                    }\n                                >\n                                </ListItemText>\n                                <IconButton onClick={() => expandComment(story._id)}>\n                                    <Icon>{storyIDs ? storyIDs[story._id] ? 'expand_less' : 'expand_more' : false}</Icon>\n                                </IconButton>\n                                <IconButton onClick={() => handleDelete(story._id)}>\n                                    <Icon>delete_outline</Icon>\n                                </IconButton>\n                        \n                            </ListItem>\n                            <Collapse className={classes.collapse} in={storyIDs ? storyIDs[story._id] : false} timeout=\"auto\" unmountOnExit>\n                                <List disablePadding>\n                                    {renderComments(story.comments)}\n                                </List>\n                                <form className={classes.form} onSubmit={(e) => handleCommentSubmit(e, story._id)}>\n                                    <TextField\n                                        name='123'\n                                        value={commentInput}\n                                        variant=\"outlined\"\n                                        label=\"Add a comment\"\n                                        onChange={handleCommentInput}\n                                        InputProps={{underline: classes.underline}}\n                                        InputLabelProps={{className: classes.label}}\n                                    />\n                                    \n                                    <IconButton type=\"submit\">\n                                        <Icon>add_circle</Icon>\n                                    </IconButton>\n                                </form>\n                            </Collapse>\n                            </Paper>\n                        </Fragment>\n                    );\n                })\n            );\n        }\n    };\n\n    function renderComments(comments) {\n        var commentList = [];\n        if(comments){\n            if(comments.length < 5){commentList = comments.slice(0, comments.length)}\n            else{commentList = comments.slice(0, 5)}\n            commentList.sort((a, b) => {\n                return new Date(a.time) - new Date(b.time);\n            })\n            return (\n                commentList.map((comment, index) => {\n                    return (  \n                        <ListItem key={index}>\n                            <ListItemText primary={`${comment.authored_by.username}: ${comment.text}`} secondary={<Moment date={comment.time} format={'dddd h:mm a'} />} />\n                        </ListItem>\n                    );\n                })\n            );\n        }\n        \n    };\n\n    function expandComment(id) {\n        const newCommentState = !storyIDs[id];\n        setStoryIDs({...storyIDs, [id]: newCommentState});\n    }\n\n    return (\n        <div>\n            <List className={classes.root}>\n                {auth.user ? renderStories() : ''}\n            </List>\n        </div>\n    );\n}\n\nexport default Timeline;"]},"metadata":{},"sourceType":"module"}