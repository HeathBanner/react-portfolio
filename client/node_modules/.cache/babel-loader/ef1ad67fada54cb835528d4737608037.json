{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/Port/portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/Port/portfolio/client/src/pages/Chat/messages/Messages.js\";\nimport React, { useEffect, useState } from 'react';\n\nfunction Messages(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var messages = props.messages,\n      user = props.user,\n      typingUsers = props.typingUsers;\n  return React.createElement(\"div\", {\n    ref: \"container\",\n    className: \"thread-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"thread\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, messages.map(function (mes) {\n    return React.createElement(\"div\", {\n      key: mes.id,\n      className: \"message-container \".concat(mes.sender === user.name && 'right'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, mes.time), React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, mes.message), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, mes.sender)));\n  }), typingUsers.map(function (name) {\n    return React.createElement(\"div\", {\n      key: name,\n      className: \"typing-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"\".concat(name, \" is typing . . .\"));\n  })));\n}\n\nexport default Messages;","map":{"version":3,"sources":["/Users/God/Desktop/github/Port/portfolio/client/src/pages/Chat/messages/Messages.js"],"names":["React","useEffect","useState","Messages","props","loaded","setLoaded","messages","user","typingUsers","map","mes","id","sender","name","time","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,kBAEIF,QAAQ,CAAC,KAAD,CAFZ;AAAA;AAAA,MAEjBG,MAFiB;AAAA,MAETC,SAFS;;AAAA,MAIhBC,QAJgB,GAIgBH,KAJhB,CAIhBG,QAJgB;AAAA,MAINC,IAJM,GAIgBJ,KAJhB,CAINI,IAJM;AAAA,MAIAC,WAJA,GAIgBL,KAJhB,CAIAK,WAJA;AAMrB,SACI;AAAK,IAAA,GAAG,EAAC,WAAT;AACJ,IAAA,SAAS,EAAC,kBADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEJ;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEF,QAAQ,CAACG,GAAT,CAAa,UAACC,GAAD,EAAO;AACnB,WACC;AACC,MAAA,GAAG,EAAEA,GAAG,CAACC,EADV;AAEC,MAAA,SAAS,8BAAuBD,GAAG,CAACE,MAAJ,KAAeL,IAAI,CAACM,IAApB,IAA4B,OAAnD,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBH,GAAG,CAACI,IAA3B,CAJD,EAKC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BJ,GAAG,CAACK,OAA9B,CADD,EAEC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBL,GAAG,CAACE,MAA3B,CAFD,CALD,CADD;AAaA,GAdD,CAFF,EAmBEJ,WAAW,CAACC,GAAZ,CAAgB,UAACI,IAAD,EAAQ;AACvB,WACC;AAAK,MAAA,GAAG,EAAEA,IAAV;AAAgB,MAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACKA,IADL,sBADD;AAKA,GAND,CAnBF,CAFI,CADJ;AAmCH;;AAED,eAAeX,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction Messages(props) {\n\n\tconst [loaded, setLoaded] = useState(false);\n\n\tconst { messages, user, typingUsers } = props;\n\n    return (\n        <div ref='container'\n\t\t\t\tclassName=\"thread-container\">\n\t\t\t\t<div className=\"thread\">\n\t\t\t\t\t{\n\t\t\t\t\t\tmessages.map((mes)=>{\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tkey={mes.id}\n\t\t\t\t\t\t\t\t\tclassName={`message-container ${mes.sender === user.name && 'right'}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"time\">{mes.time}</div>\n\t\t\t\t\t\t\t\t\t<div className=\"data\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"message\">{mes.message}</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"name\">{mes.sender}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\ttypingUsers.map((name)=>{\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={name} className=\"typing-user\">\n\t\t\t\t\t\t\t\t\t{`${name} is typing . . .`}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\n\n\t\t\t</div>\n    );\n} \n\nexport default Messages;"]},"metadata":{},"sourceType":"module"}