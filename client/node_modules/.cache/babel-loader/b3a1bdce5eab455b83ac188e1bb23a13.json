{"ast":null,"code":"'use strict';\n\nvar _createClass = require(\"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _classCallCheck = require(\"/Users/God/Desktop/github/Port/react-portfolio/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.stringNotMatching = exports.stringMatching = exports.stringNotContaining = exports.stringContaining = exports.objectNotContaining = exports.objectContaining = exports.arrayNotContaining = exports.arrayContaining = exports.anything = exports.any = exports.AsymmetricMatcher = void 0;\n\nvar _jasmineUtils = require('./jasmineUtils');\n\nvar _utils = require('./utils');\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar AsymmetricMatcher = function AsymmetricMatcher(sample) {\n  _classCallCheck(this, AsymmetricMatcher);\n\n  _defineProperty(this, 'sample', void 0);\n\n  _defineProperty(this, '$$typeof', void 0);\n\n  _defineProperty(this, 'inverse', void 0);\n\n  this.$$typeof = Symbol.for('jest.asymmetricMatcher');\n  this.sample = sample;\n};\n\nexports.AsymmetricMatcher = AsymmetricMatcher;\n\nvar Any =\n/*#__PURE__*/\nfunction (_AsymmetricMatcher) {\n  _inherits(Any, _AsymmetricMatcher);\n\n  function Any(sample) {\n    _classCallCheck(this, Any);\n\n    if (typeof sample === 'undefined') {\n      throw new TypeError('any() expects to be passed a constructor function. ' + 'Please pass one or use anything() to match any object.');\n    }\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Any).call(this, sample));\n  }\n\n  _createClass(Any, [{\n    key: \"asymmetricMatch\",\n    value: function asymmetricMatch(other) {\n      if (this.sample == String) {\n        return typeof other == 'string' || other instanceof String;\n      }\n\n      if (this.sample == Number) {\n        return typeof other == 'number' || other instanceof Number;\n      }\n\n      if (this.sample == Function) {\n        return typeof other == 'function' || other instanceof Function;\n      }\n\n      if (this.sample == Object) {\n        return typeof other == 'object';\n      }\n\n      if (this.sample == Boolean) {\n        return typeof other == 'boolean';\n      }\n\n      return other instanceof this.sample;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return 'Any';\n    }\n  }, {\n    key: \"getExpectedType\",\n    value: function getExpectedType() {\n      if (this.sample == String) {\n        return 'string';\n      }\n\n      if (this.sample == Number) {\n        return 'number';\n      }\n\n      if (this.sample == Function) {\n        return 'function';\n      }\n\n      if (this.sample == Object) {\n        return 'object';\n      }\n\n      if (this.sample == Boolean) {\n        return 'boolean';\n      }\n\n      return (0, _jasmineUtils.fnNameFor)(this.sample);\n    }\n  }, {\n    key: \"toAsymmetricMatcher\",\n    value: function toAsymmetricMatcher() {\n      return 'Any<' + (0, _jasmineUtils.fnNameFor)(this.sample) + '>';\n    }\n  }]);\n\n  return Any;\n}(AsymmetricMatcher);\n\nvar Anything =\n/*#__PURE__*/\nfunction (_AsymmetricMatcher2) {\n  _inherits(Anything, _AsymmetricMatcher2);\n\n  function Anything() {\n    _classCallCheck(this, Anything);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Anything).apply(this, arguments));\n  }\n\n  _createClass(Anything, [{\n    key: \"asymmetricMatch\",\n    value: function asymmetricMatch(other) {\n      return !(0, _jasmineUtils.isUndefined)(other) && other !== null;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return 'Anything';\n    } // No getExpectedType method, because it matches either null or undefined.\n\n  }, {\n    key: \"toAsymmetricMatcher\",\n    value: function toAsymmetricMatcher() {\n      return 'Anything';\n    }\n  }]);\n\n  return Anything;\n}(AsymmetricMatcher);\n\nvar ArrayContaining =\n/*#__PURE__*/\nfunction (_AsymmetricMatcher3) {\n  _inherits(ArrayContaining, _AsymmetricMatcher3);\n\n  function ArrayContaining(sample) {\n    var _this;\n\n    var inverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    _classCallCheck(this, ArrayContaining);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ArrayContaining).call(this, sample));\n    _this.inverse = inverse;\n    return _this;\n  }\n\n  _createClass(ArrayContaining, [{\n    key: \"asymmetricMatch\",\n    value: function asymmetricMatch(other) {\n      if (!Array.isArray(this.sample)) {\n        throw new Error(\"You must provide an array to \".concat(this.toString(), \", not '\") + typeof this.sample + \"'.\");\n      }\n\n      var result = this.sample.length === 0 || Array.isArray(other) && this.sample.every(function (item) {\n        return other.some(function (another) {\n          return (0, _jasmineUtils.equals)(item, another);\n        });\n      });\n      return this.inverse ? !result : result;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Array\".concat(this.inverse ? 'Not' : '', \"Containing\");\n    }\n  }, {\n    key: \"getExpectedType\",\n    value: function getExpectedType() {\n      return 'array';\n    }\n  }]);\n\n  return ArrayContaining;\n}(AsymmetricMatcher);\n\nvar ObjectContaining =\n/*#__PURE__*/\nfunction (_AsymmetricMatcher4) {\n  _inherits(ObjectContaining, _AsymmetricMatcher4);\n\n  function ObjectContaining(sample) {\n    var _this2;\n\n    var inverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    _classCallCheck(this, ObjectContaining);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ObjectContaining).call(this, sample));\n    _this2.inverse = inverse;\n    return _this2;\n  }\n\n  _createClass(ObjectContaining, [{\n    key: \"asymmetricMatch\",\n    value: function asymmetricMatch(other) {\n      if (typeof this.sample !== 'object') {\n        throw new Error(\"You must provide an object to \".concat(this.toString(), \", not '\") + typeof this.sample + \"'.\");\n      }\n\n      if (this.inverse) {\n        for (var property in this.sample) {\n          if ((0, _jasmineUtils.hasProperty)(other, property) && (0, _jasmineUtils.equals)(this.sample[property], other[property]) && !(0, _utils.emptyObject)(this.sample[property]) && !(0, _utils.emptyObject)(other[property])) {\n            return false;\n          }\n        }\n\n        return true;\n      } else {\n        for (var _property in this.sample) {\n          if (!(0, _jasmineUtils.hasProperty)(other, _property) || !(0, _jasmineUtils.equals)(this.sample[_property], other[_property])) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Object\".concat(this.inverse ? 'Not' : '', \"Containing\");\n    }\n  }, {\n    key: \"getExpectedType\",\n    value: function getExpectedType() {\n      return 'object';\n    }\n  }]);\n\n  return ObjectContaining;\n}(AsymmetricMatcher);\n\nvar StringContaining =\n/*#__PURE__*/\nfunction (_AsymmetricMatcher5) {\n  _inherits(StringContaining, _AsymmetricMatcher5);\n\n  function StringContaining(sample) {\n    var _this3;\n\n    var inverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    _classCallCheck(this, StringContaining);\n\n    if (!(0, _jasmineUtils.isA)('String', sample)) {\n      throw new Error('Expected is not a string');\n    }\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(StringContaining).call(this, sample));\n    _this3.inverse = inverse;\n    return _this3;\n  }\n\n  _createClass(StringContaining, [{\n    key: \"asymmetricMatch\",\n    value: function asymmetricMatch(other) {\n      var result = (0, _jasmineUtils.isA)('String', other) && other.includes(this.sample);\n      return this.inverse ? !result : result;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"String\".concat(this.inverse ? 'Not' : '', \"Containing\");\n    }\n  }, {\n    key: \"getExpectedType\",\n    value: function getExpectedType() {\n      return 'string';\n    }\n  }]);\n\n  return StringContaining;\n}(AsymmetricMatcher);\n\nvar StringMatching =\n/*#__PURE__*/\nfunction (_AsymmetricMatcher6) {\n  _inherits(StringMatching, _AsymmetricMatcher6);\n\n  function StringMatching(sample) {\n    var _this4;\n\n    var inverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    _classCallCheck(this, StringMatching);\n\n    if (!(0, _jasmineUtils.isA)('String', sample) && !(0, _jasmineUtils.isA)('RegExp', sample)) {\n      throw new Error('Expected is not a String or a RegExp');\n    }\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(StringMatching).call(this, new RegExp(sample)));\n    _this4.inverse = inverse;\n    return _this4;\n  }\n\n  _createClass(StringMatching, [{\n    key: \"asymmetricMatch\",\n    value: function asymmetricMatch(other) {\n      var result = (0, _jasmineUtils.isA)('String', other) && this.sample.test(other);\n      return this.inverse ? !result : result;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"String\".concat(this.inverse ? 'Not' : '', \"Matching\");\n    }\n  }, {\n    key: \"getExpectedType\",\n    value: function getExpectedType() {\n      return 'string';\n    }\n  }]);\n\n  return StringMatching;\n}(AsymmetricMatcher);\n\nvar any = function any(expectedObject) {\n  return new Any(expectedObject);\n};\n\nexports.any = any;\n\nvar anything = function anything() {\n  return new Anything();\n};\n\nexports.anything = anything;\n\nvar arrayContaining = function arrayContaining(sample) {\n  return new ArrayContaining(sample);\n};\n\nexports.arrayContaining = arrayContaining;\n\nvar arrayNotContaining = function arrayNotContaining(sample) {\n  return new ArrayContaining(sample, true);\n};\n\nexports.arrayNotContaining = arrayNotContaining;\n\nvar objectContaining = function objectContaining(sample) {\n  return new ObjectContaining(sample);\n};\n\nexports.objectContaining = objectContaining;\n\nvar objectNotContaining = function objectNotContaining(sample) {\n  return new ObjectContaining(sample, true);\n};\n\nexports.objectNotContaining = objectNotContaining;\n\nvar stringContaining = function stringContaining(expected) {\n  return new StringContaining(expected);\n};\n\nexports.stringContaining = stringContaining;\n\nvar stringNotContaining = function stringNotContaining(expected) {\n  return new StringContaining(expected, true);\n};\n\nexports.stringNotContaining = stringNotContaining;\n\nvar stringMatching = function stringMatching(expected) {\n  return new StringMatching(expected);\n};\n\nexports.stringMatching = stringMatching;\n\nvar stringNotMatching = function stringNotMatching(expected) {\n  return new StringMatching(expected, true);\n};\n\nexports.stringNotMatching = stringNotMatching;","map":null,"metadata":{},"sourceType":"script"}